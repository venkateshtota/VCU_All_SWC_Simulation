
##
## This template file may be renamed to 'algo.properties' and then edited in
## order to configure some aspects of RTA-BSW ConfGen and CodeGen.
##

# CanGeneral settings
#
# The following settings are copied to /Can/CanGeneral by ConfGen.
#
# CanMainFunctionBusoffPeriod
#   This parameter describes the period for cyclic call to
#   Can_MainFunction_Busoff.
#  Parameter: /Can/CanGeneral/CanMainFunctionBusoffPeriod
#  Default: 0.001
#
# CanMainFunctionModePeriod
#   This parameter describes the period for cyclic call to
#   Can_MainFunction_Mode.
#  Parameter: /Can/CanGeneral/CanMainFunctionModePeriod
#  Default: 0.001
#
# CanMultiplexedTransmission
#   Specifies if multiplexed transmission shall be supported.ON or OFF
#  Parameter: /Can/CanGeneral/CanMultiplexedTransmission
#  Default: false
#
# CanVersionInfoApi
#   Switches the Can_GetVersionInfo() API ON or OFF.
#  Parameter: /Can/CanGeneral/CanVersionInfoApi
#  Default: false
#
# CanIndex
#   Specifies the InstanceId of this module instance.
#  Parameter: /Can/CanGeneral/CanIndex
#  Default: 0
#
# CanPublicIcomSupport
#   Selects support of Pretended Network features in Can driver.
#  Parameter: /Can/CanGeneral/CanPublicIcomSupport
#  Default: false
#
# CanTimeoutDuration
#   Specifies the maximum time for blocking function until a timeout is
#   detected.
#  Parameter: /Can/CanGeneral/CanTimeoutDuration
#  Default: 1
#
# Specific Override: (none)
# Dev Error Detection: /Can/CanGeneral/CanDevErrorDetection
#

# Example:
# manprop_CanGeneral=\
# CanMainFunctionBusoffPeriod:0.001,\
# CanMainFunctionModePeriod:0.001,\
# CanMultiplexedTransmission:false,\
# CanVersionInfoApi:false,\
# CanIndex:0,\
# CanPublicIcomSupport:false,\
# CanTimeoutDuration:1




# Can Hardware Filter settings (StdCanHwFilter, ExtCanHwFilter)
#
# When the number of available mailboxes is less than the number of defined
# Can messages, which requires BASIC Can Hardware Objects to be used for RX,
# hardware filtering is applied to reduce the execution of upper software.
#
# By default, this configuration is generated with no filtering. The
# StdCanHwFilter and ExtCanHwFilter properties can be used to configure
# filtering for each type of Hardware Object.
#
# Example for Standard Can Hardware Object:
# manprop_StdCanHwFilter=\
# CanHwFilterCode:1,\
# CanHwFilterMask:0
#
# Example for Extended Can Hardware Object:
# manprop_ExtCanHwFilter=\
# CanHwFilterCode:1,\
# CanHwFilterMask:0
#
# CanHwFilterCode
#   Specifies (together with the filter mask) the identifiers range that
#   passes the hardware filter.
#  Parameter: /Can/CanConfigSet/CanHardwareObject/CanHwFilter/CanHwFilterCode
#  Default: (none)
#
# CanHwFilterMask
#   Describes a mask for hardware-based filtering of CAN identifiers.
#  Parameter: /Can/CanConfigSet/CanHardwareObject/CanHwFilter/CanHwFilterMask
#  Default: (none)
#
# Specific Override: (none)
# ConfigureBSW: Implemented
#

# Example:
# manprop_StdCanHwFilter=null




# NumberofMB settings
#
# The number of mailboxes assigned to a Can Controller can be configured in
# the algo.properties file using the following rule:
#
# NumberofMB_<shortname>=<max_mailboxes>
#
# <shortname> is the short name of the Can Controller being configured. If
# this setting is not specified there is no limit to the number of mailboxes
# for a controller.
#
# Default: (none)
#

# Example:
# NumberofMB_SAMPLE=null




# ConfigFrame settings
#
# When NumberofMB settings is provided, users can configured in the
# algo.properties file the list of Pdus so that each of them will be mapped to
# 1 specific mailbox using the following rule:
#
# ConfigFrame_<shortname>=<Pdu1_name>,<Pdu2_name>,...
#
# <shortname> is the short name of the Can Controller being configured. If
# this setting is not specified, default mailbox mapping algorithm will be
# applied.
#
# Default: (none)
#

# Example:
# ConfigFrame_SAMPLE=null




# PduTimingLimit settings
#
# If it is possible to do so, one mailbox will be assigned for each frame. If
# there are more frames than the mailbox limit, the following steps will be
# performed (in the order shown) until the limit is no longer exceeded.
#
# 1. All Standard RX messages are combined into one mailbox, all Extended RX
# messages are combined into one mailbox, all Tx messages with a period less
# than property 'PduTimingLimit' will get a dedicated mailbox.
# 2. If either the remaining number of Standard or Extended messages are
# smaller than half the remaining mailboxes then these are assigned one
# mailbox each, and the other messages are packed.
# 3. If there are more Standard and Extended messages than half of the
# remaining mailboxes then the Standard mailboxes are packed into half the
# remaining mailboxes, and the Extended messages are packed into the other
# half of the remaining mailboxes.
#
# Default: 0
#

# Example:
# PduTimingLimit=0




# MbSortingPref settings
#
# Some hardware requires that the Can Mailboxes are presented in a particular
# order, and this can be handled by setting a mailbox mapping rule. If the
# MbSortingPref rule is specified, the mailboxes will be ordered
# alphabetically, with a comma-separated list of sorting criteria.
#
# See the 'Can Mailbox Mapping' section of the user guide for more information
# about specifying the sorting criteria.
#
# Default: (none)
#

# Example:
# MbSortingPref=null




# CanController settings
#
# The following settings are copied to /Can/CanConfigSet/CanController by
# ConfGen.
#
# CanBusoffProcessing
#   Enables / disables API Can_MainFunction_BusOff() for handling busoff
#   events in polling mode.
#  Parameter: /Can/CanConfigSet/CanController/CanBusoffProcessing
#  Default: POLLING
#
# CanControllerActivation
#   Defines if a CAN controller is used in the configuration.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerActivation
#  Default: true
#
# CanControllerBaseAddress
#   Specifies the CAN controller base address.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaseAddress
#  Default: 0
#
# CanTxProcessing
#   Enables / disables API Can_MainFunction_Write() for handling PDU
#   transmission events in polling mode.
#  Parameter: /Can/CanConfigSet/CanController/CanTxProcessing
#  Default: POLLING
#
# CanWakeupFunctionalityAPI
#   Adds / removes the service Can_CheckWakeup() from the code.
#  Parameter: /Can/CanConfigSet/CanController/CanWakeupFunctionalityAPI
#  Default: false
#
# CanWakeupProcessing
#   Enables / disables API Can_MainFunction_Wakeup() for handling wakeup
#   events in polling mode.
#  Parameter: /Can/CanConfigSet/CanController/CanWakeupProcessing
#  Default: POLLING
#
# CanWakeupSupport
#   CAN driver support for wakeup over CAN Bus.
#  Parameter: /Can/CanConfigSet/CanController/CanWakeupSupport
#  Default: false
#
# Specific Override: CanController.shortname
#

# Example:
# manprop_CanController_ALL=\
# CanBusoffProcessing:POLLING,\
# CanControllerActivation:true,\
# CanControllerBaseAddress:0,\
# CanTxProcessing:POLLING,\
# CanWakeupFunctionalityAPI:false,\
# CanWakeupProcessing:POLLING,\
# CanWakeupSupport:false




# CanController/CanControllerBaudrateConfig settings
#
# The following settings are copied to
# /Can/CanConfigSet/CanController/CanControllerBaudrateConfig by ConfGen. Note
# that Fd-specific settings are found in CanControllerFdBaudrateConfig.
#
# CanControllerBaudRate
#   Specifies the baudrate of the controller in kbps.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerBaudRate
#  Default: 500
#
# CanControllerBaudRateConfigID
#   Uniquely identifies a specific baud rate configuration.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerBaudRateConfigID
#  Default: 1
#
# CanControllerPropSeg
#   Specifies propagation delay in time quantas.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerPropSeg
#  Default: 0
#
# CanControllerSeg1
#   Specifies phase segment 1 in time quantas.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerSeg1
#  Default: 10
#
# CanControllerSeg2
#   Specifies phase segment 2 in time quantas.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerSeg2
#  Default: 0
#
# CanControllerSyncJumpWidth
#   Specifies the synchronization jump width for the controller in time
#   quantas.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerSyncJumpWidth
#  Default: 0
#
# Specific Override: CanController.shortname + "/CanControllerBaudrateConfig"
#

# Example:
# manprop_CanController_ALL/CanControllerBaudrateConfig=\
# CanControllerBaudRate:500,\
# CanControllerBaudRateConfigID:1,\
# CanControllerPropSeg:0,\
# CanControllerSeg1:10,\
# CanControllerSeg2:0,\
# CanControllerSyncJumpWidth:0




# CanController/.../CanControllerFdBaudrateConfig settings
#
# The following settings are copied to /Can/CanConfigSet
# /CanController/CanControllerBaudrateConfig/CanControllerFdBaudrateConfig
#
# CanControllerFdBaudRate
#   Specifies the data segment baud rate of the controller in kbps.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerFdBaudrateConfig/CanControllerFdBaudRate
#  Default: 800
#
# CanControllerPropSeg
#   Specifies propagation delay in time quantas.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerFdBaudrateConfig/CanControllerPropSeg
#  Default: 0
#
# CanControllerSeg1
#   Specifies phase segment 1 in time quantas.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerFdBaudrateConfig/CanControllerSeg1
#  Default: 10
#
# CanControllerSeg2
#   Specifies phase segment 2 in time quantas.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerFdBaudrateConfig/CanControllerSeg2
#  Default: 0
#
# CanControllerSyncJumpWidth
#   Specifies the synchronization jump width for the controller in time
#   quantas.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerFdBaudrateConfig/CanControllerSyncJumpWidth
#  Default: 0
#
# CanControllerTxBitRateSwitch
#   Specifies if the bit rate switching shall be used for transmissions.
#  Parameter: /Can/CanConfigSet/CanController/CanControllerBaudrateConfig
#               /CanControllerFdBaudrateConfig/CanControllerTxBitRateSwitch
#  Default: true
#
# Specific Override: CanController.shortname +
#                "/CanControllerFdBaudrateConfig"
#

# Example:
# manprop_CanController_ALL/CanControllerFdBaudrateConfig=\
# CanControllerFdBaudRate:800,\
# CanControllerPropSeg:0,\
# CanControllerSeg1:10,\
# CanControllerSeg2:0,\
# CanControllerSyncJumpWidth:0,\
# CanControllerTxBitRateSwitch:true




# CanHardwareObject settings
#
# The following settings are copied to /Can/CanConfigSet/CanHardwareObject by
# ConfGen.
#
# CanHandleType
#   Specifies the type (Full-CAN or Basic-CAN) of a hardware object.
#  Parameter: /Can/CanConfigSet/CanHardwareObject/CanHandleType
#  Default: FULL
#
# CanHwObjectCount
#   Number of hardware objects used to implement one HOH.
#  Parameter: /Can/CanConfigSet/CanHardwareObject/CanHwObjectCount
#  Default: 1
#
# Specific Override: CanHardwareObject.shortname
#

# Example:
# manprop_CanHardwareObject_ALL=\
# CanHandleType:FULL,\
# CanHwObjectCount:1




# CanIfCtrlDrvCfg settings
#
# The following settings are copied to /CanIf/CanIfCtrlDrvCfg by ConfGen.
#
# CanIfRbCtrlDrvPrefix
#   The CanIfRbCtrlDrvPrefix parameter is used to configure the symbolic names
#   of CanObjectIds. When a mismatch with the CanHardwareObject Prefix
#   generated by the MCAL is detected (which will normally cause compilation
#   errors), configure CanIfRbCtrlDrvPrefix accordingly.
#  Parameter: /CanIf/CanIfCtrlDrvCfg/CanIfRbCtrlDrvPrefix
#  Default: CanConf_CanHardwareObject
#
# Specific Override: (none)
#

# Example:
# manprop_CanIfCtrlDrvCfg=\
# CanIfRbCtrlDrvPrefix:CanConf_CanHardwareObject




# CanIfInitCfg settings
#
# The following settings are copied to /CanIf/CanIfInitCfg by ConfGen.
#
# CanIfInitCfgSet
#   Selects the CAN Interface specific configuration setup.
#  Parameter: /CanIf/CanIfInitCfg/CanIfInitCfgSet
#  Default: 0
#
# Specific Override: (none)
#

# Example:
# manprop_CanIfInitCfg=\
# CanIfInitCfgSet:0




# CanIfBufferCfg settings
#
# The following settings are copied to /CanIf/CanIfInitCfg/CanIfBufferCfg by
# ConfGen.
#
# CanIfBufferSize
#   This parameter defines the number of CanIf Tx L-PDUs which can be buffered
#   in one Txbuffer.
#  Parameter: /CanIf/CanIfInitCfg/CanIfBufferCfg/CanIfBufferSize
#  Default: 0
#
# Specific Override: (none)
#

# Example:
# manprop_CanIfBufferCfg=\
# CanIfBufferSize:0




# CanIfDispatchCfg settings
#
# The following settings are copied to /CanIf/CanIfDispatchCfg by ConfGen.
#
# CanIfDispatchUserCtrlBusOffUL
#   This parameter defines the upper layer (UL) module to which the
#   notifications of all ControllerBusOff events from the CAN Driver modules
#   have to be routed via <User_ControllerBusOff> There is no possibility to
#   configure no upper layer (UL) module as the provider of
#   <User_ControllerBusOff>.
#  Parameter: /CanIf/CanIfDispatchCfg/CanIfDispatchUserCtrlBusOffUL
#  Default: CAN_SM
#
# CanIfDispatchUserCtrlModeIndicationUL
#   This parameter defines the upper layer (UL) module to which the
#   notifications of all ControllerTransition events from the CAN Driver
#   modules have to be routed via <User_ControllerModeIndication>.
#  Parameter: /CanIf/CanIfDispatchCfg/CanIfDispatchUserCtrlModeIndicationUL
#  Default: CAN_SM
#
# CanIfDispatchUserTrcvModeIndicationName
#   This parameter defines the name of <User_TrcvModeIndication>.
#  Parameter: /CanIf/CanIfDispatchCfg/CanIfDispatchUserTrcvModeIndicationName
#  Default: CAN_SM
#
# Specific Override: (none)
# ConfigureBSW: Always Created
#

# Example:
# manprop_CanIfDispatchCfg=\
# CanIfDispatchUserCtrlBusOffUL:CAN_SM,\
# CanIfDispatchUserCtrlModeIndicationUL:CAN_SM,\
# CanIfDispatchUserTrcvModeIndicationName:CAN_SM




# CanIfPublicCfg settings
#
# The following settings are copied to /CanIf/CanIfPublicCfg by ConfGen.
#
# CanIfPublicReadRxPduDataApi
#   Enables / Disables the API CanIf_ReadRxPduData() for reading received
#   L-SDU data.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicReadRxPduDataApi
#  Default: false
#
# CanIfPublicReadRxPduNotifyStatusApi
#   Enables and disables the API for reading the notification status of
#   receive L-PDUs.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicReadRxPduNotifyStatusApi
#  Default: true
#
# CanIfPublicReadTxPduNotifyStatusApi
#   Enables and disables the API for reading the notification status of
#   transmit L-PDUs.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicReadTxPduNotifyStatusApi
#  Default: true
#
# CanIfPublicSetDynamicTxIdApi
#   Enables and disables the API for reconfiguration of the CAN Identifier for
#   each Transmit L-PDU.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicSetDynamicTxIdApi
#  Default: false
#
# CanIfPublicTxBuffering
#   Enables and disables the buffering of transmit L-PDUs (rejected by the
#   CanDrv) within the CAN Interface module.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicTxBuffering
#  Default: false
#
# CanIfPublicTxConfirmPollingSupport
#   Configuration parameter to enable/disable the API to poll for Tx
#   Confirmation state.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicTxConfirmPollingSupport
#  Default: false
#
# CanIfPublicVersionInfoApi
#   Enables and disables the API for reading the version information about the
#   CAN Interface.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicVersionInfoApi
#  Default: false
#
# CanIfPublicCancelTransmitSupport
#   Configuration parameter to enable/disable dummy API for upper layer
#   modules which allows to request the cancellation of an I-PDU.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicCancelTransmitSupport
#  Default: false
#
# CanIfPublicErrorPassiveSupport
#   This parameter defines whether Error Passive Support is configured(TRUE)
#   or not(FALSE).
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicErrorPassiveSupport
#  Default: false
#
# CanIfPublicMultipleDrvSupport
#   Selects support for multiple CAN Drivers.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicMultipleDrvSupport
#  Default: false
#
# CanIfPublicCanIfLiteConfiguration
#   This parameter defines whether CanIf Lite configuration is required(TRUE)
#   or not(FALSE).
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicCanIfLiteConfiguration
#  Default: false
#
# CanIfPublicUserTpTxInOfflineMode
#   This parameter configures whether CANTP/USER Pdus have to be
#   transmitted(TRUE) or not(FALSE) when the TxPdu Mode is OFFLINE.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicUserTpTxInOfflineMode
#  Default: false
#
# CanIfPublicWakeupCheckValidSupport
#   Selects support for wake up validation.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicWakeupCheckValidSupport
#  Default: false
#
# CanIfPublicPnSupport
#   Selects support of Partial Network features in CanIf.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicPnSupport
#  Default: false
#
# CanIfPublicBusoffRecoveryfromRxIndication
#   Configuration parameter to make busoff recovery from Rx indication
#   optional.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfPublicBusoffRecoveryfromRxIndication
#  Default: false
#
# CanIfTriggerTransmitSupport
#   Enables the CanIf_TriggerTransmit API at Pre-Compile-Time.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfTriggerTransmitSupport
#  Default: false
#
# CanIfTxOfflineActiveSupport
#   Determines wether TxOffLineActive feature (see SWS_CANIF_00072) is
#   supported by CanIf.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfTxOfflineActiveSupport
#  Default: false
#
# CanIfWakeupSupport
#   Enables the CanIf_CheckWakeup API at Pre-Compile-Time.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfWakeupSupport
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /CanIf/CanIfPublicCfg/CanIfPublicDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_CanIfPublicCfg=\
# CanIfPublicReadRxPduDataApi:false,\
# CanIfPublicReadRxPduNotifyStatusApi:true,\
# CanIfPublicReadTxPduNotifyStatusApi:true,\
# CanIfPublicSetDynamicTxIdApi:false,\
# CanIfPublicTxBuffering:false,\
# CanIfPublicTxConfirmPollingSupport:false,\
# CanIfPublicVersionInfoApi:false,\
# CanIfPublicCancelTransmitSupport:false,\
# CanIfPublicErrorPassiveSupport:false,\
# CanIfPublicMultipleDrvSupport:false,\
# CanIfPublicCanIfLiteConfiguration:false,\
# CanIfPublicUserTpTxInOfflineMode:false,\
# CanIfPublicWakeupCheckValidSupport:false,\
# CanIfPublicPnSupport:false,\
# CanIfPublicBusoffRecoveryfromRxIndication:false,\
# CanIfTriggerTransmitSupport:false,\
# CanIfTxOfflineActiveSupport:false,\
# CanIfWakeupSupport:false




# CanIfRbCalibrationSupport settings
#
# The following settings are copied to
# /CanIf/CanIfPublicCfg/CanIfRbCalibrationSupport by ConfGen.
#
# CanIfRbCalibration
#   This parameter defines whether CanIf supports calibration (of Tx CanId, Rx
#   CanId, Tx DLC, Rx DLC and assigning Node for the Pdus) or not.
#  Parameter: /CanIf/CanIfPublicCfg/CanIfRbCalibrationSupport
#               /CanIfRbCalibration
#  Default: false
#
# Specific Override: (none)
# ConfigureBSW: Always Created
#

# Example:
# manprop_CanIfRbCalibrationSupport=\
# CanIfRbCalibration:false




# CanIfPrivateCfg settings
#
# The following settings are copied to /CanIf/CanIfPrivateCfg by ConfGen.
#
# CanIfPrivateDlcCheck
#   Selects whether the DLC check is supported.
#  Parameter: /CanIf/CanIfPrivateCfg/CanIfPrivateDlcCheck
#  Default: false
#
# Specific Override: (none)
# ConfigureBSW: Always Created
#

# Example:
# manprop_CanIfPrivateCfg=\
# CanIfPrivateDlcCheck:false




# CanIfCtrlCfg settings
#
# The following settings are copied to /CanIf/CanIfCtrlDrvCfg/CanIfCtrlCfg by
# ConfGen.
#
# CanIfCtrlWakeupSupport
#   This parameter defines if a respective controller of the referenced CAN
#   Driver modules is queriable for wake up events.
#  Parameter: /CanIf/CanIfCtrlDrvCfg/CanIfCtrlCfg/CanIfCtrlWakeupSupport
#  Default: false
#
# Specific Override: (none)
#

# Example:
# manprop_CanIfCtrlCfg=\
# CanIfCtrlWakeupSupport:false




# CanIfTxPduCfg settings
#
# The following settings are copied to /CanIf/CanIfInitCfg/CanIfTxPduCfg by
# ConfGen.
#
# CanIfTxPduReadNotifyStatus
#   Enables and disables transmit confirmation for each transmit CAN L-SDU for
#   reading its notification status.
#  Parameter: /CanIf/CanIfInitCfg/CanIfTxPduCfg/CanIfTxPduReadNotifyStatus
#  Default: false
#
# CanIfTxPduType
#   Defines the type of each transmit CAN L-PDU.
#  Parameter: /CanIf/CanIfInitCfg/CanIfTxPduCfg/CanIfTxPduType
#  Default: STATIC
#
# CanIfTxPduTruncation
#   Enables/disables truncation of PDUs that exceed the configured size.
#  Parameter: /CanIf/CanIfInitCfg/CanIfTxPduCfg/CanIfTxPduTruncation
#  Default: false
#
# Specific Override: CanIfTxPduCfg.shortname
#

# Example:
# manprop_CanIfTxPduCfg_ALL=\
# CanIfTxPduReadNotifyStatus:false,\
# CanIfTxPduType:STATIC,\
# CanIfTxPduTruncation:false




# CanIfRxPduCfg settings
#
# The following settings are copied to /CanIf/CanIfInitCfg/CanIfRxPduCfg by
# ConfGen.
#
# CanIfRxPduReadData
#   Enables and disables the Rx buffering for reading of received L-SDU data.
#  Parameter: /CanIf/CanIfInitCfg/CanIfRxPduCfg/CanIfRxPduReadData
#  Default: false
#
# CanIfRxPduReadNotifyStatus
#   Enables and disables receive indication for each receive CAN L-SDU for
#   reading its notification status.
#  Parameter: /CanIf/CanIfInitCfg/CanIfRxPduCfg/CanIfRxPduReadNotifyStatus
#  Default: true
#
# Specific Override: CanIfRxPduCfg.shortname
#

# Example:
# manprop_CanIfRxPduCfg_ALL=\
# CanIfRxPduReadData:false,\
# CanIfRxPduReadNotifyStatus:true




# CanIf software filter settings (typeCanIfSwFilter)
#
# RTA-BSW supports a default software filtering from an input DBC file. The
# default method of this software filtering is a Configuration List which
# includes a list of CANIDs defined from the DBC file. You can redefine the
# ordering using the typeCanIfSwFilter parameter.
#
# The following values are supported:
# * LIST_CFG : filtering by list of CFG - Auto-generated based on DBC input
# (this is the default)
# * RANGE_ID : If typeCanIfSwFilter is set to RANGE_ID, you must configure the
# range of the relevant CanID type (STANDARD or EXTENDED).
# * MASK_ID : If typeCanIfSwFilter is set to MASK_ID, you must configure the
# MASK of each RxPdu.
#
# In order to use RANGE_ID, set the upper and lower CanID as follows (for
# STANDARD CanIDs):
# manprop_StdCanIfHrhRangeCfg=\
# CanIfHrhRangeRxPduLowerCanId:9,\
# CanIfHrhRangeRxPduUpperCanId:10
#
# Alternatively, when using EXTENDED CanIDs:
# manprop_ExtCanIfHrhRangeCfg=\
# CanIfHrhRangeRxPduLowerCanId:11,\
# CanIfHrhRangeRxPduUpperCanId:12
#
# In order to use MASK_ID, configure the MASK of each RxPdu using the
# following rules:
# * The property name should be:
# `manprop_CanIfRxPduCanIdMask_<shortName_CanIfRxPduCanIdMask>`.
# * The CANIDs to pass filtering shall be evaluated by the formula:
# (IncomingCanID & MASK) == (BASE_ID & MASK).
# * BASE_ID is auto-generated by RTA-BSW from the DBC file for each defined RX
# CAN_ID.
# For example:
# manprop_CanIfRxPduCanIdMask_RxFrame1_Can_Network_CANNODE_0=511
# manprop_CanIfRxPduCanIdMask_RxFrame2_Can_Network_CANNODE_0=511
#
# Default: (none)
#

# Example:
# manprop_typeCanIfSwFilter=null




# CanIf filter range settings (ExtCanIfHrhRangeCfg, StdCanIfHrhRangeCfg)
#
# Upper and Lower Can ID shall be used for software filtering if RANGE_ID is
# specified for typeCanIfSwFilter.
#
# Use ExtCanIfHrhRangeCfg for EXTENDED Can IDs and StdCanIfHrhRangeCfg for
# STANDARD Can IDs.
#
# Example for Standard Can Hardware Object:
# manprop_StdCanIfHrhRangeCfg=\
# CanIfHrhRangeRxPduLowerCanId:11,\
# CanIfHrhRangeRxPduUpperCanId:12
#
# Example for Extended Can Hardware Object:
# manprop_ExtCanIfHrhRangeCfg=\
# CanIfHrhRangeRxPduLowerCanId:9,\
# CanIfHrhRangeRxPduUpperCanId:10
#
# CanIfHrhRangeRxPduLowerCanId
#   Specify the lower bound of the range
#  Default: (none)
#
# CanIfHrhRangeRxPduUpperCanId
#   Specify the upper bound of the range
#  Default: (none)
#
#

# Example:
# manprop_StdCanIfHrhRangeCfg=null




# CanIf filter mask settings (CanIfRxPduCanIdMask_...)
#
# When MASK_ID is specified for typeCanIfSwFilter, users must configure the
# mask to be applied. An incoming Can ID is accepted by the filter if
# (IncomingCanID & MASK) == (BASE_ID & MASK). BASE_ID is autogenerated by
# RTA-BSW from DBC file for defined RX Can ID.
#
# Default: (none)
#

# Example:
# manprop_CanIfRxPduCanIdMask_SAMPLE=null




# CanNmGlobalConfig settings
#
# The following settings are copied to /CanNm/CanNmGlobalConfig by ConfGen.
#
# CanNmComUserDataSupport
#   Preprocessor switch for enabling the Tx path of Com User Data.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmComUserDataSupport
#  Default: false
#
# CanNmImmediateRestartEnabled
#   Pre-processor switch for enabling the asynchronous transmission of a NM
#   PDU upon bus-communication request in Prepare-Bus-Sleep mode.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmImmediateRestartEnabled
#  Default: false
#
# CanNmImmediateTxconfEnabled
#   Enable/disable the immediate tx confirmation.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmImmediateTxconfEnabled
#  Default: false
#
# CanNmVersionInfoApi
#   Pre-processor switch for enabling version info API support.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmVersionInfoApi
#  Default: false
#
# CanNmBusLoadReductionEnabled
#   Pre-processor switch for enabling busload reduction support.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmBusLoadReductionEnabled
#  Default: false
#
# CanNmBusSynchronizationEnabled
#   Pre-processor switch for enabling bus synchronization support.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmBusSynchronizationEnabled
#  Default: false
#
# CanNmComControlEnabled
#   Pre-processor switch for enabling the Communication Control support.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmComControlEnabled
#  Default: false
#
# CanNmCoordinatorSyncSupport
#   Enables/disables the coordinator synchronisation support.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmCoordinatorSyncSupport
#  Default: false
#
# CanNmMainFunctionPeriod
#   Call cycle in seconds of CanNm_MainFunction.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmMainFunctionPeriod
#  Default: 0.01
#
# CanNmNodeDetectionEnabled
#   Switch to enable the node detection feature.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmNodeDetectionEnabled
#  Default: false
#
# CanNmNodeIdEnabled
#   Switch for enabling the source node identifier.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmNodeIdEnabled
#  Default: false
#
# CanNmPassiveModeEnabled
#   Pre-processor switch for enabling support of the Passive Mode.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmPassiveModeEnabled
#  Default: false
#
# CanNmPduRxIndicationEnabled
#   Pre-processor switch for enabling the PDU Rx Indication.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmPduRxIndicationEnabled
#  Default: false
#
# CanNmRemoteSleepIndEnabled
#   Pre-processor switch for enabling remote sleep indication support.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmRemoteSleepIndEnabled
#  Default: false
#
# CanNmRepeatMsgIndEnabled
#   Enable/disable the notification that a RepeatMessageRequest has been
#   received.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmRepeatMsgIndEnabled
#  Default: false
#
# CanNmStateChangeIndEnabled
#   Pre-processor switch for enabling the CAN NM state change notification.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmStateChangeIndEnabled
#  Default: false
#
# CanNmUserDataEnabled
#   Pre-processor switch for enabling user data support.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmUserDataEnabled
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /CanNm/CanNmGlobalConfig/CanNmDevErrorDetect
#

# Example:
# manprop_CanNmGlobalConfig=\
# CanNmComUserDataSupport:false,\
# CanNmImmediateRestartEnabled:false,\
# CanNmImmediateTxconfEnabled:false,\
# CanNmVersionInfoApi:false,\
# CanNmBusLoadReductionEnabled:false,\
# CanNmBusSynchronizationEnabled:false,\
# CanNmComControlEnabled:false,\
# CanNmCoordinatorSyncSupport:false,\
# CanNmMainFunctionPeriod:0.01,\
# CanNmNodeDetectionEnabled:false,\
# CanNmNodeIdEnabled:false,\
# CanNmPassiveModeEnabled:false,\
# CanNmPduRxIndicationEnabled:false,\
# CanNmRemoteSleepIndEnabled:false,\
# CanNmRepeatMsgIndEnabled:false,\
# CanNmStateChangeIndEnabled:false,\
# CanNmUserDataEnabled:false




# CanNmChannelConfig settings
#
# The following settings are copied to
# /CanNm/CanNmGlobalConfig/CanNmChannelConfig by ConfGen.
#
# CanNmBusLoadReductionActive
#   This parameter defines if bus load reduction for the respective NM channel
#   is active or not.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig
#               /CanNmBusLoadReductionActive
#  Default: false
#
# CanNmCarWakeUpRxEnabled
#   Enables or disables support of CarWakeUp bit evaluation in received NM
#   PDUs.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig
#               /CanNmCarWakeUpRxEnabled
#  Default: false
#
# CanNmImmediateNmCycleTime
#   Defines the immediate NM PDU cycle time in seconds which is used for
#   CanNmImmediateNmTransmissions NM PDU transmissions.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig
#               /CanNmImmediateNmCycleTime
#  Default: 0.01
#
# CanNmImmediateNmTransmissions
#   Defines the number of immediate NM PDUs which shall be transmitted.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig
#               /CanNmImmediateNmTransmissions
#  Default: 0
#
# CanNmMsgCycleOffset
#   Time offset in the periodic transmission node.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig/CanNmMsgCycleOffset
#  Default: 0
#
# CanNmMsgCycleTime
#   Period of a NM PDU in seconds.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig/CanNmMsgCycleTime
#  Default: 0.01
#
# CanNmMsgReducedTime
#   Node specific bus cycle time in the periodic transmission mode with bus
#   load reduction.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig/CanNmMsgReducedTime
#  Default: 0.01
#
# CanNmMsgTimeoutTime
#   Transmission Timeout of NM PDU.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig/CanNmMsgTimeoutTime
#  Default: 0.01
#
# CanNmNodeId
#   Node identifier of local node.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig/CanNmNodeId
#  Default: 0
#
# CanNmPduCbvPosition
#   Defines the position of the control bit vector within the NM PDU.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig/CanNmPduCbvPosition
#  Default: (none)
#
# CanNmPduNidPosition
#   Defines the position of the source node identifier within the NM PDU.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig/CanNmPduNidPosition
#  Default: CANNM_PDU_BYTE_0
#
# CanNmRemoteSleepIndTime
#   Timeout for Remote Sleep Indication.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig
#               /CanNmRemoteSleepIndTime
#  Default: 0.01
#
# CanNmRepeatMessageTime
#   Timeout for Repeat Message State.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig
#               /CanNmRepeatMessageTime
#  Default: 0
#
# CanNmTimeoutTime
#   Network Timeout for NM PDUs.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig/CanNmTimeoutTime
#  Default: 0.02
#
# CanNmWaitBusSleepTime
#   Timeout for bus calm down phase.
#  Parameter: /CanNm/CanNmGlobalConfig/CanNmChannelConfig
#               /CanNmWaitBusSleepTime
#  Default: 0.01
#
# Specific Override: (none)
# Alternative Name: CanNmChannelConfig
#

# Example:
# manprop_CanNmChannelConfig_ALL=\
# CanNmBusLoadReductionActive:false,\
# CanNmCarWakeUpRxEnabled:false,\
# CanNmImmediateNmCycleTime:0.01,\
# CanNmImmediateNmTransmissions:0,\
# CanNmMsgCycleOffset:0,\
# CanNmMsgCycleTime:0.01,\
# CanNmMsgReducedTime:0.01,\
# CanNmMsgTimeoutTime:0.01,\
# CanNmNodeId:0,\
# CanNmPduNidPosition:CANNM_PDU_BYTE_0,\
# CanNmRemoteSleepIndTime:0.01,\
# CanNmRepeatMessageTime:0,\
# CanNmTimeoutTime:0.02,\
# CanNmWaitBusSleepTime:0.01




# CanSMConfiguration settings
#
# The following settings are copied to /CanSM/CanSMConfiguration by ConfGen.
#
# CanSMModeRequestRepetitionMax
#   Specifies the maximal amount of mode request repetitions without a
#   respective mode indication from the CanIf module until the CanSM module
#   reports a Default Error to the Det and tries to go back to no
#   communication.
#  Parameter: /CanSM/CanSMConfiguration/CanSMModeRequestRepetitionMax
#  Default: 5
#
# CanSMModeRequestRepetitionTime
#   Specifies in which time duration the CanSM module shall repeat mode change
#   requests by using the API of the CanIf module.
#  Parameter: /CanSM/CanSMConfiguration/CanSMModeRequestRepetitionTime
#  Default: 0.07
#
# Specific Override: (none)
#

# Example:
# manprop_CanSMConfiguration=\
# CanSMModeRequestRepetitionMax:5,\
# CanSMModeRequestRepetitionTime:0.07




# CanSMManagerNetwork settings
#
# The following settings are copied to
# /CanSM/CanSMConfiguration/CanSMManagerNetwork by ConfGen.
#
# CanSMBorTxConfirmationPolling
#   This parameter shall configure, if the CanSM polls the
#   CanIf_GetTxConfirmationState API to decide the bus-off state to be
#   recovered instead of using the CanSMBorTimeTxEnsured parameter for this
#   decision.
#  Parameter: /CanSM/CanSMConfiguration/CanSMManagerNetwork
#               /CanSMBorTxConfirmationPolling
#  Default: false
#
# CanSMBorCounterL1ToL2
#   This threshold defines the count of bus-offs until the bus-off recovery
#   switches from level 1 (short recovery time) to level 2 (long recovery
#   time).
#  Parameter: /CanSM/CanSMConfiguration/CanSMManagerNetwork
#               /CanSMBorCounterL1ToL2
#  Default: 0
#
# CanSMBorTimeL1
#   This time parameter defines in seconds the duration of the bus-off
#   recovery time in level 1 (short recovery time).
#  Parameter: /CanSM/CanSMConfiguration/CanSMManagerNetwork/CanSMBorTimeL1
#  Default: 0.04
#
# CanSMBorTimeL2
#   This time parameter defines in seconds the duration of the bus-off
#   recovery time in level 2 (long recovery time).
#  Parameter: /CanSM/CanSMConfiguration/CanSMManagerNetwork/CanSMBorTimeL2
#  Default: 0.1
#
# CanSMBorTimeTxEnsured
#   This parameter defines in seconds the duration of the bus-off event check.
#  Parameter: /CanSM/CanSMConfiguration/CanSMManagerNetwork
#               /CanSMBorTimeTxEnsured
#  Default: 0.02
#
# Specific Override: CanSMManagerNetwork.shortname
#

# Example:
# manprop_CanSMManagerNetwork_ALL=\
# CanSMBorTxConfirmationPolling:false,\
# CanSMBorCounterL1ToL2:0,\
# CanSMBorTimeL1:0.04,\
# CanSMBorTimeL2:0.1,\
# CanSMBorTimeTxEnsured:0.02




# CanSMDemEventParameterRefs settings
#
# The following settings are copied to
# /CanSM/CanSMConfiguration/CanSMManagerNetwork/CanSMDemEventParameterRefs by
# ConfGen.
#
# CanSMRbDynCreate_CANSM_E_BUS_OFF
#   Selects the way how the CanSM DemEvents are created.
#  Parameter: /CanSM/CanSMConfiguration/CanSMManagerNetwork
#               /CanSMDemEventParameterRefs/CanSMRbDynCreate_CANSM_E_BUS_OFF
#  Default: Standard
#
# Specific Override: "CanSMDemEventParameterRefs_" +
#                CanSMManagerNetwork.shortname
# ConfigureBSW: Always Created
#

# Example:
# manprop_CanSMDemEventParameterRefs_ALL=\
# CanSMRbDynCreate_CANSM_E_BUS_OFF:Standard




# CanSMGeneral settings
#
# The following settings are copied to /CanSM/CanSMGeneral by ConfGen.
#
# CanSMMainFunctionTimePeriod
#   This parameter defines the cycle time of the function CanSM_MainFunction
#   in seconds
#  Parameter: /CanSM/CanSMGeneral/CanSMMainFunctionTimePeriod
#  Default: 0.01
#
# CanSMVersionInfoApi
#   Activate/Deactivate the version information API (CanSM_GetVersionInfo).
#  Parameter: /CanSM/CanSMGeneral/CanSMVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /CanSM/CanSMGeneral/CanSMDevErrorDetect
#

# Example:
# manprop_CanSMGeneral=\
# CanSMMainFunctionTimePeriod:0.01,\
# CanSMVersionInfoApi:false




# CanTpConfig settings
#
# The following settings are copied to /CanTp/CanTpConfig by ConfGen.
#
# CanTpVersionInfoApi
#   The function CanTp_GetVersionInfo is configurable (On/Off) by this
#   configuration parameter.
#  Parameter: /CanTp/CanTpGeneral/CanTpVersionInfoApi
#  Default: true
#
# CanTpChangeParameterApi
#   This parameter, if set to true, enables the CanTp_ChangeParameterRequest
#   Api for this Module.
#  Parameter: /CanTp/CanTpGeneral/CanTpChangeParameterApi
#  Default: false
#
# CanTpRbStrictDlcCheck
#   If this parameter is configured TRUE, the received frames are checked
#   strictly for the exact DLC expected in the frame.
#  Parameter: /CanTp/CanTpGeneral/CanTpRbStrictDlcCheck
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /CanTp/CanTpGeneral/CanTpDevErrorDetect
#

# Example:
# manprop_CanTpGeneral=\
# CanTpVersionInfoApi:true,\
# CanTpChangeParameterApi:false,\
# CanTpRbStrictDlcCheck:false




# CanTSynGeneral settings
#
# The following settings are copied to /CanTSyn/CanTSynGeneral by ConfGen.
#
# CanTSynMainFunctionPeriod
#   Schedule period of the main function CanTSyn_MainFunction.
#  Parameter: /CanTSyn/CanTSynGeneral/CanTSynMainFunctionPeriod
#  Default: 0.01
#
# CanTSynVersionInfoApi
#   Activate/Deactivate the version information API (CanTSyn_GetVersionInfo).
#  Parameter: /CanTSyn/CanTSynGeneral/CanTSynVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /CanTSyn/CanTSynGeneral/CanTSynDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_CanTSynGeneral=\
# CanTSynMainFunctionPeriod:0.01,\
# CanTSynVersionInfoApi:false




# CanTSynGlobalTimeDomain settings
#
# The following settings are copied to /CanTSyn/CanTSynGlobalTimeDomain by
# ConfGen.
#
# CanTSynGlobalTimeDomainId
#   The global time domain ID.
#  Parameter: /CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeDomainId
#  Default: 0
#
# CanTSynUseExtendedMsgFormat
#   Switches support for 16 Byte Timesync messages on or off (for CAN FD only)
#  Parameter: /CanTSyn/CanTSynGlobalTimeDomain/CanTSynUseExtendedMsgFormat
#  Default: false
#
# Specific Override: CanTSynGlobalTimeDomain.shortname
#

# Example:
# manprop_CanTSynGlobalTimeDomain_ALL=\
# CanTSynGlobalTimeDomainId:0,\
# CanTSynUseExtendedMsgFormat:false




# CanTSynGlobalTimeMaster settings
#
# The following settings are copied to
# /CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeMaster by ConfGen.
#
# CanTSynCyclicMsgResumeTime
#   Defines the time where the 1st regular cycle time based message
#   transmission takes place, after an immediate transmission before.
#  Parameter: /CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeMaster
#               /CanTSynCyclicMsgResumeTime
#  Default: 0
#
# CanTSynGlobalTimeTxCrcSecured
#   This represents the configuration of whether or not CRC is supported.
#  Parameter: /CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeMaster
#               /CanTSynGlobalTimeTxCrcSecured
#  Default: CRC_NOT_SUPPORTED
#
# CanTSynGlobalTimeDebounceTime
#   This represents the configuration of a TX debounce time for SYNC, FUP, OFS
#   and OFNS messages compared to a message before with the same PDU.
#  Parameter: /CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeMaster
#               /CanTSynGlobalTimeDebounceTime
#  Default: 0
#
# CanTSynGlobalTimeTxPeriod
#   This represents configuration of the TX period.
#  Parameter: /CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeMaster
#               /CanTSynGlobalTimeTxPeriod
#  Default: 0
#
# CanTSynImmediateTimeSync
#   Enables/Disables the cyclic polling of StbM_GetTimeBaseUpdateCounter()
#   within CanTSyn_MainFunction().
#  Parameter: /CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeMaster
#               /CanTSynImmediateTimeSync
#  Default: false
#
# CanTSynMasterConfirmationTimeout
#   This represents the confirmation timeout after transmission of a SYNC
#   message resp.
#  Parameter: /CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeMaster
#               /CanTSynMasterConfirmationTimeout
#  Default: 0
#
# Specific Override: CanTSynGlobalTimeMaster.shortname
#

# Example:
# manprop_CanTSynGlobalTimeMaster_ALL=\
# CanTSynCyclicMsgResumeTime:0,\
# CanTSynGlobalTimeTxCrcSecured:CRC_NOT_SUPPORTED,\
# CanTSynGlobalTimeDebounceTime:0,\
# CanTSynGlobalTimeTxPeriod:0,\
# CanTSynImmediateTimeSync:false,\
# CanTSynMasterConfirmationTimeout:0




# CanTSynGlobalTimeSlave settings
#
# The following settings are copied to
# /CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeSlave by ConfGen.
#
# CanTSynGlobalTimeSequenceCounterJumpWidth
#   The SequenceCounterJumpWidth specifies the maximum allowed gap of the
#   Sequence Counter between two SYNC resp.
#  Parameter: /CanTSyn/CanTSynGlobalTimeDomain/CanTSynGlobalTimeSlave
#               /CanTSynGlobalTimeSequenceCounterJumpWidth
#  Default: 1
#
# Specific Override: CanTSynGlobalTimeSlave.shortname
#

# Example:
# manprop_CanTSynGlobalTimeSlave_ALL=\
# CanTSynGlobalTimeSequenceCounterJumpWidth:1




# ComSignal settings
#
# The following settings are copied to /Com/ComConfig/ComSignal (setting the
# default value for all signals).
#
# If ISignalToIPduMapping/TransferProperty of a I-PDU is not configured in the
# System Template, and if there is no relevant configuration in
# algo.properties, ConfGen will generate the default value for
# ComTransferProperty as ComSignals=TRIGGERED, ComSignalGroups=TRIGGERED and
# ComGroupSignals=TRIGGERED_ON_CHANGE.
#
# ComTransferProperty
#   Defines if a write access to this signal can trigger the transmission of
#   the corresponding I-PDU.
#  Parameter: /Com/ComConfig/ComSignal/ComTransferProperty
#  Default: TRIGGERED
#
# Specific Override: ComSignal.shortname
# Alternative Name: ComSignal
#

# Example:
# manprop_ComSignal_ALL=\
# ComTransferProperty:TRIGGERED




# ComSignalGroup settings
#
# The following settings are copied to /Com/ComConfig/ComSignalGroup (setting
# the default value for all signal groups).
#
# ComTransferProperty
#   Defines if a write access to this signal can trigger the transmission of
#   the corresponding I-PDU.
#  Parameter: /Com/ComConfig/ComSignalGroup/ComTransferProperty
#  Default: TRIGGERED
#
# Specific Override: ComSignalGroup.shortname
#

# Example:
# manprop_ComSignalGroup_ALL=\
# ComTransferProperty:TRIGGERED




# ComGroupSignal settings
#
# The following settings are copied to
# /Com/ComConfig/ComSignalGroup/ComGroupSignal (setting the default value for
# all group signals).
#
# ComTransferProperty
#   Optionally defines whether this group signal shall contribute to the
#   TRIGGERED_ON_CHANGE transfer property of the signal group.
#  Parameter: /Com/ComConfig/ComSignalGroup/ComGroupSignal/ComTransferProperty
#  Default: TRIGGERED_ON_CHANGE
#
# Specific Override: ComGroupSignal.shortname
#

# Example:
# manprop_ComGroupSignal_ALL=\
# ComTransferProperty:TRIGGERED_ON_CHANGE




# ComIPdu settings
#
# The following settings are copied to /Com/ComConfig/ComIPdu by ConfGen.
#
# ComIPduSignalProcessing
#   For the definition of the two modes Immediate and Deferred.
#  Parameter: /Com/ComConfig/ComIPdu/ComIPduSignalProcessing
#  Default: IMMEDIATE
#
# Specific Override: ComIPdu.shortname
#

# Example:
# manprop_ComIPdu_ALL=\
# ComIPduSignalProcessing:IMMEDIATE




# ComIPdu_ALL/ComTxIPdu settings
#
# The following settings are copied to /Com/ComConfig/ComIPdu/ComTxIPdu by
# ConfGen.
#
# ComTxIPduUnusedAreasDefault
#   The AUTOSAR COM module fills not used areas of an I-PDU with this byte
#   pattern.
#  Parameter: /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxIPduUnusedAreasDefault
#  Default: 255
#
# Specific Override: ComIPdu.shortname + "/ComTxIPdu"
#

# Example:
# manprop_ComIPdu_ALL/ComTxIPdu=\
# ComTxIPduUnusedAreasDefault:255




# ComIPdu_ALL/ComTxMode settings
#
# The following settings are copied to both
# /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeFalse/ComTxMode and
# /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeTrue/ComTxMode by ConfGen.
#
# ComTxModeMode
#   The available transmission modes are Mixed, Periodic, Direct, None.
#  Parameter: /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeFalse/ComTxMode
#               /ComTxModeMode
#  Default: PERIODIC
#
# ComTxModeNumberOfRepetitions
#   Defines the number of repetitions for the transmission mode DIRECT and the
#   event driven part of transmission mode MIXED.
#  Parameter: /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeFalse/ComTxMode
#               /ComTxModeNumberOfRepetitions
#  Default: 0
#
# ComTxModeRepetitionPeriod
#   Defines the repetition period in seconds of the multiple transmissions in
#   case ComTxModeNumberOfRepetitions is configured greater than or equal to 1
#   and ComTxModeMode is configured to DIRECT or MIXED.
#  Parameter: /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeFalse/ComTxMode
#               /ComTxModeRepetitionPeriod
#  Default: 0
#
# ComTxModeTimeOffset
#   Defines the period in seconds between the start of the I-PDU by
#   Com_IpduGroupControl and the first transmission request in case
#   ComTxModeMode is configured to PERIODIC or MIXED.
#  Parameter: /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeFalse/ComTxMode
#               /ComTxModeTimeOffset
#  Default: 0.0
#
# ComTxModeTimePeriod
#   Defines the repetition period in seconds of the periodic transmission
#   requests in case ComTxModeMode is configured to PERIODIC or MIXED.
#  Parameter: /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeFalse/ComTxMode
#               /ComTxModeTimePeriod
#  Default: 0.1
#
# Specific Override: ComIPdu.shortname + "/ComTxMode"
#

# Example:
# manprop_ComIPdu_ALL/ComTxMode=\
# ComTxModeMode:PERIODIC,\
# ComTxModeNumberOfRepetitions:0,\
# ComTxModeRepetitionPeriod:0,\
# ComTxModeTimeOffset:0.0,\
# ComTxModeTimePeriod:0.1




# ComIPdu_ALL/ComTxMode settings
#
# The following settings are copied to both
# /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeFalse/ComTxMode and
# /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeTrue/ComTxMode by ConfGen.
#
# ComTxModeMode
#   The available transmission modes are Mixed, Periodic, Direct, None
#  Parameter: /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeTrue/ComTxMode
#               /ComTxModeMode
#  Default: PERIODIC
#
# ComTxModeNumberOfRepetitions
#   Defines the number of repetitions for the transmission mode DIRECT and the
#   event driven part of transmission mode MIXED.
#  Parameter: /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeTrue/ComTxMode
#               /ComTxModeNumberOfRepetitions
#  Default: 0
#
# ComTxModeRepetitionPeriod
#   Defines the repetition period in seconds of the multiple transmissions in
#   case ComTxModeNumberOfRepetitions is configured greater than or equal to 1
#   and ComTxModeMode is configured to DIRECT or MIXED.
#  Parameter: /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeTrue/ComTxMode
#               /ComTxModeRepetitionPeriod
#  Default: 0
#
# ComTxModeTimeOffset
#   Defines the period in seconds between the start of the I-PDU by
#   Com_IpduGroupControl and the first transmission request in case
#   ComTxModeMode is configured to PERIODIC or MIXED.
#  Parameter: /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeTrue/ComTxMode
#               /ComTxModeTimeOffset
#  Default: 0.0
#
# ComTxModeTimePeriod
#   Defines the repetition period in seconds of the periodic transmission
#   requests in case ComTxModeMode is configured to PERIODIC or MIXED.
#  Parameter: /Com/ComConfig/ComIPdu/ComTxIPdu/ComTxModeTrue/ComTxMode
#               /ComTxModeTimePeriod
#  Default: 0.1
#
# Specific Override: ComIPdu.shortname + "/ComTxMode"
#

# Example:
# manprop_ComIPdu_ALL/ComTxMode=\
# ComTxModeMode:PERIODIC,\
# ComTxModeNumberOfRepetitions:0,\
# ComTxModeRepetitionPeriod:0,\
# ComTxModeTimeOffset:0.0,\
# ComTxModeTimePeriod:0.1




# ComGeneral settings
#
# The following settings are copied to /Com/ComGeneral by ConfGen.
#
# ComVersionInfoApi
#   Activate/Deactivate the version information API (Com_GetVersionInfo).
#  Parameter: /Com/ComGeneral/ComVersionInfoApi
#  Default: false
#
# ComCommonIPduTxPeriodFeature
#   Feature to reduce busload during flashing of other ECUs.This can be
#   activated by calling function Com_ReduceBusload(CycleTime), CycleTime
#   represents new cycle time in ticks(multiples of ComTxTimeBase).If this
#   functionality is activated by calling function Com_ReduceBusload(), period
#   of all TX IPDUs (periodic mode IPDUs and periodic part of mixed mode
#   IPDUs) will be changed to new period
#  Parameter: /Com/ComGeneral/ComCommonIPduTxPeriodFeature
#  Default: false
#
# ComEnableJitterFilter
#   If ComEnableJitterFilter is enabled, then ComRxTimeBase is added with the
#   configured time out for the Rx IPDU, after the IPDU is received
#   successfully.
#  Parameter: /Com/ComGeneral/ComEnableJitterFilter
#  Default: false
#
# ComEnableSignalGroupArrayApi
#   Activate/Deactivate the signal group array access APIs
#   (Com_SendSignalGroupArray, Com_ReceiveSignalGroupArray)
#  Parameter: /Com/ComGeneral/ComEnableSignalGroupArrayApi
#  Default: false
#
# ComCancellationSupport
#   This parameter enables/disables the cancellation feature:
#  Parameter: /Com/ComGeneral/ComCancellationSupport
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /Com/ComGeneral/ComConfigurationUseDet
# ConfigureBSW: Always Created
#

# Example:
# manprop_ComGeneral=\
# ComVersionInfoApi:false,\
# ComCommonIPduTxPeriodFeature:false,\
# ComEnableJitterFilter:false,\
# ComEnableSignalGroupArrayApi:false,\
# ComCancellationSupport:false




# ComMChannel settings
#
# The following settings are copied to /ComM/ComMConfigSet/ComMChannel by
# ConfGen.
#
# ComMBusType
#   Identifies the bus type of the channel.
#  Parameter: /ComM/ComMConfigSet/ComMChannel/ComMBusType
#  Default: COMM_BUS_TYPE_CAN
#
# ComMMainFunctionPeriod
#   Specifies the period in seconds that the MainFunction has to be triggered
#   with.
#  Parameter: /ComM/ComMConfigSet/ComMChannel/ComMMainFunctionPeriod
#  Default: 0.01
#
# ComMFullCommRequestNotificationEnabled
#   Defines if the optional SenderReceiver Port of Interface
#   ComM_CurrentChannelRequest will be provided for this channel.
#  Parameter: /ComM/ComMConfigSet/ComMChannel
#               /ComMFullCommRequestNotificationEnabled
#  Default: false
#
# ComMNoCom
#   Not allowed to change state of ComM channel to COMM_SILENT_COMMUNICATION
#   or COMM_FULL_COMMUNICATION.
#  Parameter: /ComM/ComMConfigSet/ComMChannel/ComMNoCom
#  Default: true
#
# ComMNoWakeUpInhibitionNvmStorage
#   If this parameter is set to "true", the NoWakeUp inhibition state of the
#   channel shall be stored (in some implementation specific way) in the block
#   pointed to by ComMGlobalNvmBlockDescriptor.
#  Parameter: /ComM/ComMConfigSet/ComMChannel/ComMNoWakeUpInhibitionNvmStorage
#  Default: false
#
# ComMNoWakeup
#   Defines if an ECU is not allowed to wake-up the channel.
#  Parameter: /ComM/ComMConfigSet/ComMChannel/ComMNoWakeup
#  Default: true
#
# Specific Override: ComMChannel.shortname
#

# Example:
# manprop_ComMChannel_ALL=\
# ComMBusType:COMM_BUS_TYPE_CAN,\
# ComMMainFunctionPeriod:0.01,\
# ComMFullCommRequestNotificationEnabled:false,\
# ComMNoCom:true,\
# ComMNoWakeUpInhibitionNvmStorage:false,\
# ComMNoWakeup:true




# ComMNetworkManagement settings
#
# The following settings are copied to
# /ComM/ComMConfigSet/ComMChannel/ComMNetworkManagement by ConfGen.
#
# ComMNmLightTimeout
#   Defines the timeout (in seconds) after COMM_FULL_COMMUNICATION sub-state
#   COMM_FULL_COM_READY_SLEEP is left.
#  Parameter: /ComM/ComMConfigSet/ComMChannel/ComMNetworkManagement
#               /ComMNmLightTimeout
#  Default: 10
#
# ComMNmVariant
#   Defines the functionality of the networkmanagement.
#  Parameter: /ComM/ComMConfigSet/ComMChannel/ComMNetworkManagement
#               /ComMNmVariant
#  Default: NONE
#
# ComMPncNmRequest
#   If this parameter equals true then every time a FULL Communication is
#   requested due to a change in the PNC state machine to COMM_PNC_REQUESTED
#   Nm shall be called using the API Nm_NetworkRequest.
#  Parameter: /ComM/ComMConfigSet/ComMChannel/ComMNetworkManagement
#               /ComMPncNmRequest
#  Default: false
#
# Specific Override: ComMChannel.shortname + "/ComMNetworkManagement"
#

# Example:
# manprop_ComMNetworkManagement_ALL=\
# ComMNmLightTimeout:10,\
# ComMNmVariant:NONE,\
# ComMPncNmRequest:false




# ComMGeneral settings
#
# The following settings are copied to /ComM/ComMGeneral by ConfGen.
#
# ComMEcuGroupClassification
#   Defines whether a mode inhibition affects the ECU or not.
#  Parameter: /ComM/ComMGeneral/ComMEcuGroupClassification
#  Default: 0
#
# ComMModeLimitationEnabled
#   true if mode limitation functionality shall be enabled.
#  Parameter: /ComM/ComMGeneral/ComMModeLimitationEnabled
#  Default: false
#
# ComMTMinFullComModeDuration
#   Minimum time duration in seconds, spent in the COMM_FULL_COMMUNICATION
#   sub-state COMM_FULL_COM_NETWORK_REQUESTED.
#  Parameter: /ComM/ComMGeneral/ComMTMinFullComModeDuration
#  Default: 0.01
#
# ComMVersionInfoApi
#   Switches the possibility to read the published information with the
#   service ComM_GetPublishedInformation().
#  Parameter: /ComM/ComMGeneral/ComMVersionInfoApi
#  Default: false
#
# ComMWakeupInhibitionEnabled
#   true if wake up inhibition functionality enabled.
#  Parameter: /ComM/ComMGeneral/ComMWakeupInhibitionEnabled
#  Default: false
#
# ComMPncGatewayEnabled
#   Enables or disables support of Partial Network Gateway.
#  Parameter: /ComM/ComMGeneral/ComMPncGatewayEnabled
#  Default: false
#
# ComMPncSupport
#   Enables or disables support of partial networking.
#  Parameter: /ComM/ComMGeneral/ComMPncSupport
#  Default: false
#
# ComMResetAfterForcingNoComm
#   ComM shall perform a reset after entering "No Communication" mode because
#   of an active mode limitation to "No Communication" mode.
#  Parameter: /ComM/ComMGeneral/ComMResetAfterForcingNoComm
#  Default: false
#
# ComMSynchronousWakeUp
#   Wake up of one channel shall lead to a wake up of all channels if true.
#  Parameter: /ComM/ComMGeneral/ComMSynchronousWakeUp
#  Default: false
#
# ComMPncGatewayEnabled
#   Enables or disables support of Partial Network Gateway.
#  Parameter: /ComM/ComMGeneral/ComMPncGatewayEnabled
#  Default: false
#
# ComMRteEnabled
#   Enables or disables support of RTE.False: RTE is disabled.
#  Parameter: /ComM/ComMGeneral/ComMRteEnabled
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /ComM/ComMGeneral/ComMDevErrorDetect
#

# Example:
# manprop_ComMGeneral=\
# ComMEcuGroupClassification:0,\
# ComMModeLimitationEnabled:false,\
# ComMTMinFullComModeDuration:0.01,\
# ComMVersionInfoApi:false,\
# ComMWakeupInhibitionEnabled:false,\
# ComMPncGatewayEnabled:false,\
# ComMPncSupport:false,\
# ComMResetAfterForcingNoComm:false,\
# ComMSynchronousWakeUp:false,\
# ComMPncGatewayEnabled:false,\
# ComMRteEnabled:false




# DcmDsd settings
#
# The following settings are copied to /Dcm/DcmConfigSet/DcmDsd by ConfGen.
#
# DcmDsdRequestManufacturerNotificationEnabled
#   Allows to enable or disable the requested notification mechanism for the
#   Manufacturer.
#  Parameter: /Dcm/DcmConfigSet/DcmDsd
#               /DcmDsdRequestManufacturerNotificationEnabled
#  Default: false
#
# DcmDsdRequestSupplierNotificationEnabled
#   Allows to enable or disable the requested notification mechanism for the
#   Supplier.
#  Parameter: /Dcm/DcmConfigSet/DcmDsd
#               /DcmDsdRequestSupplierNotificationEnabled
#  Default: false
#
# Specific Override: (none)
#

# Example:
# manprop_DcmDsd=\
# DcmDsdRequestManufacturerNotificationEnabled:false,\
# DcmDsdRequestSupplierNotificationEnabled:false




# DcmDslBuffer settings
#
# The following settings are copied to every
# /Dcm/DcmConfigSet/DcmDsl/DcmDslBuffer by ConfGen.
#
# DcmDslBufferSize
#   Size of Diagnostic Buffer (in Bytes).For a linear buffer: size of the
#   buffer shall be as large as the longest message (request or response) For
#   a paged buffer (only Tx possible): size has impacts on the application
#   performance
#  Parameter: /Dcm/DcmConfigSet/DcmDsl/DcmDslBuffer/DcmDslBufferSize
#  Default: 255
#
# Specific Override: DcmDslBuffer.shortname
#

# Example:
# manprop_DcmDslBuffer_ALL=\
# DcmDslBufferSize:255




# DcmDslProtocolRow settings
#
# The following settings are copied to
# /Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow by ConfGen, except
# for DcmDslProtocolRxTesterSourceAddr, which is copied to
# /Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow
# /DcmDslConnection/DcmDslMainConnection/DcmDslProtocolRxTesterSourceAddr.
#
# DcmDslProtocolID
#   The diagnostic protocol type for the DCM DSL protocol that is being
#   configured.
#  Parameter: /Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow
#               /DcmDslProtocolID
#  Default: DCM_UDS_ON_CAN
#
# DcmTimStrP2ServerAdjust
#   This parameter is used to guarantee that the DCM response is available on
#   the bus before reaching P2.This parameter value in seconds has to be
#   configured as a multiple of DcmTaskTime and is minimum in the timing
#   handling of P2.
#  Parameter: /Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow
#               /DcmTimStrP2ServerAdjust
#  Default: 0.01
#
# DcmTimStrP2StarServerAdjust
#   This parameter is used to guarantee that the DCM response is available on
#   the bus before reaching P2*.This parameter value in seconds has to be
#   configured as multiple of DcmTaskTime and is minimum in the timing
#   handling of P2*.
#  Parameter: /Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow
#               /DcmTimStrP2StarServerAdjust
#  Default: 0.01
#
# DcmDslProtocolPriority
#   The SWS for DCM defines this item as uint8.
#  Parameter: /Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow
#               /DcmDslProtocolPriority
#  Default: 0
#
# DcmSendRespPendOnTransToBoot
#   Parameter specifying if the ECU should send a NRC 0x78 (response pending)
#   before transitioning to the bootloader (parameter set to TRUE) or if the
#   transition shall be initiated without sending NRC 0x78 (parameter set to
#   FALSE).
#  Parameter: /Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow
#               /DcmSendRespPendOnTransToBoot
#  Default: true
#
# DcmDslProtocolMaximumResponseSize
#   The value of this parameter is the maximum response length possible in
#   case paged buffer is enabled for any service (For example 0x19,0x22).
#  Parameter: /Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow
#               /DcmDslProtocolMaximumResponseSize
#  Default: (none)
#
# DcmDslProtocolRxTesterSourceAddr
#   Tester source address uniquely describes a client and will be used e.g
#   within the jump to Bootloader interfaces. This parameter is not required
#   for generic connections (DcmPdus with MetaDataLength >= 1). This parameter
#   is only copied if the ECU does not have a diagnostic address, and forms
#   part of the DcmDslMainConnection subelement of DcmDslProtocolRow.
#  Parameter: /Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow
#               /DcmDslProtocolRxTesterSourceAddr
#  Default: 0
#
# Specific Override: DcmDslProtocolRow.shortname
#

# Example:
# manprop_DcmDslProtocolRow_ALL=\
# DcmDslProtocolID:DCM_UDS_ON_CAN,\
# DcmTimStrP2ServerAdjust:0.01,\
# DcmTimStrP2StarServerAdjust:0.01,\
# DcmDslProtocolPriority:0,\
# DcmSendRespPendOnTransToBoot:true,\
# DcmDslProtocolRxTesterSourceAddr:0




# DcmPageBufferCfg settings
#
# The following settings are copied to /Dcm/DcmConfigSet/DcmPageBufferCfg by
# ConfGen.
#
# DcmPagedBufferEnabled
#   Allow to enable or disable the Page buffer mechanism.If configured as
#   true, paged buffer handling is enabled.
#  Parameter: /Dcm/DcmConfigSet/DcmPageBufferCfg/DcmPagedBufferEnabled
#  Default: false
#
# Specific Override: (none)
#

# Example:
# manprop_DcmPageBufferCfg=\
# DcmPagedBufferEnabled:false




# DcmGeneral settings
#
# The following settings are copied to /Dcm/DcmGeneral by ConfGen.
#
# DcmTaskTime
#   Allow to configure the time for the periodic cyclic task.
#  Parameter: /Dcm/DcmGeneral/DcmTaskTime
#  Default: 0.01
#
# DcmVersionInfoApi
#   Preprocessor switch to enable or disable the output Version info of the
#   functionality.
#  Parameter: /Dcm/DcmGeneral/DcmVersionInfoApi
#  Default: false
#
# DcmRespondAllRequest
#   If set to FALSE the DCM will not respond to diagnostic request that
#   contains a service ID which is in the range from 0x40 to 0x7F or in the
#   range from 0xC0 to 0xFF (Response IDs).
#  Parameter: /Dcm/DcmGeneral/DcmRespondAllRequest
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /Dcm/DcmGeneral/DcmDevErrorDetect
#

# Example:
# manprop_DcmGeneral=\
# DcmTaskTime:0.01,\
# DcmVersionInfoApi:false,\
# DcmRespondAllRequest:false




# IsDcmRoutingForTpOnly settings
#
# Users can select how Dcm Routing path for Tp modules are supported by using
# algo.properties to configure IsDcmRoutingForTpOnly.
#
# If IsDcmRoutingForTpOnly = true, ConfGen generates the Dcm Routing path for
# Tp modules, even if there is an improper system description configuration
# for Tp path.
#
# If case IsDcmRoutingForTpOnly = false, users need to follow the AR system
# template for Tp configuration.
#
# If undefined, IsDcmRoutingForTpOnly is assumed to be true to maintain the
# behavior of previous versions.
#
# Default: (none)
#

# Example:
# manprop_IsDcmRoutingForTpOnly=null




# newDcmDslProtocolRowImplementation settings
#
# Users can select whether the DiagnosticProtocol, defined in DEXT template
# from AR4.3.1 on, is required for generation of DcmDslProtocolRow.
#
# If case newDcmDslProtocolRowImplementation = false, DiagnosticProtocol is
# not required for generation of DcmDslProtocolRow.
#
# If undefined, newDcmDslProtocolRowImplementation is assumed to be true.
#
# Default: (none)
#

# Example:
# manprop_newDcmDslProtocolRowImplementation=null




# IsRtaBswDcmIpdu settings
#
# Users can select whether to generate the Pdus for DcmIpdu route from/to
# CanIf-CanTp-PduR-Dcm. Note that the CanTp module is not generated in this
# use case, only its Pdus are generated.
#
# If case IsRtaBswDcmIpdu = false, no Pdu for routing from or to CanTp
# configuration support.
#
# If undefined, IsRtaBswDcmIpdu is assumed to be true. DcmIPdus will be routed
# from/to CanIf-CanTp-PduR-Dcm
#
# Default: (none)
#

# Example:
# manprop_IsRtaBswDcmIpdu=null




# logOutputLevel settings
#
# Users can select the ConfGen Console Log level to be supported by using
# algo.properties to configure logOutputLevel.
#
# If case logOutputLevel = ILog.Severity.DEBUG, users can see the Debug Log.
#
# If case logOutputLevel = ILog.Severity.FATAL, users can see the FATAL Log.
#
# If case logOutputLevel = ILog.Severity.ERROR, users can see the ERROR Log.
#
# If case logOutputLevel = ILog.Severity.WARN, users can see the WARN Log.
#
# If undefined, logOutputLevel is assumed to be ILog.Severity.INFO.
#
# Default: (none)
#

# Example:
# manprop_logOutputLevel=null




# DcmRbGeneral settings
#
# The following settings are copied to /Dcm/DcmGeneral/DcmRbGeneral by
# ConfGen.
#
# DcmRbConfirmForDSDGeneratedNegRes
#   To select confirmation for DSD generated negative responses.If set to
#   true, DcmAppl API DcmAppl_DcmConfirmation_DcmNegResp will be called for
#   DSD generated negative responses
#  Parameter: /Dcm/DcmGeneral/DcmRbGeneral/DcmRbConfirmForDSDGeneratedNegRes
#  Default: false
#
# DcmRbOSTimerUse
#   Choose between Project Specific , AUTOSAR Specific and Cyclic Count
#   Project Specific : CPU timer will be used for timer monitoring.
#  Parameter: /Dcm/DcmGeneral/DcmRbGeneral/DcmRbOSTimerUse
#  Default: CyclicCount
#
# DcmRbRTEsupportsPRportFunctionality
#   Enables generation of PR port (incase conditions of generation of said
#   Port are met) provided the RTE component used supports full PR port
#   functionality.
#  Parameter: /Dcm/DcmGeneral/DcmRbGeneral/DcmRbRTEsupportsPRportFunctionality
#  Default: false
#
# DcmRbRTEsupport
#   Enables RTE Support for Communication control,Diagnostic Session Control
#   and the EcuReset services.
#  Parameter: /Dcm/DcmGeneral/DcmRbGeneral/DcmRbRTEsupport
#  Default: true
#
# Specific Override: (none)
#

# Example:
# manprop_DcmRbGeneral=\
# DcmRbConfirmForDSDGeneratedNegRes:false,\
# DcmRbOSTimerUse:CyclicCount,\
# DcmRbRTEsupportsPRportFunctionality:false,\
# DcmRbRTEsupport:true




# DcmDsp settings
#
# The following settings are copied to /Dcm/DcmConfigSet/DcmDsp by ConfGen.
#
# DcmRbDspSesSecUsedInProtocol
#   The DcmRbDspSesSecUsedInProtocol is a reference container to
#   DcmDslProtocolRow which uses the Dsp Session and Security
#   Configuration.Configure the protocol that will be using the DcmDspSession
#   and DcmDspSecurity Services.
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmRbDspSesSecUsedInProtocol
#  Default: UDS
#
# Specific Override: (none)
#

# Example:
# manprop_DcmDsp=\
# DcmRbDspSesSecUsedInProtocol:UDS




# DcmDspData settings
#
# The following settings are copied to /Dcm/DcmConfigSet/DcmDsp/DcmDspData by
# ConfGen. They are copied only if the target element's DcmDspDataType does
# not contain "_DYN".
#
# DcmDspDataUsePort
#   Defines which interface shall be used to access the data.
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspData/DcmDspDataUsePort
#  Default: USE_DATA_SENDER_RECEIVER
#
# Specific Override: DcmDspData.shortname
# ConfigureBSW: Implemented
#

# Example:
# manprop_DcmDspData_ALL=\
# DcmDspDataUsePort:USE_DATA_SENDER_RECEIVER




# DcmDspData_Dyn settings
#
# The following settings are copied to /Dcm/DcmConfigSet/DcmDsp/DcmDspData by
# ConfGen. They are copied only if the target element's DcmDspDataType does
# contain "_DYN".
#
# DcmDspDataUsePort
#   Defines which interface shall be used to access the data.
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspData/DcmDspDataUsePort
#  Default: USE_DATA_SYNCH_CLIENT_SERVER
#
# DcmDspDataType
#   Provide the implementation data type of data belonging to a DID.
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspData/DcmDspDataType
#  Default: UINT8_DYN
#
# Specific Override: DcmDspData.shortname
# ConfigureBSW: Implemented
#

# Example:
# manprop_DcmDspData_Dyn_ALL=\
# DcmDspDataUsePort:USE_DATA_SYNCH_CLIENT_SERVER,\
# DcmDspDataType:UINT8_DYN




# DcmDspDidSignal settings
#
# The following settings are copied to
# /Dcm/DcmConfigSet/DcmDsp/DcmDspDid/DcmDspDidSignal by ConfGen.
#
# Container: /Dcm/DcmConfigSet/DcmDsp/DcmDspDid/DcmDspDidSignal
# Specific Override: (none)
# ConfigureBSW: Always Copied
#

# Example:
# manprop_DcmDspDidSignal=null




# DcmDspDidControl_ALL settings
#
# The following settings are copied to
# /Dcm/DcmConfigSet/DcmDsp/DcmDspDidInfo/DcmDspDidControl by ConfGen.
#
# DcmDspDidControlMask
#   This indicates the presence of "controlEnableMask" in the AUTOSR
#   interface.
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspDidInfo/DcmDspDidControl
#               /DcmDspDidControlMask
#  Default: DCM_CONTROLMASK_NO
#
# Specific Override: DcmDspDidControl.shortname
#

# Example:
# manprop_DcmDspDidControl_ALL=\
# DcmDspDidControlMask:DCM_CONTROLMASK_NO




# DcmDspDid settings
#
# The following settings are copied to /Dcm/DcmConfigSet/DcmDsp/DcmDspDid by
# ConfGen.
#
# DcmDspDidUsePort
#   Selects application interface type for DID data elements between a single
#   operation for all data elements or data element specific operations.
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspDid/DcmDspDidUsePort
#  Default: USE_DATA_ELEMENT_SPECIFIC_INTERFACES
#
# DcmRbAtomicSenderReceiverCommunication
#   This parameter is used to select the type of communication required.Set
#   the value to TRUE for Atomic SenderReceiver communication else regular
#   SenderReceiver communication will be carried out
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspDid
#               /DcmRbAtomicSenderReceiverCommunication
#  Default: false
#
# Specific Override: (none)
#

# Example:
# manprop_DcmDspDid=\
# DcmDspDidUsePort:USE_DATA_ELEMENT_SPECIFIC_INTERFACES,\
# DcmRbAtomicSenderReceiverCommunication:false




# DcmDspSecurity settings
#
# The following settings are copied to /Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity
# by ConfGen.
#
# DcmRbDspSecurityStoreSeed
#   DcmDspSecurity - DcmDspSecurityStoreSeed = TRUE, print DCM_CFG_ON
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity
#               /DcmRbDspSecurityStoreSeed
#  Default: false
#
# Specific Override: (none)
#

# Example:
# manprop_DcmDspSecurity=\
# DcmRbDspSecurityStoreSeed:false




# DcmDspSecurityRow_DelayTimeOnBoot settings
#
# The following settings are copied to
# /Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow by ConfGen, but
# only if no other security delay time has been set elsewhere.
#
# DcmDspSecurityDelayTimeOnBoot
#   Start delay timer on power on in seconds.
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow
#               /DcmDspSecurityDelayTimeOnBoot
#  Default: 10
#
# Specific Override: DcmDspSecurityRow.shortname
#

# Example:
# manprop_DcmDspSecurityRow_DelayTimeOnBoot_ALL=\
# DcmDspSecurityDelayTimeOnBoot:10




# DcmDspSecurityRow settings
#
# The following settings are copied to
# /Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow by ConfGen.
#
# DcmDspSecurityUsePort
#   Defines which kind of interface shall be used for security access.
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow
#               /DcmDspSecurityUsePort
#  Default: USE_ASYNCH_CLIENT_SERVER
#
# DcmDspSecurityAttemptCounterEnabled
#   Allows to enable the external storage of the security attempt counter
#   (e.g. to survival a reset of the ECU).
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow
#               /DcmDspSecurityAttemptCounterEnabled
#  Default: false
#
# DcmRbDspSecurityNumAttLock
#   Number of failed security accesses after which security access is locked.
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow
#               /DcmRbDspSecurityNumAttLock
#  Default: 0
#
# DcmDspSecurityDelayTime
#   Delay time after failed security access in seconds.
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow
#               /DcmDspSecurityDelayTime
#  Default: 0.05
#
# DcmDspSecurityNumAttDelay
#   Number of failed security accesses after which the delay time is activated
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow
#               /DcmDspSecurityNumAttDelay
#  Default: 5
#
# Specific Override: DcmDspSecurityRow.shortname
#

# Example:
# manprop_DcmDspSecurityRow_ALL=\
# DcmDspSecurityUsePort:USE_ASYNCH_CLIENT_SERVER,\
# DcmDspSecurityAttemptCounterEnabled:false,\
# DcmRbDspSecurityNumAttLock:0,\
# DcmDspSecurityDelayTime:0.05,\
# DcmDspSecurityNumAttDelay:5




# DcmDspRoutine settings
#
# The following settings are copied to /Dcm/DcmConfigSet/DcmDsp/DcmDspRoutine
# by ConfGen.
#
# DcmDspRoutineUsePort
#   If this parameter is set to true, the DCM uses a port requiring a
#   PortInterface RoutineServices_{RoutineName}.
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmDspRoutine/DcmDspRoutineUsePort
#  Default: true
#
# Specific Override: DcmDspRoutine.shortname
#

# Example:
# manprop_DcmDspRoutine_ALL=\
# DcmDspRoutineUsePort:true




# DcmRbDspReadDTC settings
#
# The following settings are copied to
# /Dcm/DcmConfigSet/DcmDsp/DcmRbDspReadDTC by ConfGen.
#
# DcmRbDspReadDTCMaxNumDTCRead
#   Maximum number of DTC that can be read in 1 service call
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmRbDspReadDTC
#               /DcmRbDspReadDTCMaxNumDTCRead
#  Default: 1
#
# DcmRbDspReadDTCMaxNumRecordRead
#   Max Number of Records that can be read in 1 service call
#  Parameter: /Dcm/DcmConfigSet/DcmDsp/DcmRbDspReadDTC
#               /DcmRbDspReadDTCMaxNumRecordRead
#  Default: 1
#
# Specific Override: (none)
#

# Example:
# manprop_DcmRbDspReadDTC=\
# DcmRbDspReadDTCMaxNumDTCRead:1,\
# DcmRbDspReadDTCMaxNumRecordRead:1




# ReportDTCExtDataRecordByRecordNumber settings
#
# This setting is used for a DcmDsdSubService with type
# REPORT_DTC_EXT_DATA_RECORD_BY_RECORD_NUMBER (22). A
# DcmRbDsdSubFuncServHandler is created with the specified name.
#
# DcmRbDsdSubFuncServHandler
#   Service Handler for configured RDTC Sub Function (0x01, 0x2 , 0x3, 0x4,
#   0x5, 0x6,0x7, 0x8, 0x09, 0xA, 0x0B, 0x0C, 0x0D, 0x0E, 0xF, 0x10, 0x11,
#   0x12, 0x13, 0x14, 0x15) If the user has not configured SubFuncServHandler
#   for Sub function level 0x01, 0x2 ,0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x09, 0xA,
#   0x0B, 0x0C, 0x0D, 0x0E, 0xF, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15 ; ,
#   Default ServHandler names are configured.
#  Parameter: /Dcm/DcmConfigSet/DcmDsd/DcmDsdServiceTable/DcmDsdService
#               /DcmDsdSubService/DcmRbDsdSubFuncServHandler
#  Default: Dcm_Dsp_ReportDTCExtDataRecordByRecordNumber
#
# Specific Override: (none)
# ConfigureBSW: Implemented
#

# Example:
# manprop_ReportDTCExtDataRecordByRecordNumber=\
# DcmRbDsdSubFuncServHandler:Dcm_Dsp_ReportDTCExtDataRecordByRecordNumber




# ReportWWHOBDDTCWithPermanentStatus settings
#
# This setting is used for a DcmDsdSubService with type
# REPORT_WWHOBDDTC_WITH_PERMANENT_STATUS (85). A DcmRbDsdSubFuncServHandler is
# created with the specified name.
#
# DcmRbDsdSubFuncServHandler
#   Service Handler for configured RDTC Sub Function (0x01, 0x2 , 0x3, 0x4,
#   0x5, 0x6,0x7, 0x8, 0x09, 0xA, 0x0B, 0x0C, 0x0D, 0x0E, 0xF, 0x10, 0x11,
#   0x12, 0x13, 0x14, 0x15) If the user has not configured SubFuncServHandler
#   for Sub function level 0x01, 0x2 ,0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x09, 0xA,
#   0x0B, 0x0C, 0x0D, 0x0E, 0xF, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15 ; ,
#   Default ServHandler names are configured.
#  Parameter: /Dcm/DcmConfigSet/DcmDsd/DcmDsdServiceTable/DcmDsdService
#               /DcmDsdSubService/DcmRbDsdSubFuncServHandler
#  Default: Dcm_Dsp_ReportWWHOBDDTCWithPermanentStatus
#
# Specific Override: (none)
# ConfigureBSW: Implemented
#

# Example:
# manprop_ReportWWHOBDDTCWithPermanentStatus=\
# DcmRbDsdSubFuncServHandler:Dcm_Dsp_ReportWWHOBDDTCWithPermanentStatus




# ReportWWHOBDDTCByMaskRecord settings
#
# This setting is used for a DcmDsdSubService with type
# REPORT_WWHOBDDTC_BY_MASK_RECORD (66). A DcmRbDsdSubFuncServHandler is
# created with the specified name.
#
# DcmRbDsdSubFuncServHandler
#   Service Handler for configured RDTC Sub Function (0x01, 0x2 , 0x3, 0x4,
#   0x5, 0x6,0x7, 0x8, 0x09, 0xA, 0x0B, 0x0C, 0x0D, 0x0E, 0xF, 0x10, 0x11,
#   0x12, 0x13, 0x14, 0x15) If the user has not configured SubFuncServHandler
#   for Sub function level 0x01, 0x2 ,0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x09, 0xA,
#   0x0B, 0x0C, 0x0D, 0x0E, 0xF, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15 ; ,
#   Default ServHandler names are configured.
#  Parameter: /Dcm/DcmConfigSet/DcmDsd/DcmDsdServiceTable/DcmDsdService
#               /DcmDsdSubService/DcmRbDsdSubFuncServHandler
#  Default: Dcm_Dsp_ReportWWHOBDDTCByMaskRecord
#
# Specific Override: (none)
# ConfigureBSW: Implemented
#

# Example:
# manprop_ReportWWHOBDDTCByMaskRecord=\
# DcmRbDsdSubFuncServHandler:Dcm_Dsp_ReportWWHOBDDTCByMaskRecord




# DemEventParameter settings
#
# The following settings are copied to /Dem/DemConfigSet/DemEventParameter by
# ConfGen.
#
# DemEventAvailable
#   This parameter configures an Event as unavailable.
#  Parameter: /Dem/DemConfigSet/DemEventParameter/DemEventAvailable
#  Default: true
#
# DemEventFailureCycleCounterThreshold
#   Defines the number of failure cycles for the event based fault
#   confirmation.
#  Parameter: /Dem/DemConfigSet/DemEventParameter
#               /DemEventFailureCycleCounterThreshold
#  Default: 1
#
# Specific Override: DemEventParameter.shortname
#

# Example:
# manprop_DemEventParameter_ALL=\
# DemEventAvailable:true,\
# DemEventFailureCycleCounterThreshold:1




# DemDTCAttributes settings
#
# The following settings are copied to /Dem/DemConfigSet/DemDTCAttributes by
# ConfGen.
#
# DemDTCPriority
#   This parameter configures an Event as unavailable.
#  Parameter: /Dem/DemConfigSet/DemDTCAttributes/DemDTCPriority
#  Default: 1
#
# DemImmediateNvStorage
#   This parameter configures an Event as unavailable.
#  Parameter: /Dem/DemConfigSet/DemDTCAttributes/DemImmediateNvStorage
#  Default: false
#
# Specific Override: DemDTCAttributes.shortname
#

# Example:
# manprop_DemDTCAttributes_ALL=\
# DemDTCPriority:1,\
# DemImmediateNvStorage:false




# DemGeneral settings
#
# The following settings are copied to /Dem/DemGeneral by ConfGen.
#
# When both the Dem and the NvM modules are configured, the Dem_NvMShutdown()
# function invokes the NvM_Rb_SetWriteAllTrigger() function from the NvM
# module. As a result the NvMRbSetWriteAllTriggerApi parameter should be set
# to True. This can be set as the default in algo.properties as follows:
#
# manprop_NvMCommon=\
# NvMRbSetWriteAllTriggerApi:true
#
# DemAvailabilitySupport
#   This configuration switch defines, whether support for availability is
#   enabled or not.
#  Parameter: /Dem/DemGeneral/DemAvailabilitySupport
#  Default: DEM_NO_AVAILABILITY
#
# DemEventCombinationSupport
#   This parameter defines the type of event combination supported by the Dem.
#  Parameter: /Dem/DemGeneral/DemEventCombinationSupport
#  Default: DEM_EVCOMB_DISABLED
#
# DemGeneralInterfaceSupport
#   The interfaces GeneralEvtInfo, GeneralCallbackEventDataChanged and
#   GeneralCallbackEventStatusChange are provided if
#   DemGeneralInterfaceSupport is equal to true.
#  Parameter: /Dem/DemGeneral/DemGeneralInterfaceSupport
#  Default: false
#
# DemMaxNumberEventEntryPermanent
#   Maximum number of events which can be stored in the permanent memory.
#  Parameter: /Dem/DemGeneral/DemMaxNumberEventEntryPermanent
#  Default: 0
#
# DemMaxNumberPrestoredFF
#   Defines the maximum number for prestored freeze frames.
#  Parameter: /Dem/DemGeneral/DemMaxNumberPrestoredFF
#  Default: 5
#
# DemSuppressionSupport
#   This configuration switch defines, whether support for suppression is
#   enabled or not.
#  Parameter: /Dem/DemGeneral/DemSuppressionSupport
#  Default: DEM_NO_SUPPRESSION
#
# DemTaskTime
#   Allow to configure the time for the periodic cyclic task.
#  Parameter: /Dem/DemGeneral/DemTaskTime
#  Default: 0.001
#
# DemTriggerDcmReports
#   Activate/Deactivate the notification to the Diagnostic Communication
#   Manager for ROE processing.
#  Parameter: /Dem/DemGeneral/DemTriggerDcmReports
#  Default: false
#
# DemTriggerDltReports
#   Activate/Deactivate the notification to the Diagnostic Log and Trace.
#  Parameter: /Dem/DemGeneral/DemTriggerDltReports
#  Default: false
#
# DemTriggerFiMReports
#   Activate/Deactivate the notification to the Function Inhibition Manager.
#  Parameter: /Dem/DemGeneral/DemTriggerFiMReports
#  Default: false
#
# DemTriggerMonitorInitBeforeClearOk
#   Defines if the monitor re-initialization has to be triggered before or
#   after the Dem module returns E_OK.
#  Parameter: /Dem/DemGeneral/DemTriggerMonitorInitBeforeClearOk
#  Default: false
#
# DemVersionInfoApi
#   Activate/Deactivate the version information API.
#  Parameter: /Dem/DemGeneral/DemVersionInfoApi
#  Default: false
#
# DemClearDTCBehavior
#   Defines the clearing process of diagnostic information for volatile and
#   non-volatile memory and the positive response handling for the Dcm module.
#  Parameter: /Dem/DemGeneral/DemClearDTCBehavior
#  Default: DEM_CLRRESP_NONVOLATILE_FINISH
#
# DemDebounceTimeBasedSupport
#   This configuration switch defines, whether support for time based
#   debouncing is enabled or not.
#  Parameter: /Dem/DemGeneral/DemDebounceTimeBasedSupport
#  Default: false
#
# DemOccurrenceCounterProcessing
#   This configuration switch defines the consideration of the fault
#   confirmation process for the occurrence counter.
#  Parameter: /Dem/DemGeneral/DemOccurrenceCounterProcessing
#  Default: DEM_PROCESS_OCCCTR_TF
#
# DemEventMemoryEntryStorageTrigger
#   Configures the primary trigger to allocate an event memory entry.
#  Parameter: /Dem/DemGeneral/DemEventMemoryEntryStorageTrigger
#  Default: DEM_TRIGGER_ON_TEST_FAILED
#
# DemDebounceCounterBasedSupport
#   This configuration switch defines, whether support for counter based
#   debouncing is enabled or not.
#  Parameter: /Dem/DemGeneral/DemDebounceCounterBasedSupport
#  Default: false
#
# DemDataElementDefaultEndianness
#   This configuration switch defines, whether support for counter based
#   debouncing is enabled or not.
#  Parameter: /Dem/DemGeneral/DemDataElementDefaultEndianness
#  Default: BIG_ENDIAN
#
# Specific Override: (none)
# Dev Error Detection: /Dem/DemGeneral/DemDevErrorDetect
#

# Example:
# manprop_DemGeneral=\
# DemAvailabilitySupport:DEM_NO_AVAILABILITY,\
# DemEventCombinationSupport:DEM_EVCOMB_DISABLED,\
# DemGeneralInterfaceSupport:false,\
# DemMaxNumberEventEntryPermanent:0,\
# DemMaxNumberPrestoredFF:5,\
# DemSuppressionSupport:DEM_NO_SUPPRESSION,\
# DemTaskTime:0.001,\
# DemTriggerDcmReports:false,\
# DemTriggerDltReports:false,\
# DemTriggerFiMReports:false,\
# DemTriggerMonitorInitBeforeClearOk:false,\
# DemVersionInfoApi:false,\
# DemClearDTCBehavior:DEM_CLRRESP_NONVOLATILE_FINISH,\
# DemDebounceTimeBasedSupport:false,\
# DemOccurrenceCounterProcessing:DEM_PROCESS_OCCCTR_TF,\
# DemEventMemoryEntryStorageTrigger:DEM_TRIGGER_ON_TEST_FAILED,\
# DemDebounceCounterBasedSupport:false,\
# DemDataElementDefaultEndianness:BIG_ENDIAN




# DemClient settings
#
# The following settings are copied to /Dem/DemGeneral/DemClient by ConfGen.
#
# DemClientFunctionality
#   Functionality provided by Dem for the DemClient.
#  Parameter: /Dem/DemGeneral/DemClient/DemClientFunctionality
#  Default: DEM_CLIENT_USES_FULL_FUNCTIONALITY
#
# DemClientUsesRte
#   If set to true, this client shall only use the DEM via RTE (Dem will
#   provide the C/S interfaces: CddIf, EvMemOverflowIndication).
#  Parameter: /Dem/DemGeneral/DemClient/DemClientUsesRte
#  Default: false
#
# DemRbClientPriority
#   This parameter defines a unique priority value that a DemClient can have.
#  Parameter: /Dem/DemGeneral/DemClient/DemRbClientPriority
#  Default: 1
#
# Specific Override: (none)
#

# Example:
# manprop_DemClient=\
# DemClientFunctionality:DEM_CLIENT_USES_FULL_FUNCTIONALITY,\
# DemClientUsesRte:false,\
# DemRbClientPriority:1




# DemRbGeneral settings
#
# The following settings are copied to /Dem/DemGeneral/DemRbGeneral by
# ConfGen.
#
# DemRbSupportSuspicious
#   This configuration switch defines, event and component suspicious feature
#   support is enabled or not.
#  Parameter: /Dem/DemGeneral/DemRbGeneral/DemRbSupportSuspicious
#  Default: false
#
# DemRbDebugData
#   This Parameter controls the availability of Debug data 0 and 1 in failure
#   memory
#  Parameter: /Dem/DemGeneral/DemRbGeneral/DemRbDebugData
#  Default: OFF
#
# DemRbDebugDataBeforeInit
#   DemRbDebugDataBeforeInit (i.e debug data support between Preinit and Init)
#   is supported or not
#  Parameter: /Dem/DemGeneral/DemRbGeneral/DemRbDebugDataBeforeInit
#  Default: false
#
# Specific Override: (none)
#

# Example:
# manprop_DemRbGeneral=\
# DemRbSupportSuspicious:false,\
# DemRbDebugData:OFF,\
# DemRbDebugDataBeforeInit:false




# DemExternalCSDataElementClass settings
#
# The following settings are copied to
# /Dem/DemGeneral/DemDataElementClass/DemExternalCSDataElementClass by
# ConfGen.
#
# DemDataElementUsePort
#   If the parameter is set to True, a R-Port is generated, to obtain the data
#   element (interface DataServices_{Data}).
#  Parameter: /Dem/DemGeneral/DemDataElementClass
#               /DemExternalCSDataElementClass/DemDataElementUsePort
#  Default: true
#
# DemDataElementDataSize
#   Defines the size of the data element in bytes.
#  Parameter: /Dem/DemGeneral/DemDataElementClass
#               /DemExternalCSDataElementClass/DemDataElementDataSize
#  Default: 5
#
# Specific Override: DemExternalCSDataElementClass.shortname
#

# Example:
# manprop_DemExternalCSDataElementClass_ALL=\
# DemDataElementUsePort:true,\
# DemDataElementDataSize:5




# E2EXfRb_General settings
#
# The following settings are copied to /E2EXf/E2EXfRb_General by ConfGen.
#
# E2EXfRb_Variant
#   With this parameter the implementation variant can be selected.
#  Parameter: /E2EXf/E2EXfRb_General/E2EXfRb_Variant
#  Default: E2EXF_STANDARD_V01
#
# Specific Override: (none)
# ConfigureBSW: Always Created
#

# Example:
# manprop_E2EXfRb_General=\
# E2EXfRb_Variant:E2EXF_STANDARD_V01




# EaGeneral settings
#
# The following settings are copied to /Ea/EaGeneral by ConfGen.
#
# EaIndex
#   Specifies the InstanceId of this module instance.
#  Parameter: /Ea/EaGeneral/EaIndex
#  Default: 0
#
# EaPushedEepSize
#   The EEPROM size in bytes which is pushed from EEPROM driver.
#  Parameter: /Ea/EaGeneral/EaPushedEepSize
#  Default: 1024
#
# EaSetModeSupported
#   Compiler switch to enable/disable the 'SetMode' functionality of the EA
#   module.
#  Parameter: /Ea/EaGeneral/EaSetModeSupported
#  Default: true
#
# EaVersionInfoApi
#   Pre-processor switch to enable / disable the API to read out the modules
#   version information.
#  Parameter: /Ea/EaGeneral/EaVersionInfoApi
#  Default: true
#
# EaVirtualPageSize
#   The size in bytes to which logical blocks shall be aligned.
#  Parameter: /Ea/EaGeneral/EaVirtualPageSize
#  Default: 8
#
# Specific Override: (none)
# Dev Error Detection: /Ea/EaGeneral/EaDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_EaGeneral=\
# EaIndex:0,\
# EaPushedEepSize:1024,\
# EaSetModeSupported:true,\
# EaVersionInfoApi:true,\
# EaVirtualPageSize:8




# EaPublishedInformation settings
#
# The following settings are copied to /Ea/EaPublishedInformation by ConfGen.
#
# EaBlockOverhead
#   Management overhead per logical block in bytes.
#  Parameter: /Ea/EaPublishedInformation/EaBlockOverhead
#  Default: 14
#
# EaMaximumBlockingTime
#   The maximum time the EA module API routines shall be blocked (delayed) by
#   internal operations.
#  Parameter: /Ea/EaPublishedInformation/EaMaximumBlockingTime
#  Default: 5
#
# EaPageOverhead
#   Management overhead per page in bytes.
#  Parameter: /Ea/EaPublishedInformation/EaPageOverhead
#  Default: 0
#
# Specific Override: (none)
# ConfigureBSW: Always Created
#

# Example:
# manprop_EaPublishedInformation=\
# EaBlockOverhead:14,\
# EaMaximumBlockingTime:5,\
# EaPageOverhead:0




# EcuCRbSettings settings
#
# The following settings are copied to /EcuC/EcuCRbSettings by ConfGen.
#
# EcuCRbRteInUse
#   If the value is false, RTE is disabled, else its enabled in the
#   Configuration.
#  Parameter: /EcuC/EcuCRbSettings/EcuCRbRteInUse
#  Default: true
#
# EcuCRbArRelease
#   Select the AUTOSAR Version/Revision,the Project is Based on.
#  Parameter: /EcuC/EcuCRbSettings/EcuCRbArRelease
#  Default: AR42_Rev2
#
# Specific Override: (none)
# ConfigureBSW: Always Created
#

# Example:
# manprop_EcuCRbSettings=\
# EcuCRbRteInUse:true,\
# EcuCRbArRelease:AR42_Rev2




# EcucPduCollection settings
#
# The following settings are copied to /EcuC/EcucConfigSet/EcucPduCollection
# by ConfGen.
#
# PduIdTypeEnum
#   The PduIdType is used within the entire AUTOSAR Com Stack except for bus
#   drivers.
#  Parameter: /EcuC/EcucConfigSet/EcucPduCollection/PduIdTypeEnum
#  Default: uint16
#
# PduLengthTypeEnum
#   The PduLengthType is used within the entire AUTOSAR Com Stack except for
#   bus drivers.
#  Parameter: /EcuC/EcucConfigSet/EcucPduCollection/PduLengthTypeEnum
#  Default: uint16
#
# Specific Override: (none)
# ConfigureBSW: Always Created
#

# Example:
# manprop_EcucPduCollection=\
# PduIdTypeEnum:uint16,\
# PduLengthTypeEnum:uint16




# EthCtrlConfig settings
#
# The following settings are copied to /Eth/EthConfigSet/EthCtrlConfig by
# ConfGen.
#
# EthCtrlEnableMii
#   Enables / Disables Media Independent Interface (MII) for transceiver
#   access
#  Parameter: /Eth/EthConfigSet/EthCtrlConfig/EthCtrlEnableMii
#  Default: true
#
# EthCtrlEnableRxInterrupt
#   Enables / Disables receive interrupt
#  Parameter: /Eth/EthConfigSet/EthCtrlConfig/EthCtrlEnableRxInterrupt
#  Default: false
#
# EthCtrlEnableTxInterrupt
#   Enables / Disables transmit interrupt
#  Parameter: /Eth/EthConfigSet/EthCtrlConfig/EthCtrlEnableTxInterrupt
#  Default: false
#
# EthCtrlMacLayerSpeed
#   Defines the data transfer speeds of the MAC layer
#  Parameter: /Eth/EthConfigSet/EthCtrlConfig/EthCtrlMacLayerSpeed
#  Default: ETH_MAC_LAYER_SPEED_100M
#
# EthCtrlTxBufLenByte
#   Limits the maximum transmit buffer length (frame length) in bytes.
#  Parameter: /Eth/EthConfigSet/EthCtrlConfig/EthCtrlTxBufLenByte
#  Default: 1024
#
# EthTxBufTotal
#   Configures the number of transmit buffers
#  Parameter: /Eth/EthConfigSet/EthCtrlConfig/EthTxBufTotal
#  Default: 128
#
# EthCtrlRxBufLenByte
#   Limits the maximum receive buffer length (frame length) in bytes.
#  Parameter: /Eth/EthConfigSet/EthCtrlConfig/EthCtrlRxBufLenByte
#  Default: 1024
#
# EthRxBufTotal
#   Configures the number of receive buffers
#  Parameter: /Eth/EthConfigSet/EthCtrlConfig/EthRxBufTotal
#  Default: 128
#
# Specific Override: EthCtrlConfig.shortname
#

# Example:
# manprop_EthCtrlConfig=\
# EthCtrlEnableMii:true,\
# EthCtrlEnableRxInterrupt:false,\
# EthCtrlEnableTxInterrupt:false,\
# EthCtrlMacLayerSpeed:ETH_MAC_LAYER_SPEED_100M,\
# EthCtrlTxBufLenByte:1024,\
# EthTxBufTotal:128,\
# EthCtrlRxBufLenByte:1024,\
# EthRxBufTotal:128




# EthCtrlConfigIngressFifo settings
#
# The following settings are copied to /Eth/EthConfigSet/EthCtrlConfig
# /EthCtrlConfigIngress/EthCtrlConfigIngressFifo by ConfGen.
#
# EthCtrlConfigIngressFifoBufLenByte
#   Configures the receive Buffer Length
#  Parameter: /Eth/EthConfigSet/EthCtrlConfig/EthCtrlConfigIngress
#               /EthCtrlConfigIngressFifo/EthCtrlConfigIngressFifoBufLenByte
#  Default: 0
#
# EthCtrlConfigIngressFifoBufTotal
#   Configures the number of receive Buffers.
#  Parameter: /Eth/EthConfigSet/EthCtrlConfig/EthCtrlConfigIngress
#               /EthCtrlConfigIngressFifo/EthCtrlConfigIngressFifoBufTotal
#  Default: 0
#
# EthCtrlConfigIngressFifoIdx
#   Configures the receive Queue Index
#  Parameter: /Eth/EthConfigSet/EthCtrlConfig/EthCtrlConfigIngress
#               /EthCtrlConfigIngressFifo/EthCtrlConfigIngressFifoIdx
#  Default: 0
#
# Specific Override: EthCtrlConfigIngressFifo.shortname
#

# Example:
# manprop_EthCtrlConfigIngressFifo_ALL=\
# EthCtrlConfigIngressFifoBufLenByte:0,\
# EthCtrlConfigIngressFifoBufTotal:0,\
# EthCtrlConfigIngressFifoIdx:0




# EthGeneral settings
#
# The following settings are copied to /Eth/EthGeneral by ConfGen. EthIndex
# added here as Confgen doesn't support more than 1 Ethernet Driver
#
# EthIndex
#   Specifies the InstanceId of this module instance.
#  Parameter: /Eth/EthGeneral/EthIndex
#  Default: 0
#
# EthCfgHclkWait
#   Waiting time in microseconds for TSU reset.
#  Parameter: /Eth/EthGeneral/EthCfgHclkWait
#  Default: 20
#
# EthDemEventsEnabled
#   This parameter enables or disables the DEM events.
#  Parameter: /Eth/EthGeneral/EthDemEventsEnabled
#  Default: false
#
# EthExtendedSwStatisticCounters
#   Enables / Disables the statistic counters implemented in software.
#  Parameter: /Eth/EthGeneral/EthExtendedSwStatisticCounters
#  Default: false
#
# EthGetDropCountApi
#   Enables / Disables Eth_GetDropCount API.
#  Parameter: /Eth/EthGeneral/EthGetDropCountApi
#  Default: false
#
# EthGetEtherStatsApi
#   Enables / Disables Eth_GetEtherStats API.
#  Parameter: /Eth/EthGeneral/EthGetEtherStatsApi
#  Default: false
#
# EthGlobalTimeSupport
#   Enables/Disables the GlobalTime APIs used amongst others by Global Time
#   Synchronization over Ethernet.
#  Parameter: /Eth/EthGeneral/EthGlobalTimeSupport
#  Default: false
#
# EthHardwareControllerPortNumber
#   ETNA Controller has two ports.
#  Parameter: /Eth/EthGeneral/EthHardwareControllerPortNumber
#  Default: 0
#
# EthMainFunctionPTPPeriod
#   Specifies the period of main function Eth_MainFunctionPTP in seconds.
#  Parameter: /Eth/EthGeneral/EthMainFunctionPTPPeriod
#  Default: 0
#
# EthMainFunctionPeriod
#   Specifies the period of main function Eth_MainFunction in seconds.
#  Parameter: /Eth/EthGeneral/EthMainFunctionPeriod
#  Default: 0.001
#
# EthMaxCtrlsSupported
#   Limits the total number of supported controllers
#  Parameter: /Eth/EthGeneral/EthMaxCtrlsSupported
#  Default: 1
#
# EthMdioClkPeriodWaitCpuCycles
#   MDIO communication to with the transceiver is based on Bit-Bang principle.
#  Parameter: /Eth/EthGeneral/EthMdioClkPeriodWaitCpuCycles
#  Default: 20
#
# EthSwSupportRxChecksum
#   Enables / Disables checksum calculation for IP.
#  Parameter: /Eth/EthGeneral/EthSwSupportRxChecksum
#  Default: false
#
# EthSwSupportTxChecksum
#   Enables / Disables checksum calculation for IP.
#  Parameter: /Eth/EthGeneral/EthSwSupportTxChecksum
#  Default: false
#
# EthUpdatePhysAddrFilter
#   Enables/Disables optional API Eth_UpdatePhysAddrFilter
#  Parameter: /Eth/EthGeneral/EthUpdatePhysAddrFilter
#  Default: false
#
# EthVersionInfoApi
#   Enables / Disables version info API
#  Parameter: /Eth/EthGeneral/EthVersionInfoApi
#  Default: false
#
# Specific Override: EthGeneral.shortname
# Dev Error Detection: /Eth/EthGeneral/EthDevErrorDetect
#

# Example:
# manprop_EthGeneral=\
# EthIndex:0,\
# EthCfgHclkWait:20,\
# EthDemEventsEnabled:false,\
# EthExtendedSwStatisticCounters:false,\
# EthGetDropCountApi:false,\
# EthGetEtherStatsApi:false,\
# EthGlobalTimeSupport:false,\
# EthHardwareControllerPortNumber:0,\
# EthMainFunctionPTPPeriod:0,\
# EthMainFunctionPeriod:0.001,\
# EthMaxCtrlsSupported:1,\
# EthMdioClkPeriodWaitCpuCycles:20,\
# EthSwSupportRxChecksum:false,\
# EthSwSupportTxChecksum:false,\
# EthUpdatePhysAddrFilter:false,\
# EthVersionInfoApi:false




# EthCtrlOffloading settings
#
# The following settings are copied to /Eth/EthGeneral/EthCtrlOffloading by
# ConfGen.
#
# EthCtrlEnableOffloadChecksumICMP
#   Enables / Disables hardware offloading for ICMP checksums.
#  Parameter: /Eth/EthGeneral/EthCtrlOffloading
#               /EthCtrlEnableOffloadChecksumICMP
#  Default: false
#
# EthCtrlEnableOffloadChecksumIPv4
#   Enables / Disables hardware offloading for IPv4 checksums.
#  Parameter: /Eth/EthGeneral/EthCtrlOffloading
#               /EthCtrlEnableOffloadChecksumIPv4
#  Default: false
#
# EthCtrlEnableOffloadChecksumTCP
#   Enables / Disables hardware offloading for TCP checksums.
#  Parameter: /Eth/EthGeneral/EthCtrlOffloading
#               /EthCtrlEnableOffloadChecksumTCP
#  Default: false
#
# EthCtrlEnableOffloadChecksumUDP
#   Enables / Disables hardware offloading for UDP checksums.
#  Parameter: /Eth/EthGeneral/EthCtrlOffloading
#               /EthCtrlEnableOffloadChecksumUDP
#  Default: false
#
# Specific Override: EthCtrlOffloading.shortname
# ConfigureBSW: Always Created
#

# Example:
# manprop_EthCtrlOffloading=\
# EthCtrlEnableOffloadChecksumICMP:false,\
# EthCtrlEnableOffloadChecksumIPv4:false,\
# EthCtrlEnableOffloadChecksumTCP:false,\
# EthCtrlEnableOffloadChecksumUDP:false




# EthIfPhysCtrlRxMainFunctionPriorityProcessing settings
#
# The following settings are copied to /EthIf/EthIfConfigSet
# /EthIfPhysController/EthIfPhysCtrlRxMainFunctionPriorityProcessing by
# ConfGen.
#
# EthIfPhysCtrlRxMainFunctionPeriod
#   Specifies the period of main function in seconds.
#  Parameter: /EthIf/EthIfConfigSet/EthIfPhysController
#               /EthIfPhysCtrlRxMainFunctionPriorityProcessing
#               /EthIfPhysCtrlRxMainFunctionPeriod
#  Default: 0.01
#
# Specific Override: EthIfPhysCtrlRxMainFunctionPriorityProcessing.shortname
#

# Example:
# manprop_EthIfPhysCtrlRxMainFunctionPriorityProcessing=\
# EthIfPhysCtrlRxMainFunctionPeriod:0.01




# EthIfGeneral settings
#
# The following settings are copied to /EthIf/EthIfGeneral by ConfGen.
#
# EthIfEnableSignalQualityApi
#   Enable/disable the APIs to read and clear the signal quality for Trcv and
#   switch.
#  Parameter: /EthIf/EthIfGeneral/EthIfEnableSignalQualityApi
#  Default: false
#
# EthIfGetAndResetMeasurementDataApi
#   Enables / Disables the Get and Reset Measurement Data API
#  Parameter: /EthIf/EthIfGeneral/EthIfGetAndResetMeasurementDataApi
#  Default: false
#
# EthIfGetVlanIdSupport
#   Enables / Disables GetVlanId API.
#  Parameter: /EthIf/EthIfGeneral/EthIfGetVlanIdSupport
#  Default: false
#
# EthIfGlobalTimeSupport
#   Enables/Disables the Global Time APIs used amongst others by Global Time
#   Synchronization over Ethernet.
#  Parameter: /EthIf/EthIfGeneral/EthIfGlobalTimeSupport
#  Default: false
#
# EthIfMainFunctionPeriod
#   Specifies the period of main function EthIf_MainFunctionTx in seconds.
#  Parameter: /EthIf/EthIfGeneral/EthIfMainFunctionPeriod
#  Default: 0.001
#
# EthIfMainFunctionStatePeriod
#   Specifies the period of main function EthIf_MainFunctionState in seconds.
#  Parameter: /EthIf/EthIfGeneral/EthIfMainFunctionStatePeriod
#  Default: 0.001
#
# EthIfTrcvLinkStateChgMainReload
#   Specifies the frequency of transceiver link state change checks in each
#   period of main function EthIf_MainFunctionState.
#  Parameter: /EthIf/EthIfGeneral/EthIfTrcvLinkStateChgMainReload
#  Default: 10
#
# EthIfVersionInfoApi
#   Enables / Disables version info API
#  Parameter: /EthIf/EthIfGeneral/EthIfVersionInfoApi
#  Default: false
#
# Specific Override: EthIfGeneral.shortname
# Dev Error Detection: /EthIf/EthIfGeneral/EthIfDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_EthIfGeneral=\
# EthIfEnableSignalQualityApi:false,\
# EthIfGetAndResetMeasurementDataApi:false,\
# EthIfGetVlanIdSupport:false,\
# EthIfGlobalTimeSupport:false,\
# EthIfMainFunctionPeriod:0.001,\
# EthIfMainFunctionStatePeriod:0.001,\
# EthIfTrcvLinkStateChgMainReload:10,\
# EthIfVersionInfoApi:false




# EthIfRxIndicationConfig settings
#
# The following settings are copied to
# /EthIf/EthIfConfigSet/EthIfRxIndicationConfig/EthIfRxIndicationFunction by
# ConfGen.
#
# EthIfRxIndicationFunction
#   Specifies receive indication callback function.
#  Parameter: /EthIf/EthIfConfigSet/EthIfRxIndicationConfig
#               /EthIfRxIndicationFunction
#  Default: TcpIp_RxIndication
#
# Specific Override: EthIfRxIndicationConfig.shortname
#

# Example:
# manprop_EthIfRxIndicationConfig=\
# EthIfRxIndicationFunction:TcpIp_RxIndication




# EthIfController settings
#
# The following settings are copied to /EthIf/EthIfConfigSet/EthIfController
# by ConfGen.
#
# EthIfCtrlMtu
#   Specifies the maximum transmission unit (MTU) of the EthIfCtrl in bytes.
#  Parameter: /EthIf/EthIfConfigSet/EthIfController/EthIfCtrlMtu
#  Default: 512
#
# Specific Override: EthIfController.shortname
#

# Example:
# manprop_EthIfController=\
# EthIfCtrlMtu:512




# EthIfFrameOwnerConfig settings
#
# The following settings are copied to
# /EthIf/EthIfConfigSet/EthIfFrameOwnerConfig by ConfGen.
#
# EthIfFrameType
#   Selects the Ethernet frame type.
#  Parameter: /EthIf/EthIfConfigSet/EthIfFrameOwnerConfig/EthIfFrameType
#  Default: 2048
#
# Specific Override: EthIfFrameOwnerConfig.shortname
#

# Example:
# manprop_EthIfFrameOwnerConfig=\
# EthIfFrameType:2048




# EthSMGeneral settings
#
# The following settings are copied to /EthSM/EthSMGeneral by ConfGen.
#
# EthSMDummyMode
#   Disables the API to the EthIf.
#  Parameter: /EthSM/EthSMGeneral/EthSMDummyMode
#  Default: false
#
# EthSMMainFunctionPeriod
#   Specifies the period in seconds that the MainFunction has to be triggered
#   with.
#  Parameter: /EthSM/EthSMGeneral/EthSMMainFunctionPeriod
#  Default: 0.005
#
# EthSMVersionInfoApi
#   Enables and disables the version info API.
#  Parameter: /EthSM/EthSMGeneral/EthSMVersionInfoApi
#  Default: false
#
# Specific Override: EthSMGeneral.shortname
# Dev Error Detection: /EthSM/EthSMGeneral/EthSMDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_EthSmGeneral=\
# EthSMDummyMode:false,\
# EthSMMainFunctionPeriod:0.005,\
# EthSMVersionInfoApi:false




# EthSMNetworkUserConfig settings
#
# The following settings are copied to /EthSM/EthSMNetworkUserConfig by
# ConfGen.
#
# EthSMNetworkUserType
#   RB (Vendor06) specific parameter: This parameter specifies the EthSM
#   network user module.
#  Parameter: /EthSM/EthSMNetworkUserConfig/EthSMNetworkUserType
#  Default: TCPIP
#
# Specific Override: EthSMNetworkUserConfig.shortname
#

# Example:
# manprop_EthSMNetworkUserConfig=\
# EthSMNetworkUserType:TCPIP




# EthTrcvConfig settings
#
# The following settings are copied to /EthTrcv/EthTrcvConfigSet/EthTrcvConfig
# by ConfGen.
#
# EthTrcvCtrlIdx
#   Specifies the index of the controller used for MII access to the
#   transceiver
#  Parameter: /EthTrcv/EthTrcvConfigSet/EthTrcvConfig/EthTrcvCtrlIdx
#  Default: 0
#
# EthTrcvIdx
#   Specifies the instance ID of the configured transceiver.
#  Parameter: /EthTrcv/EthTrcvConfigSet/EthTrcvConfig/EthTrcvIdx
#  Default: 0
#
# EthTrcvMiiIdx
#   Specifies the 5 bit phy address used to access the indexed transceiver.
#  Parameter: /EthTrcv/EthTrcvConfigSet/EthTrcvConfig/EthTrcvMiiIdx
#  Default: 0
#
# EthTrcvDuplexMode
#   Specifies the duplex mode of the Ethernet transceiver link if
#   Auto-Negotiation is disabled.
#  Parameter: /EthTrcv/EthTrcvConfigSet/EthTrcvConfig/EthTrcvDuplexMode
#  Default: ETHTRCV_DUPLEX_MODE_FULL
#
# EthTrcvRbDriverMiiApi
#   The communication from EthTrcv to Phy-hardware is managed by Mac
#   (controller) hardware and SW.
#  Parameter: /EthTrcv/EthTrcvConfigSet/EthTrcvConfig/EthTrcvRbDriverMiiApi
#  Default: ETHTRCV_DRIVER_SUPPORT_OAWAPI_TO_PROVIDE_MII_FUNCTIONALITY
#
# EthTrcvSpeed
#   Specifies the speed of the Ethernet transceiver link in [MBit/s].
#  Parameter: /EthTrcv/EthTrcvConfigSet/EthTrcvConfig/EthTrcvSpeed
#  Default: TRCV_SPEED_100
#
# Specific Override: EthTrcvConfigSet.shortname
#

# Example:
# manprop_EthTrcvConfig=\
# EthTrcvCtrlIdx:0,\
# EthTrcvIdx:0,\
# EthTrcvMiiIdx:0,\
# EthTrcvDuplexMode:ETHTRCV_DUPLEX_MODE_FULL,\
# EthTrcvRbDriverMiiApi:\
ETHTRCV_DRIVER_SUPPORT_OAWAPI_TO_PROVIDE_MII_FUNCTIONALITY,\
# EthTrcvSpeed:TRCV_SPEED_100




# EthTrcvGeneral settings
#
# The following settings are copied to /EthTrcv/EthTrcvGeneral by ConfGen.
#
# EthTrcvIndex
#   Specifies the InstanceId of this module instance.
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvIndex
#  Default: 0
#
# EthTrcvMaxTrcvsSupported
#   EthTrcvMaxTrcvsSupported
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvMaxTrcvsSupported
#  Default: 1
#
# EthTrcvGetBaudRateApi
#   This api is used to get the BaudRate of the indexed transceiver.Possible
#   values are ETHTRCV_BAUD_RATE_10MBIT,ETHTRCV_BAUD_RATE_100MBIT and
#   ETHTRCV_BAUD_RATE_1000MBIT.Currently the api is supported by DP83822 only.
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvGetBaudRateApi
#  Default: false
#
# EthTrcvGetDuplexModeApi
#   This api gets the Duplex mode of the indexed transceiver.Possible values
#   are ETHTRCV_DUPLEX_MODE_HALF and ETHTRCV_DUPLEX_MODE_FULL.Currently the
#   api is supported by DP83822 only.
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvGetDuplexModeApi
#  Default: false
#
# EthTrcvGetLinkStateApi
#   This api gets the link status between the indexed transceiver and its link
#   partner.The link status can be ETHTRCV_LINK_STATE_DOWN or
#   ETHTRCV_LINK_STATE_ACTIVE.
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvGetLinkStateApi
#  Default: true
#
# EthTrcvGetTransceiverModeApi
#   This api gets the mode of the indexed transceiver.
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvGetTransceiverModeApi
#  Default: false
#
# EthTrcvMainFunctionPeriod
#   Specifies the period of main function EthTrcv_MainFunction in seconds.
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvMainFunctionPeriod
#  Default: 0.001
#
# EthTrcvRbHardwareType
#   RB (Vendor06) specific parameter: Type of the used Hardware
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvRbHardwareType
#  Default: DP83822
#
# EthTrcvSetTransceiverModeApi
#   This api sets the mode of the indexed transceiver.Possible values are
#   ETHTRCV_MODE_DOWN and ETHTRCV_MODE_ACTIVE.
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvSetTransceiverModeApi
#  Default: true
#
# EthTrcvStartAutoNegotiationApi
#   This api is used to restart the negotiation of the transmission
#   parameters(speed and duplexmode) used by the indexed transceiver.Currently
#   the api is supported by DP83822 and RTL9010AA only.
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvStartAutoNegotiationApi
#  Default: false
#
# EthTrcvVersionInfoApi
#   Enables / Disables version info API
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvVersionInfoApi
#  Default: false
#
# EthTrcvVersionInfoApiMacro
#   Enables / Disables version info API macro implementation
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvVersionInfoApiMacro
#  Default: false
#
# EthTrcvWakeUpSupport
#   Configures wake-up to polling or interrupt or to not used/not supported.
#  Parameter: /EthTrcv/EthTrcvGeneral/EthTrcvWakeUpSupport
#  Default: ETHTRCV_WAKEUP_NOT_SUPPORTED
#
# Specific Override: EthTrcvGeneral.shortname
# Dev Error Detection: /EthTrcv/EthTrcvGeneral/EthTrcvDevErrorDetect
#

# Example:
# manprop_EthTrcvGeneral=\
# EthTrcvIndex:0,\
# EthTrcvMaxTrcvsSupported:1,\
# EthTrcvGetBaudRateApi:false,\
# EthTrcvGetDuplexModeApi:false,\
# EthTrcvGetLinkStateApi:true,\
# EthTrcvGetTransceiverModeApi:false,\
# EthTrcvMainFunctionPeriod:0.001,\
# EthTrcvRbHardwareType:DP83822,\
# EthTrcvSetTransceiverModeApi:true,\
# EthTrcvStartAutoNegotiationApi:false,\
# EthTrcvVersionInfoApi:false,\
# EthTrcvVersionInfoApiMacro:false,\
# EthTrcvWakeUpSupport:ETHTRCV_WAKEUP_NOT_SUPPORTED




# EthTSynGeneral settings
#
# The following settings are copied to /EthTSyn/EthTSynGeneral by ConfGen.
#
# EthTSynDestPhyAddr
#   Destination Physical Address (MAC-Address).
#  Parameter: /EthTSyn/EthTSynGeneral/EthTSynDestPhyAddr
#  Default: 01:80:C2:00:00:0E
#
# EthTSynHardwareTimestampSupport
#   Activate/Deactivate the hardware time stamping functionality of the
#   Ethernet hardware.
#  Parameter: /EthTSyn/EthTSynGeneral/EthTSynHardwareTimestampSupport
#  Default: false
#
# EthTSynMainFunctionPeriod
#   Schedule period of the main function EthTSyn_MainFunction.
#  Parameter: /EthTSyn/EthTSynGeneral/EthTSynMainFunctionPeriod
#  Default: 0.001
#
# EthTSynMasterSlaveConflictDetection
#   Enables master / slave conflict detection and notification.
#  Parameter: /EthTSyn/EthTSynGeneral/EthTSynMasterSlaveConflictDetection
#  Default: false
#
# EthTSynVersionInfoApi
#   Activate/Deactivate the version information API (EthTSyn_GetVersionInfo).
#  Parameter: /EthTSyn/EthTSynGeneral/EthTSynVersionInfoApi
#  Default: false
#
# EthTSynMessageCompliance
#   * true: IEEE 802.1AS compliant message format will be used.
#  Parameter: /EthTSyn/EthTSynGeneral/EthTSynMessageCompliance
#  Default: true
#
# Specific Override: EthTSyn.shortname
# Dev Error Detection: /EthTSyn/EthTSynGeneral/EthTSynDevErrorDetect
#

# Example:
# manprop_EthTSynGeneral=\
# EthTSynDestPhyAddr:01:80:C2:00:00:0E,\
# EthTSynHardwareTimestampSupport:false,\
# EthTSynMainFunctionPeriod:0.001,\
# EthTSynMasterSlaveConflictDetection:false,\
# EthTSynVersionInfoApi:false,\
# EthTSynMessageCompliance:true




# FeeGeneral settings
#
# The following settings are copied to /Fee/FeeGeneral by ConfGen.
#
# If FeeRbMachineType is set to MCU_RB_MANUAL_CFG, you will need to configure
# FeeRbSectorTable and NumberOfFeeSectors as well as setting FeeRbMachineType.
# For example:
# manprop_FeeGeneral=\
# FeeRbMachineType:MCU_RB_MANUAL_CFG,
#
# manprop_FeeGeneral/FeeRbSectorTable=\
# FlsRbPageSize:8,\
# FeeRbFastCacheInitActive:true,\
# FeeRbHeaderRecheckActive:false,\
# FlsRbErasedValue:255,
#
# manprop_NumberOfFeeRbSectors = 4
#
# manprop_FeeGeneral/FeeRbSectorTable/FeeRbSector_ALL=\
# FlsRbSectorSize:65536
#
# FeeIndex
#   This paramdef is not used and is obselete.
#  Parameter: /Fee/FeeGeneral/FeeIndex
#  Default: 0
#
# FeePollingMode
#   Pre-processor switch to enable and disable the polling mode for this
#   module (usage of the job result functionality).
#  Parameter: /Fee/FeeGeneral/FeePollingMode
#  Default: true
#
# FeeRbConfirmSingleStorageBlockloss
#   If FS1 or FS2 is selected as filesystem: Blocks configured with single
#   storage have a very low probability to get lost even during regular
#   operation.
#  Parameter: /Fee/FeeGeneral/FeeRbConfirmSingleStorageBlockloss
#  Default: true
#
# FeeRbMachineType
#   Controller type to be configured in case no MCU module is present.
#  Parameter: /Fee/FeeGeneral/FeeRbMachineType
#  Default: MCU_RB_EVE_AUTOSAR
#
# FeeSetModeSupported
#   Compiler switch to enable/disable the "SetMode" functionality of the FEE
#   module.
#  Parameter: /Fee/FeeGeneral/FeeSetModeSupported
#  Default: false
#
# FeeVersionInfoApi
#   Pre-processor switch to enable / disable the API to read out the modules
#   version information.
#  Parameter: /Fee/FeeGeneral/FeeVersionInfoApi
#  Default: false
#
# FeeVirtualPageSize
#   The size in bytes to which logical blocks shall be aligned.
#  Parameter: /Fee/FeeGeneral/FeeVirtualPageSize
#  Default: 8
#
# Specific Override: (none)
# Dev Error Detection: /Fee/FeeGeneral/FeeDevErrorDetect
#

# Example:
# manprop_FeeGeneral=\
# FeeIndex:0,\
# FeePollingMode:true,\
# FeeRbConfirmSingleStorageBlockloss:true,\
# FeeRbMachineType:MCU_RB_EVE_AUTOSAR,\
# FeeSetModeSupported:false,\
# FeeVersionInfoApi:false,\
# FeeVirtualPageSize:8




# NumberOfFeeRbSectors settings
#
# Specify the number of sectors to be created when configuring the Fee module,
# e.g. manprop_NumberOfFeeRbSectors=4
#
# Default: (none)
#

# Example:
# manprop_NumberOfFeeRbSectors=null




# FeeGeneral/FeeRbSectorTable settings
#
# If FeeRbMachineType is MCU_RB_MANUAL_CFG, the following settings are copied
# to /Fee/FeeGeneral/FeeRbSectorTable by ConfGen. If FeeRbMachineType has any
# other value, these settings are ignored.
#
# FlsRbPageSize
#   Size of one page of this sector in bytes (HW/target dependant
#   configuration)
#  Parameter: /Fee/FeeGeneral/FeeRbSectorTable/FlsRbPageSize
#  Default: 8
#
# FeeRbFastCacheInitActive
#   Switch to enable and disable Fast cache initialization.
#  Parameter: /Fee/FeeGeneral/FeeRbSectorTable/FeeRbFastCacheInitActive
#  Default: true
#
# FeeRbHeaderRecheckActive
#   switch to enable and disable Header Recheck, necessary to be set to true
#   only for flash types with undefined erase pattern
#  Parameter: /Fee/FeeGeneral/FeeRbSectorTable/FeeRbHeaderRecheckActive
#  Default: false
#
# FlsRbErasedValue
#   This parameter defines the erase value of the Data Flash (HW/target
#   dependant configuration)
#  Parameter: /Fee/FeeGeneral/FeeRbSectorTable/FlsRbErasedValue
#  Default: 255
#
# Specific Override: (none)
# ConfigureBSW: Implemented
#

# Example:
# manprop_FeeGeneral/FeeRbSectorTable=\
# FlsRbPageSize:8,\
# FeeRbFastCacheInitActive:true,\
# FeeRbHeaderRecheckActive:false,\
# FlsRbErasedValue:255




# FeeGeneral/FeeRbSectorTable/FeeRbSector settings
#
# If FeeRbMachineType is MCU_RB_MANUAL_CFG, the following settings are copied
# to /Fee/FeeGeneral/FeeRbSectorTable/FeeRbSector by ConfGen. If
# FeeRbMachineType has any other value, these settings are ignored.
#
# FlsRbSectorSize
#   Size of this sector in bytes
#  Parameter: /Fee/FeeGeneral/FeeRbSectorTable/FeeRbSector/FlsRbSectorSize
#  Default: 65536
#
# Specific Override: "FeeGeneral/FeeRbSectorTable/" + FeeRbSector.shortname
# ConfigureBSW: Implemented
#

# Example:
# manprop_FeeGeneral/FeeRbSectorTable/FeeRbSector_ALL=\
# FlsRbSectorSize:65536




# FeePublishedInformation settings
#
# /Fee/FeePublishedInformation is created if it does not exist.
#
# Container: /Fee/FeePublishedInformation
# Specific Override: (none)
# ConfigureBSW: Always Created
#

# Example:
# manprop_FeePublishedInformation=null




# FlsGeneral settings
#
# The following settings are copied to /Fls/FlsGeneral by ConfGen.
#
# FlsAcLoadOnJobStart
#   The flash driver shall load the flash access code to RAM whenever an erase
#   or write job is started and unload (overwrite) it after that job has been
#   finished or canceled.
#  Parameter: /Fls/FlsGeneral/FlsAcLoadOnJobStart
#  Default: false
#
# FlsBaseAddress
#   The flash memory start address for user.
#  Parameter: /Fls/FlsGeneral/FlsBaseAddress
#  Default: 0
#
# FlsCancelApi
#   Compile switch to enable and disable the Fls_Cancel function.
#  Parameter: /Fls/FlsGeneral/FlsCancelApi
#  Default: false
#
# FlsCompareApi
#   Compile switch to enable and disable the Fls_Compare function.
#  Parameter: /Fls/FlsGeneral/FlsCompareApi
#  Default: false
#
# FlsDriverIndex
#   The configured "Memory: Fls-Driver" can be assigned to a dedicated Fls
#   Device-instance by selecting the related FlsDriverIndex.
#  Parameter: /Fls/FlsGeneral/FlsDriverIndex
#  Default: 0
#
# FlsGetJobResultApi
#   Compile switch to enable and disable the Fls_GetJobResult function.
#  Parameter: /Fls/FlsGeneral/FlsGetJobResultApi
#  Default: false
#
# FlsGetStatusApi
#   Compile switch to enable and disable the Fls_GetStatus function.
#  Parameter: /Fls/FlsGeneral/FlsGetStatusApi
#  Default: false
#
# FlsSetModeApi
#   Compile switch to enable and disable the Fls_SetMode function.
#  Parameter: /Fls/FlsGeneral/FlsSetModeApi
#  Default: false
#
# FlsTotalSize
#   The total amount of flash memory in bytes (This parameter in conjunction
#   with FLS_BASE_ADDRESS defines the upper boundary for read / write / erase
#   and compare jobs).
#  Parameter: /Fls/FlsGeneral/FlsTotalSize
#  Default: 0
#
# FlsUseInterrupts
#   Job processing triggered by hardware interrupt.
#  Parameter: /Fls/FlsGeneral/FlsUseInterrupts
#  Default: false
#
# FlsVersionInfoApi
#   Pre-processor switch to enable / disable the API to read out the modules
#   version information.
#  Parameter: /Fls/FlsGeneral/FlsVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /Fls/FlsGeneral/FlsDevErrorDetect
#

# Example:
# manprop_FlsGeneral=\
# FlsAcLoadOnJobStart:false,\
# FlsBaseAddress:0,\
# FlsCancelApi:false,\
# FlsCompareApi:false,\
# FlsDriverIndex:0,\
# FlsGetJobResultApi:false,\
# FlsGetStatusApi:false,\
# FlsSetModeApi:false,\
# FlsTotalSize:0,\
# FlsUseInterrupts:false,\
# FlsVersionInfoApi:false




# FrGeneral settings
#
# The following settings are copied to /Fr/FrGeneral by ConfGen.
#
# FrCtrlTestCount
#   Maxmimum number of iterations the FlexRay controller hardware test is
#   performed during controller initialization.
#  Parameter: /Fr/FrGeneral/FrCtrlTestCount
#  Default: 1
#
# FrIndex
#   Specifies the InstanceId of this module instance.
#  Parameter: /Fr/FrGeneral/FrIndex
#  Default: 0
#
# FrDisableLPduSupport
#   Enables or disabled API function Fr_DisableLPdu.
#  Parameter: /Fr/FrGeneral/FrDisableLPduSupport
#  Default: false
#
# FrPrepareLPduSupport
#   Enables or disables API function Fr_PrepareLPdu.
#  Parameter: /Fr/FrGeneral/FrPrepareLPduSupport
#  Default: false
#
# FrReconfigLPduSupport
#   Enables or disabled API function Fr_ReconfigLPdu.
#  Parameter: /Fr/FrGeneral/FrReconfigLPduSupport
#  Default: false
#
# FrRxStringentCheck
#   If stringent check is enabled (true), received frames are accepted only if
#   no slot status error occurred.
#  Parameter: /Fr/FrGeneral/FrRxStringentCheck
#  Default: false
#
# FrRxStringentLengthCheck
#   If stringent check is enabled (true), received frames are accepted only if
#   the received payload length matches the configured payload length.
#  Parameter: /Fr/FrGeneral/FrRxStringentLengthCheck
#  Default: false
#
# FrVersionInfoApi
#   Enables/disables the existence of the Fr_GetVersionInfo API.
#  Parameter: /Fr/FrGeneral/FrVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /Fr/FrGeneral/FrDevErrorDetect
#

# Example:
# manprop_FrGeneral=\
# FrCtrlTestCount:1,\
# FrIndex:0,\
# FrDisableLPduSupport:false,\
# FrPrepareLPduSupport:false,\
# FrReconfigLPduSupport:false,\
# FrRxStringentCheck:false,\
# FrRxStringentLengthCheck:false,\
# FrVersionInfoApi:false




# FrController settings
#
# The following settings are copied to
# /Fr/FrMultipleConfiguration/FrController by ConfGen.
#
# FrCtrlIdx
#   Determines index of CC within Fr.
#  Parameter: /Fr/FrMultipleConfiguration/FrController/FrCtrlIdx
#  Default: 0
#
# FrPExternalSync
#   Flag indicating whether the node is externally synchronized (operating as
#   time gateway sink in an TT-E cluster) or locally synchronized.
#  Parameter: /Fr/FrMultipleConfiguration/FrController/FrPExternalSync
#  Default: false
#
# FrPFallBackInternal
#   Flag indicating whether a time gateway sink node will switch to local
#   clock operation when synchronization with the time gateway source node is
#   lost (FrPFallBackInternal = true) or will instead go to POC:ready
#   (FrPFallBackInternal =false).
#  Parameter: /Fr/FrMultipleConfiguration/FrController/FrPFallBackInternal
#  Default: false
#
# FrPKeySlotId
#   ID of the key slot, i.e., the slot used to transmit the startup frame,
#   sync frame, or designated key slot frame.
#  Parameter: /Fr/FrMultipleConfiguration/FrController/FrPKeySlotId
#  Default: 0
#
# FrPKeySlotOnlyEnabled
#   Flag indicating whether or not the node shall enter key slot only mode
#   following startup.
#  Parameter: /Fr/FrMultipleConfiguration/FrController/FrPKeySlotOnlyEnabled
#  Default: false
#
# FrPNmVectorEarlyUpdate
#   Flag indicating when the update of the Network Management Vector
#  Parameter: /Fr/FrMultipleConfiguration/FrController/FrPNmVectorEarlyUpdate
#  Default: false
#
# FrPSecondKeySlotId
#   ID of the second key slot, in which a second startup frame shall be sent
#   when operating as a coldstart node in a TT-L or TT-D cluster.
#  Parameter: /Fr/FrMultipleConfiguration/FrController/FrPSecondKeySlotId
#  Default: 0
#
# FrPTwoKeySlotMode
#   Flag indicating whether node operates as a coldstart node in a TT-E or
#   TT-L cluster.
#  Parameter: /Fr/FrMultipleConfiguration/FrController/FrPTwoKeySlotMode
#  Default: false
#
# Specific Override: FrController.shortname
#

# Example:
# manprop_FrController_ALL=\
# FrCtrlIdx:0,\
# FrPExternalSync:false,\
# FrPFallBackInternal:false,\
# FrPKeySlotId:0,\
# FrPKeySlotOnlyEnabled:false,\
# FrPNmVectorEarlyUpdate:false,\
# FrPSecondKeySlotId:0,\
# FrPTwoKeySlotMode:false




# FrIfGeneral settings
#
# The following settings are copied to /FrIf/FrIfGeneral by ConfGen.
#
# FrIfNumClstSupported
#   Maximum number of FlexRay Clusters that the FlexRay Interface supports.
#  Parameter: /FrIf/FrIfGeneral/FrIfNumClstSupported
#  Default: 1
#
# FrIfAllSlotsSupport
#   Configuration parameter to enable/disable FrIf support to enable/disable
#   of switching from key-slot / single-slot mode to all slot mode.
#  Parameter: /FrIf/FrIfGeneral/FrIfAllSlotsSupport
#  Default: true
#
# FrIfDisableLPduSupport
#   Configuration parameter to enable/disable FrIf support to disables the
#   hardware resource of a LPdu for transmission/reception.
#  Parameter: /FrIf/FrIfGeneral/FrIfDisableLPduSupport
#  Default: false
#
# FrIfGetClockCorrectionSupport
#   Configuration parameter to enable/disable FrIf support to enable/disable
#   of polling the FlexRay Driver to getting CC clock correction values.
#  Parameter: /FrIf/FrIfGeneral/FrIfGetClockCorrectionSupport
#  Default: false
#
# FrIfGetGetChannelStatusSupport
#   Configuration parameter to enable/disable FrIf support to enable/disable
#   of polling the FlexRay Driver to getting error information about the
#   FlexRay communications bus.
#  Parameter: /FrIf/FrIfGeneral/FrIfGetGetChannelStatusSupport
#  Default: false
#
# FrIfGetNmVectorSupport
#   Configuration parameter to enable/disable FrIf support to request the
#   FlexRay hardware NMVector.
#  Parameter: /FrIf/FrIfGeneral/FrIfGetNmVectorSupport
#  Default: false
#
# FrIfGetNumOfStartupFramesSupport
#   Configuration parameter to enable/disable FrIf support to enable/disable
#   of polling the FlexRay Driver for the actual number of received startup
#   frames on the bus.
#  Parameter: /FrIf/FrIfGeneral/FrIfGetNumOfStartupFramesSupport
#  Default: false
#
# FrIfGetSyncFrameListSupport
#   Configuration parameter to enable/disable FrIf support to enable/disable
#   of polling the FlexRay Driver to getting a list of actual received sync
#   frames.
#  Parameter: /FrIf/FrIfGeneral/FrIfGetSyncFrameListSupport
#  Default: false
#
# FrIfGetWakeupRxStatusSupport
#   Configuration parameter to enable/disable FrIf support to get the wakeup
#   received information from the FlexRay controller.
#  Parameter: /FrIf/FrIfGeneral/FrIfGetWakeupRxStatusSupport
#  Default: false
#
# FrIfNumCtrlSupported
#   Maximum number of FlexRay CCs that the FlexRay Interface supports
#  Parameter: /FrIf/FrIfGeneral/FrIfNumCtrlSupported
#  Default: 1
#
# FrIfReconfigLPduSupport
#   Configuration parameter to enable/disable FrIf support to enable/disable
#   the reconfiguration of a given LPdu according to the parameters (FrameId,
#   Channel, CycleRepetition, CycleOffset, PayloadLength, HeaderCRC) at
#   runtime.
#  Parameter: /FrIf/FrIfGeneral/FrIfReconfigLPduSupport
#  Default: false
#
# FrIfVersionInfoApi
#   Enables/disables the existence of the FrIf_GetVersionInfo() API service
#  Parameter: /FrIf/FrIfGeneral/FrIfVersionInfoApi
#  Default: false
#
# FrIfVendor6Driver
#   Parameter to suppress the dependency between FrIf and Fr is BOSCH Fr is
#   not used.
#  Parameter: /FrIf/FrIfGeneral/FrIfVendor6Driver
#  Default: false
#
# FrIfZeroPayloadTx
#   Switch to Transmit Zero payload when there is no IPdu transmit request
#  Parameter: /FrIf/FrIfGeneral/FrIfZeroPayloadTx
#  Default: false
#
# FrIfEnableCallbackSorting
#   This Parameter is to sort the Tx confirmations and Rx indications
#   Callbacks based on the corresponding Slot IDs of Flexray frames.
#  Parameter: /FrIf/FrIfGeneral/FrIfEnableCallbackSorting
#  Default: true
#
# FrIfTransceiverSharing
#   True: A single transceiver is shared by two controllers with same channel,
#   False: The transceiver is not shared by two controllers.
#  Parameter: /FrIf/FrIfGeneral/FrIfTransceiverSharing
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /FrIf/FrIfGeneral/FrIfDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_FrIfGeneral=\
# FrIfNumClstSupported:1,\
# FrIfAllSlotsSupport:true,\
# FrIfDisableLPduSupport:false,\
# FrIfGetClockCorrectionSupport:false,\
# FrIfGetGetChannelStatusSupport:false,\
# FrIfGetNmVectorSupport:false,\
# FrIfGetNumOfStartupFramesSupport:false,\
# FrIfGetSyncFrameListSupport:false,\
# FrIfGetWakeupRxStatusSupport:false,\
# FrIfNumCtrlSupported:1,\
# FrIfReconfigLPduSupport:false,\
# FrIfVersionInfoApi:false,\
# FrIfVendor6Driver:false,\
# FrIfZeroPayloadTx:false,\
# FrIfEnableCallbackSorting:true,\
# FrIfTransceiverSharing:false




# FrIfCluster settings
#
# The following settings are copied to /FrIf/FrIfConfig/FrIfCluster by
# ConfGen.
#
# The JobList execution function FrIf_JobListExec() can be configured as
# either a Schedulable or Interrupt entity, and the configuration can be done
# using the FrIfJobListExecEntityCategory parameter. If this function is
# defined as Schedulable, the period time for this function also has to be
# provided through the FrIfJobListExecFunctionPeriod parameter. For example:
#
# manprop_FrIfCluster=\
# FrIfJobListExecFunctionPeriod:0.002,\
# FrIfJobListExecEntityCategory:Schedulable
#
# When using configuration generation with a valid system description of
# FlexRay, FrIfJobListExecEntityCategory will be configured with the default
# value of Interrupt. If FrIfJobListExecEntityCategory is required as
# Schedulable, you should follow the above example.
#
# FrIfMainFunctionPeriod
#   The execution cycle of the FrIf_MainFunction_<cluster>() in seconds.
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfMainFunctionPeriod
#  Default: 0.01
#
# FrIfMaxIsrDelay
#   The maximum delay in macroticks the FrIf_JoblistExec_<cluster>() function
#   is processed after the absolute timer interrupt was triggered.
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfMaxIsrDelay
#  Default: 100
#
# FrIfGdWakeupTxActive
#   Number of bits used by the node to transmit the LOW phase of awakeup
#   symbol and the HIGH and LOW phases of a WUDOP [gdBit].
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfGdWakeupTxActive
#  Default: 15
#
# FrIfJobListExecEntityCategory
#   Categorizes this executable entity.
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfJobListExecEntityCategory
#  Default: Interrupt
#
# Specific Override: (none)
#

# Example:
# manprop_FrIfCluster=\
# FrIfMainFunctionPeriod:0.01,\
# FrIfMaxIsrDelay:100,\
# FrIfGdWakeupTxActive:15,\
# FrIfJobListExecEntityCategory:Interrupt




# FrIfFrameTriggering settings
#
# The following settings are copied to
# /FrIf/FrIfConfig/FrIfCluster/FrIfController/FrIfFrameTriggering by ConfGen.
#
# FrIfAlwaysTransmit
#   Defines whether the driver's API function Fr_TransmitTxLPdu() shall always
#   be called for this L-PDU.
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfController/FrIfFrameTriggering
#               /FrIfAlwaysTransmit
#  Default: false
#
# FrIfNoneMode
#   Using the "None-Mode" which means that there is no API FrIf_Transmit call
#   of the upper layer for this PDU.
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfController/FrIfFrameTriggering
#               /FrIfNoneMode
#  Default: false
#
# FrIfAllowDynamicLSduLength
#   Allows L-PDU length reduction ('FrIfLSduLength' defines max.
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfController/FrIfFrameTriggering
#               /FrIfAllowDynamicLSduLength
#  Default: false
#
# Specific Override: FrIfFrameTriggering.shortname
#

# Example:
# manprop_FrIfFrameTriggering_ALL=\
# FrIfAlwaysTransmit:false,\
# FrIfNoneMode:false,\
# FrIfAllowDynamicLSduLength:false




# FrIfPdusInFrame settings
#
# The following settings are copied to
# /FrIf/FrIfConfig/FrIfFrameStructure/FrIfPdusInFrame by ConfGen.
#
# FrIfPduOffset
#   The value specifies the offset of the PDU within the Frame [bytes].
#  Parameter: /FrIf/FrIfConfig/FrIfFrameStructure/FrIfPdusInFrame
#               /FrIfPduOffset
#  Default: 0
#
# Specific Override: FrIfPdusInFrame.shortname
#

# Example:
# manprop_FrIfPdusInFrame_ALL=\
# FrIfPduOffset:0




# FrifJobListWizard settings
#
# The following settings are copied to
# /FrIf/FrIfConfig/FrIfCluster/FrIfJobList/FrifJobListWizard by ConfGen.
#
# FrIfJobDelay
#   Delay between the current job and the next job in the FlexRay joblist.
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfJobList/FrifJobListWizard
#               /FrIfJobDelay
#  Default: 0
#
# FrIfJobListCFGType
#   Note : The joblist algorithm type AR31 name has been replaced by STANDARD
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfJobList/FrifJobListWizard
#               /FrIfJobListCFGType
#  Default: ESP
#
# Specific Override: FrifJobListWizard.shortname
# ConfigureBSW: Always Created
#

# Example:
# manprop_FrifJobListWizard=\
# FrIfJobDelay:0,\
# FrIfJobListCFGType:ESP




# FrIfJobEntry settings
#
# The following settings are copied to
# /FrIf/FrIfConfig/FrIfCluster/FrIfJobList/FrifJobListWizard/FrIfJobEntry by
# ConfGen.
#
# FrIfMacroTick
#   Macrotick offset in the Cycle [Macrotick].
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfJobList/FrifJobListWizard
#               /FrIfJobEntry/FrIfMacroTick
#  Default: 0
#
# FrIfBaseCycle
#   This parameter contains the FlexRay Base Cycle used to transmit this
#   FlexRay Frame.
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfJobList/FrifJobListWizard
#               /FrIfJobEntry/FrIfBaseCycle
#  Default: 0
#
# FrIfCycleRepetition
#   This parameter contains the FlexRay Cycle Repetition used to transmit this
#   FlexRay Frame.possible Values: 1,2,4,8,16,32,64.
#  Parameter: /FrIf/FrIfConfig/FrIfCluster/FrIfJobList/FrifJobListWizard
#               /FrIfJobEntry/FrIfCycleRepetition
#  Default: 1
#
# Specific Override: FrIfJobEntry.shortname
#

# Example:
# manprop_FrIfJobEntry=\
# FrIfMacroTick:0,\
# FrIfBaseCycle:0,\
# FrIfCycleRepetition:1




# FrSMCluster settings
#
# The following settings are copied to /FrSM/FrSMConfig/FrSMCluster by
# ConfGen.
#
# FrSMIsDualChannelNode
#   True: The ECU is having 2 channels.
#  Parameter: /FrSM/FrSMConfig/FrSMCluster/FrSMIsDualChannelNode
#  Default: false
#
# FrSMCheckWakeupReason
#   If FrSMCheckWakeupReason is true, the FrSM will check the wakeup reason in
#   order to skip the wakeup in case of wakeup by bus.
#  Parameter: /FrSM/FrSMConfig/FrSMCluster/FrSMCheckWakeupReason
#  Default: false
#
# FrSMDelayStartupWithoutWakeup
#   If true, timer t1 shall be started instead of immediately calling
#   FrIf_AllowColdstart in case of a startup without wakeup.
#  Parameter: /FrSM/FrSMConfig/FrSMCluster/FrSMDelayStartupWithoutWakeup
#  Default: false
#
# FrSMDurationT1
#   The duration of timer t1 in seconds.
#  Parameter: /FrSM/FrSMConfig/FrSMCluster/FrSMDurationT1
#  Default: 1
#
# FrSMDurationT3
#   The duration of timer t3 in seconds.
#  Parameter: /FrSM/FrSMConfig/FrSMCluster/FrSMDurationT3
#  Default: 0
#
# FrSMDurationT4
#   The timer t4 ensures that a dual channel node will eventually clear its
#   coldstart inhibit bit and become a leading coldstarter.
#  Parameter: /FrSM/FrSMConfig/FrSMCluster/FrSMDurationT4
#  Default: 0
#
# FrSMIsColdstartEcu
#   True: The ECU is a coldstart node for this FlexRay cluster.
#  Parameter: /FrSM/FrSMConfig/FrSMCluster/FrSMIsColdstartEcu
#  Default: true
#
# FrSMIsWakeupEcu
#   True: FrSM shall perform a wakeup for this cluster.
#  Parameter: /FrSM/FrSMConfig/FrSMCluster/FrSMIsWakeupEcu
#  Default: false
#
# FrSMMainFunctionCycleTime
#   This parameter defines the cycle time in seconds of the periodic calling
#   of FrSM main function.
#  Parameter: /FrSM/FrSMConfig/FrSMCluster/FrSMMainFunctionCycleTime
#  Default: 0.01
#
# FrSMNumWakeupPatterns
#   Maximum number of Wakeup Patterns the node may send before going to
#   FRSM_STARTUP.
#  Parameter: /FrSM/FrSMConfig/FrSMCluster/FrSMNumWakeupPatterns
#  Default: 0
#
# FrSMDurationT2
#   The duration of timer t2 in seconds.
#  Parameter: /FrSM/FrSMConfig/FrSMCluster/FrSMDurationT2
#  Default: 0
#
# Specific Override: FrSMCluster.shortname
#

# Example:
# manprop_FrSMCluster_ALL=\
# FrSMIsDualChannelNode:false,\
# FrSMCheckWakeupReason:false,\
# FrSMDelayStartupWithoutWakeup:false,\
# FrSMDurationT1:1,\
# FrSMDurationT3:0,\
# FrSMDurationT4:0,\
# FrSMIsColdstartEcu:true,\
# FrSMIsWakeupEcu:false,\
# FrSMMainFunctionCycleTime:0.01,\
# FrSMNumWakeupPatterns:0,\
# FrSMDurationT2:0




# FrSMGeneral settings
#
# The following settings are copied to /FrSM/FrSMGeneral by ConfGen.
#
# FrSMInitCallBack
#   Enables and disables the call of the init callback function
#  Parameter: /FrSM/FrSMGeneral/FrSMInitCallBack
#  Default: false
#
# FrSMSystemTimerUsed
#   Enables and disables the use of system timer in the project.
#  Parameter: /FrSM/FrSMGeneral/FrSMSystemTimerUsed
#  Default: false
#
# FrSMDSMReInit
#   Enables or disables the reporting of DEM event after DSM Re-initialisation
#  Parameter: /FrSM/FrSMGeneral/FrSMDSMReInit
#  Default: false
#
# FrSMVersionInfoApi
#   Enables and disables the version info API
#  Parameter: /FrSM/FrSMGeneral/FrSMVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /FrSM/FrSMGeneral/FrSMDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_FrSMGeneral=\
# FrSMInitCallBack:false,\
# FrSMSystemTimerUsed:false,\
# FrSMDSMReInit:false,\
# FrSMVersionInfoApi:false




# FrNmGlobalFeatures settings
#
# The following settings are copied to
# /FrNm/FrNmGlobalConfig/FrNmGlobalFeatures by ConfGen.
#
# FrNmCoordinatorSyncSupport
#   Enables/disables the coordinator synchronization support.
#  Parameter: /FrNm/FrNmGlobalConfig/FrNmGlobalFeatures
#               /FrNmCoordinatorSyncSupport
#  Default: false
#
# FrNmCycleCounterEmulation
#   Pre-processor switch for enabling the cycle counter emulation.
#  Parameter: /FrNm/FrNmGlobalConfig/FrNmGlobalFeatures
#               /FrNmCycleCounterEmulation
#  Default: false
#
# FrNmVotingNextToLastRepetitionCycleDisable
#   Pre-processor switch for disabling vote changes in the last two
#  Parameter: /FrNm/FrNmGlobalConfig/FrNmGlobalFeatures
#               /FrNmVotingNextToLastRepetitionCycleDisable
#  Default: false
#
# FrNmComControlEnabled
#   Pre-processor switch for enabling i14229 Communication Control support.
#  Parameter: /FrNm/FrNmGlobalConfig/FrNmGlobalFeatures/FrNmComControlEnabled
#  Default: true
#
# FrNmExtraReadySleepCount
#   Pre-processor switch for enabling state change indication.
#  Parameter: /FrNm/FrNmGlobalConfig/FrNmGlobalFeatures
#               /FrNmExtraReadySleepCount
#  Default: false
#
# Specific Override: (none)
#

# Example:
# manprop_FrNmGlobalFeatures=\
# FrNmCoordinatorSyncSupport:false,\
# FrNmCycleCounterEmulation:false,\
# FrNmVotingNextToLastRepetitionCycleDisable:false,\
# FrNmComControlEnabled:true,\
# FrNmExtraReadySleepCount:false




# FrNmGlobalProperties settings
#
# The following settings are copied to
# /FrNm/FrNmGlobalConfig/FrNmGlobalProperties by ConfGen.
#
# FrNmMainAcrossFrCycle
#   If the FlexRay NM MainFunction is executed completely within the FlexRay
#   communication cycle where the last NM vote of the current vote cycle is
#   received, the FrNmMainAcrossFrCycle shall be configured to FALSE.
#  Parameter: /FrNm/FrNmGlobalConfig/FrNmGlobalProperties
#               /FrNmMainAcrossFrCycle
#  Default: false
#
# FrNmVersionInfoApi
#   Pre-processor switch for enabling version info API support.
#  Parameter: /FrNm/FrNmGlobalConfig/FrNmGlobalProperties/FrNmVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /FrNm/FrNmGlobalConfig/FrNmGlobalProperties
#               /FrNmDevErrorDetect
#

# Example:
# manprop_FrNmGlobalProperties=\
# FrNmMainAcrossFrCycle:false,\
# FrNmVersionInfoApi:false




# FrNmChannelIdentifiers settings
#
# The following settings are copied to
# /FrNm/FrNmChannelConfig/FrNmChannel/FrNmChannelIdentifiers by ConfGen.
#
# FrNmRepeatMessageBitActive
#   This parameter is used to activate or deactivate the repeat message bit
#   support for a Fr Nm Channel.
#  Parameter: /FrNm/FrNmChannelConfig/FrNmChannel/FrNmChannelIdentifiers
#               /FrNmRepeatMessageBitActive
#  Default: false
#
# FrNmSynchronizationPointEnabled
#   This parameter defines if this channel shall provide the synchronization
#   point indication to the NM Interface.
#  Parameter: /FrNm/FrNmChannelConfig/FrNmChannel/FrNmChannelIdentifiers
#               /FrNmSynchronizationPointEnabled
#  Default: false
#
# Specific Override: FrNmChannelIdentifiers.shortname
#

# Example:
# manprop_FrNmChannelIdentifiers_ALL=\
# FrNmRepeatMessageBitActive:false,\
# FrNmSynchronizationPointEnabled:false




# FrNmChannelTiming settings
#
# The following settings are copied to
# /FrNm/FrNmChannelConfig/FrNmChannel/FrNmChannelTiming by ConfGen.
#
# FrNm_Mainfunction() and FrNm_MainfunctionTx() can be configured as either
# Schedulable or Interrupt entities, and the configuration can be done using
# the FrNmMainFunctionExecEntityCategory and
# FrNmMainFunctionTxExecEntityCategory parameters. If these main functions are
# defined as Schedulable, the period time for each function also has to be
# provided through the FrNmMainFunctionPeriod and FrNmMainFunctionPeriodTx
# parameters. If FrNm_Mainfunction() is configured as Schedulable it should be
# executed at least once in each FlexRay cycle, so FrNmMainFunctionPeriod
# should be less than or equal to the FrIf parameter FrIfGdCycle.
#
# When using configuration generation with a valid system description of
# FlexRay, FrNmMainFunctionExecEntityCategory and
# FrNmMainFunctionTxExecEntityCategory will be configured with the default
# value of Schedulable, and FrNmMainFunctionPeriod is set based on the
# periodic information of system description.
#
# FrNmMainFunctionExecEntityCategory
#   Categorizes this executable entity.
#  Parameter: /FrNm/FrNmChannelConfig/FrNmChannel/FrNmChannelTiming
#               /FrNmMainFunctionExecEntityCategory
#  Default: Schedulable
#
# FrNmMainFunctionTxExecEntityCategory
#   Categorizes this executable entity.
#  Parameter: /FrNm/FrNmChannelConfig/FrNmChannel/FrNmChannelTiming
#               /FrNmMainFunctionTxExecEntityCategory
#  Default: Schedulable
#
# Specific Override: FrNmChannelTiming.shortname
#

# Example:
# manprop_FrNmChannelTiming_ALL=\
# FrNmMainFunctionExecEntityCategory:Schedulable,\
# FrNmMainFunctionTxExecEntityCategory:Schedulable




# FrTpGeneral settings
#
# The following settings are copied to /FrTp/FrTpGeneral by ConfGen.
#
# FrTpAckRt
#   Preprocessor switch for enabling the Acknowledgement and retry mechanisms.
#  Parameter: /FrTp/FrTpGeneral/FrTpAckRt
#  Default: false
#
# FrTpChangeParamApi
#   Preprocessor switch for enabling the API to change FrTp communication
#   parameters.
#  Parameter: /FrTp/FrTpGeneral/FrTpChangeParamApi
#  Default: false
#
# FrTpVersionInfoApi
#   Preprocessor switch for enabling the Version info API.
#  Parameter: /FrTp/FrTpGeneral/FrTpVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /FrTp/FrTpGeneral/FrTpDevErrorDetect
#

# Example:
# manprop_FrTpGeneral=\
# FrTpAckRt:false,\
# FrTpChangeParamApi:false,\
# FrTpVersionInfoApi:false




# IpduMGeneral settings
#
# The following settings are copied to /IpduM/IpduMGeneral by ConfGen.
#
# IpduMRxTimeBase
#   The period between successive calls to IpduM_MainFunctionRx in seconds.
#  Parameter: /IpduM/IpduMGeneral/IpduMRxTimeBase
#  Default: 0.01
#
# IpduMTxTimeBase
#   The period between successive calls to IpduM_MainFunctionTx in seconds.
#  Parameter: /IpduM/IpduMGeneral/IpduMTxTimeBase
#  Default: 0.01
#
# IpduMStaticPartExists
#   This is to allow optimizations in the case the IpduM will never be used
#   with a static part.
#  Parameter: /IpduM/IpduMGeneral/IpduMStaticPartExists
#  Default: false
#
# IpduMVersionInfoApi
#   Active/Deactivate the version information API.
#  Parameter: /IpduM/IpduMGeneral/IpduMVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /IpduM/IpduMGeneral/IpduMDevErrorDetect
#

# Example:
# manprop_IpduMGeneral=\
# IpduMRxTimeBase:0.01,\
# IpduMTxTimeBase:0.01,\
# IpduMStaticPartExists:false,\
# IpduMVersionInfoApi:false




# IpduMPublishedInformation settings
#
# The following settings are copied to /IpduM/IpduMPublishedInformation by
# ConfGen.
#
# IpduMRxDirectComInvocation
#   If set to TRUE the COM invocation optimization as defined in.
#  Parameter: /IpduM/IpduMPublishedInformation/IpduMRxDirectComInvocation
#  Default: false
#
# Specific Override: (none)
# ConfigureBSW: Always Created
#

# Example:
# manprop_IpduMPublishedInformation=\
# IpduMRxDirectComInvocation:false




# IpduMTxRequest settings
#
# The following settings are copied to
# /IpduM/IpduMConfig/IpduMTxPathway/IpduMTxRequest by ConfGen.
#
# IpduMTxConfirmationTimeout
#   This timeout (in seconds) defines the timeout period for monitoring the
#   reception of the TxConfirmation.
#  Parameter: /IpduM/IpduMConfig/IpduMTxPathway/IpduMTxRequest
#               /IpduMTxConfirmationTimeout
#  Default: 1
#
# Specific Override: (none)
#

# Example:
# manprop_IpduMTxRequest=\
# IpduMTxConfirmationTimeout:1




# IpduMTxDynamicPart settings
#
# The following settings are copied to
# /IpduM/IpduMConfig/IpduMTxPathway/IpduMTxRequest/IpduMTxDynamicPart by
# ConfGen.
#
# IpduMTxDynamicConfirmation
#   A transmit request can be confirmed by the lower layer.
#  Parameter: /IpduM/IpduMConfig/IpduMTxPathway/IpduMTxRequest
#               /IpduMTxDynamicPart/IpduMTxDynamicConfirmation
#  Default: true
#
# Specific Override: (none)
#

# Example:
# manprop_IpduMTxDynamicPart=\
# IpduMTxDynamicConfirmation:true




# IpduMTxStaticPart settings
#
# The following settings are copied to
# /IpduM/IpduMConfig/IpduMTxPathway/IpduMTxRequest/IpduMTxStaticPart by
# ConfGen.
#
# IpduMTxStaticConfirmation
#   A transmit request can be confirmed by the lower layer.
#  Parameter: /IpduM/IpduMConfig/IpduMTxPathway/IpduMTxRequest
#               /IpduMTxStaticPart/IpduMTxStaticConfirmation
#  Default: true
#
# Specific Override: (none)
#

# Example:
# manprop_IpduMTxStaticPart=\
# IpduMTxStaticConfirmation:true




# LdComGeneral settings
#
# The following settings are copied to /LdCom/LdComGeneral by ConfGen.
#
# LdComVersionInfoApi
#   Activate/Deactivate the version information API (LdCom_GetVersionInfo).
#  Parameter: /LdCom/LdComGeneral/LdComVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /LdCom/LdComGeneral/LdComDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_LdComGeneral=\
# LdComVersionInfoApi:false




# LinGeneral settings
#
# The following settings are copied to /Lin/LinGeneral by ConfGen.
#
# LinIndex
#   Specifies the InstanceId of this module instance.
#  Parameter: /Lin/LinGeneral/LinIndex
#  Default: 0
#
# LinVersionInfoApi
#   Switches the Lin_GetVersionInfo function ON or OFF.
#  Parameter: /Lin/LinGeneral/LinVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /Lin/LinGeneral/LinDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_LinGeneral=\
# LinIndex:0,\
# LinVersionInfoApi:false




# Lin settings
#
# The following settings are copied to /Lin/LinGlobalConfig/LinChannel by
# ConfGen.
#
# LinBreakLength
#   Specifies the Sync Break Length in bits allowed range is 13 to 20
#  Parameter: /Lin/LinGlobalConfig/LinChannel/LinBreakLength
#  Default: 13
#
# LinBreakDelLength
#   Specifies the Sync Break Delimiter Length in bits allowed value is 1 to 7
#  Parameter: /Lin/LinGlobalConfig/LinChannel/LinBreakDelLength
#  Default: 1
#
# LinGotoSleepFrameCounter
#   Specifies the number of LIN sleep frames to be sent
#  Parameter: /Lin/LinGlobalConfig/LinChannel/LinGotoSleepFrameCounter
#  Default: 1
#
# Specific Override: LinChannel.shortname
#

# Example:
# manprop_LinChannel_ALL=\
# LinBreakLength:13,\
# LinBreakDelLength:1,\
# LinGotoSleepFrameCounter:1




# LinIfChannel settings
#
# The following settings are copied to /LinIf/LinIfGlobalConfig/LinIfChannel
# by ConfGen.
#
# LinIfGotoSleepConfirmationUL
#   This parameter defines the upper layer (UL) module to which the
#   confirmation of the goto-sleep command shall be sent.
#  Parameter: /LinIf/LinIfGlobalConfig/LinIfChannel
#               /LinIfGotoSleepConfirmationUL
#  Default: LIN_SM
#
# LinIfScheduleRequestConfirmationUL
#   This parameter defines the upper layer (UL) module to which the
#   confirmation of the successfully performed schedule table change.
#  Parameter: /LinIf/LinIfGlobalConfig/LinIfChannel
#               /LinIfScheduleRequestConfirmationUL
#  Default: LIN_SM
#
# LinIfStartupState
#   Defines the state of each LIN channel after startup
#  Parameter: /LinIf/LinIfGlobalConfig/LinIfChannel/LinIfStartupState
#  Default: NORMAL
#
# LinIfWakeupConfirmationUL
#   This parameter defines the upper layer (UL) module to which the
#   confirmation of the wake-up shall be sent.
#  Parameter: /LinIf/LinIfGlobalConfig/LinIfChannel/LinIfWakeupConfirmationUL
#  Default: LIN_SM
#
# Specific Override: LinIfChannel.shortname
#

# Example:
# manprop_LinIfChannel_ALL=\
# LinIfGotoSleepConfirmationUL:LIN_SM,\
# LinIfScheduleRequestConfirmationUL:LIN_SM,\
# LinIfStartupState:NORMAL,\
# LinIfWakeupConfirmationUL:LIN_SM




# LinIfGeneral settings
#
# The following settings are copied to /LinIf/LinIfGeneral by ConfGen.
#
# LinIfNcOptionalRequestSupported
#   States if the node configuration commands Assign NAD and Conditional
#   Change NAD are supported.
#  Parameter: /LinIf/LinIfGeneral/LinIfNcOptionalRequestSupported
#  Default: false
#
# LinIfTpSupported
#   States if the TP is included in the LIN Interface or not.
#  Parameter: /LinIf/LinIfGeneral/LinIfTpSupported
#  Default: false
#
# LinIfCancelTransmitSupported
#   Global Pre-Compile Switch to reliably prevent the generation of the dummy
#   LinIf_CancelTransmit API.
#  Parameter: /LinIf/LinIfGeneral/LinIfCancelTransmitSupported
#  Default: false
#
# LinIfTrcvDriverSupported
#   States if LIN Transceivers are supported by the LIN Interface or not.
#  Parameter: /LinIf/LinIfGeneral/LinIfTrcvDriverSupported
#  Default: false
#
# LinIfVersionInfoApi
#   Switches the LinIf_GetVersionInfo function ON or OFF.
#  Parameter: /LinIf/LinIfGeneral/LinIfVersionInfoApi
#  Default: false
#
# LinIfMultipleDriversSupported
#   States if multiple drivers are included in the LIN Interface or not.
#  Parameter: /LinIf/LinIfGeneral/LinIfMultipleDriversSupported
#  Default: false
#
# LinIfErrorRecovery
#   Enables/Disables the LINIF_ERROR_RECOVERY_SUPPORT.
#  Parameter: /LinIf/LinIfGeneral/LinIfErrorRecovery
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /LinIf/LinIfGeneral/LinIfDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_LinIfGeneral=\
# LinIfNcOptionalRequestSupported:false,\
# LinIfTpSupported:false,\
# LinIfCancelTransmitSupported:false,\
# LinIfTrcvDriverSupported:false,\
# LinIfVersionInfoApi:false,\
# LinIfMultipleDriversSupported:false,\
# LinIfErrorRecovery:false




# LinSMChannel settings
#
# The following settings are copied to /LinSM/LinSMConfigSet/LinSMChannel by
# ConfGen.
#
# LinSMSleepSupport
#   Some LIN clusters does not need sleep, they will just shut off.
#  Parameter: /LinSM/LinSMConfigSet/LinSMChannel/LinSMSleepSupport
#  Default: false
#
# LinSMTransceiverPassiveMode
#   Selects STANDBY (true) or SLEEP (false) transceiver mode when entering
#   LINSM_NO_COM.
#  Parameter: /LinSM/LinSMConfigSet/LinSMChannel/LinSMTransceiverPassiveMode
#  Default: false
#
# LinSMEnableScheduleTableQueue
#   This parameter enables or disables of queue Handling for Run Once Schedule
#   table per channel.
#  Parameter: /LinSM/LinSMConfigSet/LinSMChannel/LinSMEnableScheduleTableQueue
#  Default: false
#
# LinSMConfirmationTimeout
#   Timeout in seconds for the goto sleep and wakeup calls to LinIf.
#  Parameter: /LinSM/LinSMConfigSet/LinSMChannel/LinSMConfirmationTimeout
#  Default: 0.1
#
# Specific Override: LinSMChannel.shortname
#

# Example:
# manprop_LinSMChannel_ALL=\
# LinSMSleepSupport:false,\
# LinSMTransceiverPassiveMode:false,\
# LinSMEnableScheduleTableQueue:false,\
# LinSMConfirmationTimeout:0.1




# LinSMGeneral settings
#
# The following settings are copied to /LinSM/LinSMGeneral by ConfGen.
#
# LinSMVersionInfoApi
#   Switches the LinSM_GetVersionInfo function ON or OFF.
#  Parameter: /LinSM/LinSMGeneral/LinSMVersionInfoApi
#  Default: false
#
# LinSMMainProcessingPeriod
#   Fixed period that the MainFunction shall be called.
#  Parameter: /LinSM/LinSMGeneral/LinSMMainProcessingPeriod
#  Default: 0.01
#
# Specific Override: (none)
# Dev Error Detection: /LinSM/LinSMGeneral/LinSMDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_LinSMGeneral=\
# LinSMVersionInfoApi:false,\
# LinSMMainProcessingPeriod:0.01




# LinSMConfigSet settings
#
# The following settings are copied to /LinSM/LinSMConfigSet by ConfGen.
#
# LinSMModeRequestRepetitionMax
#   Specifies the maximal amount of mode request repetitions without a
#   respective mode indication from the LinIf module until the LinSM module
#   reports a Production Error to the Dem and tries to go back to no
#   communication.
#  Parameter: /LinSM/LinSMConfigSet/LinSMModeRequestRepetitionMax
#  Default: 1
#
# Specific Override: (none)
#

# Example:
# manprop_LinSMConfigSet=\
# LinSMModeRequestRepetitionMax:1




# MemIfGeneral settings
#
# The following settings are copied to /MemIf/MemIfGeneral by ConfGen.
#
# MemIfVersionInfoApi
#   Switch for VersionInfoApi
#  Parameter: /MemIf/MemIfGeneral/MemIfVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /MemIf/MemIfGeneral/MemIfDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_MemIfGeneral=\
# MemIfVersionInfoApi:false




# NmGlobalProperties settings
#
# The following settings are copied to /Nm/NmGlobalConfig/NmGlobalProperties
# by ConfGen.
#
# NmVersionInfoApi
#   Pre-processor switch for enabling Version Info API support.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalProperties/NmVersionInfoApi
#  Default: true
#
# NmCycletimeMainFunction
#   The period between successive calls to the Main Function of the NM
#   Interface in seconds.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalProperties/NmCycletimeMainFunction
#  Default: 0.01
#
# Specific Override: (none)
# Dev Error Detection: /Nm/NmGlobalConfig/NmGlobalProperties/NmDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_NmGlobalProperties=\
# NmVersionInfoApi:true,\
# NmCycletimeMainFunction:0.01




# NmGlobalFeatures settings
#
# The following settings are copied to /Nm/NmGlobalFeatures by ConfGen.
#
# NmCarWakeUpRxEnabled
#   Enables or disables CWU detection.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmCarWakeUpRxEnabled
#  Default: false
#
# NmComUserDataSupport
#   Enable/Disable setting of NMUserData via SW-C.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmComUserDataSupport
#  Default: false
#
# NmCoordinatorSupportEnabled
#   Pre-processor switch for enabling NM Coordinator support.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmCoordinatorSupportEnabled
#  Default: false
#
# NmBusSynchronizationEnabled
#   Pre-processor switch for enabling bus synchronization support of the
#   <BusNm>s.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmBusSynchronizationEnabled
#  Default: false
#
# NmComControlEnabled
#   Pre-processor switch for enabling the Communication Control support.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmComControlEnabled
#  Default: true
#
# NmCoordinatorSyncSupport
#   Enables/disables the coordinator synchronisation support.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmCoordinatorSyncSupport
#  Default: false
#
# NmNodeDetectionEnabled
#   Pre-processor switch for enabling the Node Detection feature.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmNodeDetectionEnabled
#  Default: true
#
# NmNodeIdEnabled
#   Pre-processor switch for enabling transmission of the source node
#   identifier in NM messages.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmNodeIdEnabled
#  Default: true
#
# NmPassiveModeEnabled
#   Pre-processor switch for enabling support of Passive Mode of the <BusNm>s.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmPassiveModeEnabled
#  Default: false
#
# NmPduRxIndicationEnabled
#   Pre-processor switch for enabling the PDU Rx Indication.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmPduRxIndicationEnabled
#  Default: true
#
# NmRemoteSleepIndEnabled
#   Pre-processor switch for enabling Remote Sleep Indication support.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmRemoteSleepIndEnabled
#  Default: true
#
# NmRepeatMsgIndEnabled
#   Pre-processor switch for enabling the Repeat Message Bit Indication.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmRepeatMsgIndEnabled
#  Default: false
#
# NmUserDataEnabled
#   Pre-processor switch for enabling User Data support.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmUserDataEnabled
#  Default: false
#
# NmStateChangeIndEnabled
#   Pre-processor switch for enabling the Network Management state change
#   notification.
#  Parameter: /Nm/NmGlobalConfig/NmGlobalFeatures/NmStateChangeIndEnabled
#  Default: true
#
# Specific Override: (none)
#

# Example:
# manprop_NmGlobalFeatures=\
# NmCarWakeUpRxEnabled:false,\
# NmComUserDataSupport:false,\
# NmCoordinatorSupportEnabled:false,\
# NmBusSynchronizationEnabled:false,\
# NmComControlEnabled:true,\
# NmCoordinatorSyncSupport:false,\
# NmNodeDetectionEnabled:true,\
# NmNodeIdEnabled:true,\
# NmPassiveModeEnabled:false,\
# NmPduRxIndicationEnabled:true,\
# NmRemoteSleepIndEnabled:true,\
# NmRepeatMsgIndEnabled:false,\
# NmUserDataEnabled:false,\
# NmStateChangeIndEnabled:true




# NmChannelConfig settings
#
# The following settings are copied to /Nm/NmChannelConfig by ConfGen.
#
# NmChannelSleepMaster
#   This parameter shall be set to indicate if the sleep of this network can
#   be absolutely decided by the local node only and that no other nodes can
#   oppose that decision.
#  Parameter: /Nm/NmChannelConfig/NmChannelSleepMaster
#  Default:  false
#
# NmStateReportEnabled
#   Specifies if the NMS shall be set for the corresponding network.
#  Parameter: /Nm/NmChannelConfig/NmStateReportEnabled
#  Default:  false
#
# NmSynchronizingNetwork
#   If this parameter is true, then this network is a synchronizing network
#   for the NM coordination cluster which it belongs to.
#  Parameter: /Nm/NmChannelConfig/NmSynchronizingNetwork
#  Default:  false
#
# NmShutdownDelayTimer
#   This parameter defines the time in seconds which the NM Coordination
#   algorithm shall delay the release of this channel with.
#  Parameter: /Nm/NmChannelConfig/NmShutdownDelayTimer
#  Default:  0.0
#
# Specific Override: NmChannelConfig.shortname
#

# Example:
# manprop_NmChannelConfig_ALL=\
# NmChannelSleepMaster: false,\
# NmStateReportEnabled: false,\
# NmSynchronizingNetwork: false,\
# NmShutdownDelayTimer: 0.0




# NmGlobalConstants settings
#
# The following settings are copied to /Nm/NmGlobalConfig/NmGlobalConstants by
# ConfGen.
#
# NmRemoteSleepCancelCallback
#   Upper layer callback that is called to indicate cancellation of Remote
#   Sleep situation after BusNm receives NM messages/Votes
#  Parameter: /Nm/NmGlobalConfig/NmGlobalConstants/NmRemoteSleepCancelCallback
#  Default: TestNm_RemoteSleepCancellation
#
# NmRemoteSleepIndCallback
#   Upper layer callback that is called to indicate Remote Sleep situation
#   detected by BusNm
#  Parameter: /Nm/NmGlobalConfig/NmGlobalConstants/NmRemoteSleepIndCallback
#  Default: TestNm_RemoteSleepIndication
#
# Specific Override: (none)
# ConfigureBSW: Always Created
#

# Example:
# manprop_NmGlobalConstants=\
# NmRemoteSleepCancelCallback:TestNm_RemoteSleepCancellation,\
# NmRemoteSleepIndCallback:TestNm_RemoteSleepIndication




# NvMBlockDescriptor settings
#
# The following settings are copied to /NvM/NvMBlockDescriptor by ConfGen.
#
# NvMBlockCrcType
#   Defines the CRC data width for the NVRAM block.
#  Parameter: /NvM/NvMBlockDescriptor/NvMBlockCrcType
#  Default: NVM_CRC16
#
# NvMBlockJobPriority
#   Defines the job priority for a NVRAM block.
#  Parameter: /NvM/NvMBlockDescriptor/NvMBlockJobPriority
#  Default: 1
#
# NvMBlockManagementType
#   Defines the block management type for the NVRAM block.
#  Parameter: /NvM/NvMBlockDescriptor/NvMBlockManagementType
#  Default: NVM_BLOCK_NATIVE
#
# NvMBlockUseCrc
#   Enables/disables CRC usage for the NVRAM block in NV memory.
#  Parameter: /NvM/NvMBlockDescriptor/NvMBlockUseCrc
#  Default: true
#
# NvMBlockUseSyncMechanism
#   Enables/disables the explicit synchronization mechanism with a RAM mirror
#   and callback routines for transferring data to and from NvM module's RAM
#   mirror.
#  Parameter: /NvM/NvMBlockDescriptor/NvMBlockUseSyncMechanism
#  Default: false
#
# NvMMaxNumOfReadRetries
#   Defines the maximum number of read retries.
#  Parameter: /NvM/NvMBlockDescriptor/NvMMaxNumOfReadRetries
#  Default: 0
#
# NvMMaxNumOfWriteRetries
#   Defines the maximum number of write retries.
#  Parameter: /NvM/NvMBlockDescriptor/NvMMaxNumOfWriteRetries
#  Default: 0
#
# NvMNvBlockNum
#   Defines the number of multiple NV blocks in a contiguous area according to
#   the given block management type.
#  Parameter: /NvM/NvMBlockDescriptor/NvMNvBlockNum
#  Default: 1
#
# NvMNvramDeviceId
#   Identification of the device where the NVRAM block is located.
#  Parameter: /NvM/NvMBlockDescriptor/NvMNvramDeviceId
#  Default: 0
#
# NvMRomBlockNum
#   Defines the number of multiple ROM blocks in a contiguous area according
#   to the given block management type.
#  Parameter: /NvM/NvMBlockDescriptor/NvMRomBlockNum
#  Default: 0
#
# NvMStaticBlockIDCheck
#   Enables/disables the static block ID check for this block.
#  Parameter: /NvM/NvMBlockDescriptor/NvMStaticBlockIDCheck
#  Default: false
#
# NvMWriteVerificationDataSize
#   Defines the number of bytes to compare in each step when comparing the
#   content of a RAM Block and a block read back during write verification.
#  Parameter: /NvM/NvMBlockDescriptor/NvMWriteVerificationDataSize
#  Default: 0
#
# NvMCalcRamBlockCrc
#   Enables/disables the CRC (re)calculation for the permanent RAM block or
#   NVRAM blocks which are configured to use explicit synchronization
#   mechanism.
#  Parameter: /NvM/NvMBlockDescriptor/NvMCalcRamBlockCrc
#  Default: false
#
# NvMInitBlockCallback
#   Name of the block-specific callback routine which shall be invoked if no
#   ROM data is available for initialization of the NVRAM block.
#  Parameter: /NvM/NvMBlockDescriptor/NvMInitBlockCallback
#  Default: NULL_PTR
#
# NvMRbBlockPersistentId
#   Defines a unique ID for this block representing its block-specific
#   properties.
#  Parameter: /NvM/NvMBlockDescriptor/NvMRbBlockPersistentId
#  Default: (none)
#
# NvMRbGenRteAdminPort
#   Defines whether an administrative port shall be generated for this block.
#  Parameter: /NvM/NvMBlockDescriptor/NvMRbGenRteAdminPort
#  Default: (none)
#
# NvMRbGenRteServicePort
#   Defines whether a service port shall be generated for this block.
#  Parameter: /NvM/NvMBlockDescriptor/NvMRbGenRteServicePort
#  Default: (none)
#
# NvMRbResistantToLayoutRemoval
#   Defines whether the NvM block is resistant to layout removal.
#  Parameter: /NvM/NvMBlockDescriptor/NvMRbResistantToLayoutRemoval
#  Default: (none)
#
# NvMReadRamBlockFromNvCallback
#   Name of the block-specific callback routine which shall be invoked in
#   order to let the application copy data from the NvM module's mirror to RAM
#   block (see also the NvMBlockUseSyncMechanism parameter).
#  Parameter: /NvM/NvMBlockDescriptor/NvMReadRamBlockFromNvCallback
#  Default: (none)
#
# NvMResistantToChangedSw
#   Defines whether a NVRAM block shall be treated as resistant to
#   configuration changes or not (see also the NvMCompiledConfigId and
#   NvMDynamicConfiguration parameters for a description of this mechanism).
#  Parameter: /NvM/NvMBlockDescriptor/NvMResistantToChangedSw
#  Default: (none)
#
# NvMRomBlockDataAddress
#   Defines the start address of ROM block data.
#  Parameter: /NvM/NvMBlockDescriptor/NvMRomBlockDataAddress
#  Default: (none)
#
# NvMSingleBlockCallback
#   Name of the block-specific callback routine which shall be invoked on
#   termination of each access to the actual memory media.
#  Parameter: /NvM/NvMBlockDescriptor/NvMSingleBlockCallback
#  Default: (none)
#
# NvMWriteRamBlockToNvCallback
#   Name of the block-specific callback routine which shall be invoked in
#   order to let the application copy data from RAM block to the NvM module's
#   mirror (see also the NvMBlockUseSyncMechanism parameter).
#  Parameter: /NvM/NvMBlockDescriptor/NvMWriteRamBlockToNvCallback
#  Default: (none)
#
# NvMBlockWriteProt
#   Enables/disables an initial write protection of the NV block.
#  Parameter: /NvM/NvMBlockDescriptor/NvMBlockWriteProt
#  Default: (none)
#
# NvMSelectBlockForWriteAll
#   Defines whether a NVRAM block shall be processed during NvM_WriteAll or
#   not.
#  Parameter: /NvM/NvMBlockDescriptor/NvMSelectBlockForWriteAll
#  Default: (none)
#
# NvMSelectBlockForReadAll
#   Defines whether a NVRAM block shall be processed during NvM_ReadAll or
#   not.
#  Parameter: /NvM/NvMBlockDescriptor/NvMSelectBlockForReadAll
#  Default: (none)
#
# NvMNvBlockLength
#   Defines the NV block data length in bytes.
#  Parameter: /NvM/NvMBlockDescriptor/NvMNvBlockLength
#  Default: (none)
#
# NvMWriteVerification
#   Enables/disables write verification.
#  Parameter: /NvM/NvMBlockDescriptor/NvMWriteVerification
#  Default: (none)
#
# Specific Override: NvMBlockDescriptor.shortname
#

# Example:
# manprop_NvMBlockDescriptor_ALL=\
# NvMBlockCrcType:NVM_CRC16,\
# NvMBlockJobPriority:1,\
# NvMBlockManagementType:NVM_BLOCK_NATIVE,\
# NvMBlockUseCrc:true,\
# NvMBlockUseSyncMechanism:false,\
# NvMMaxNumOfReadRetries:0,\
# NvMMaxNumOfWriteRetries:0,\
# NvMNvBlockNum:1,\
# NvMNvramDeviceId:0,\
# NvMRomBlockNum:0,\
# NvMStaticBlockIDCheck:false,\
# NvMWriteVerificationDataSize:0,\
# NvMCalcRamBlockCrc:false,\
# NvMInitBlockCallback:NULL_PTR




# NvMCommon settings
#
# The following settings are copied to /NvM/NvMCommon by ConfGen.
#
# When both the NvM and the Dem modules are configured, the Dem_NvMShutdown()
# function invokes the NvM_Rb_SetWriteAllTrigger() function from the NvM
# module. As a result the NvMRbSetWriteAllTriggerApi parameter should be set
# to True. This can be set as the default in algo.properties as follows:
#
# manprop_NvMCommon=\
# NvMRbSetWriteAllTriggerApi:true
#
# NvMApiConfigClass
#   Allows to configure the feature set supported by the NvM service.
#  Parameter: /NvM/NvMCommon/NvMApiConfigClass
#  Default: NVM_API_CONFIG_CLASS_3
#
# NvMBswMMultiBlockJobStatusInformation
#   Enables/disables the notification of BswM about the current status of the
#   multiblock job.
#  Parameter: /NvM/NvMCommon/NvMBswMMultiBlockJobStatusInformation
#  Default: true
#
# NvMCompiledConfigId
#   Configuration ID uniquely identifying the NV memory layout version.
#  Parameter: /NvM/NvMCommon/NvMCompiledConfigId
#  Default: 2
#
# NvMCrcNumOfBytes
#   If CRC (re-) calculation is configured for at least one permanent RAM
#   block, this parameter defines the maximum number of bytes which shall be
#   processed within one cycle of job processing.
#  Parameter: /NvM/NvMCommon/NvMCrcNumOfBytes
#  Default: 1
#
# NvMDrvModeSwitch
#   Enables/disables switching memory drivers to fast mode during performing
#   NvM_ReadAll and NvM_WriteAll.
#  Parameter: /NvM/NvMCommon/NvMDrvModeSwitch
#  Default: false
#
# NvMDynamicConfiguration
#   Enables/disables the dynamic configuration management feature.
#  Parameter: /NvM/NvMCommon/NvMDynamicConfiguration
#  Default: false
#
# NvMJobPrioritization
#   Enables/disables job prioritization handling.
#  Parameter: /NvM/NvMCommon/NvMJobPrioritization
#  Default: false
#
# NvMMultiBlockCallback
#   Name of the common callback routine which shall be invoked on termination
#   of each asynchronous multi block request (NvM_Rb_FirstInitAll,
#   NvM_ReadAll, removing of non-resistant to changed SW blocks or
#   NvM_WriteAll).
#  Parameter: /NvM/NvMCommon/NvMMultiBlockCallback
#  Default: NULL_PTR
#
# NvMPollingMode
#   Defines the way how NvM communicates to the memory media drivers.
#  Parameter: /NvM/NvMCommon/NvMPollingMode
#  Default: true
#
# NvMSetRamBlockStatusApi
#   Enables/disables the NvM_SetRamBlockStatus API.
#  Parameter: /NvM/NvMCommon/NvMSetRamBlockStatusApi
#  Default: true
#
# NvMSizeStandardJobQueue
#   Defines the number of queue entries for the standard job queue.
#  Parameter: /NvM/NvMCommon/NvMSizeStandardJobQueue
#  Default: 1
#
# NvMMainFunctionPeriod
#   Defines the period between successive calls to the NvM main function in
#   seconds.
#  Parameter: /NvM/NvMCommon/NvMMainFunctionPeriod
#  Default: 0.001
#
# NvMVersionInfoApi
#   Enables/disables the NvM_GetVersionInfo API.
#  Parameter: /NvM/NvMCommon/NvMVersionInfoApi
#  Default: false
#
# NvMRbSetWriteAllTriggerApi
#   Enables/disables NvM_Rb_SetWriteAllTrigger API.
#  Parameter: /NvM/NvMCommon/NvMRbSetWriteAllTriggerApi
#  Default: null
#
# Specific Override: (none)
# Dev Error Detection: /NvM/NvMCommon/NvMDevErrorDetect
#

# Example:
# manprop_NvMCommon=\
# NvMApiConfigClass:NVM_API_CONFIG_CLASS_3,\
# NvMBswMMultiBlockJobStatusInformation:true,\
# NvMCompiledConfigId:2,\
# NvMCrcNumOfBytes:1,\
# NvMDrvModeSwitch:false,\
# NvMDynamicConfiguration:false,\
# NvMJobPrioritization:false,\
# NvMMultiBlockCallback:NULL_PTR,\
# NvMPollingMode:true,\
# NvMSetRamBlockStatusApi:true,\
# NvMSizeStandardJobQueue:1,\
# NvMMainFunctionPeriod:0.001,\
# NvMVersionInfoApi:false,\
# NvMRbSetWriteAllTriggerApi:null




# UserFeeOrEaUsed settings
#
# If an NVRAM device is to be used, the type of NVRAM device must be
# configured in the algo.properties file, e.g.
#
# manprop_UserFeeOrEaUsed = Ea
# manprop_UserFeeOrEaUsed = Fee
# manprop_UserFeeOrEaUsed = Both
#
# If the device type is configured as Both, all NvMBlockDescriptors must be
# configured with NvMNvramDeviceId as 0 (Fee). You must configure which
# NvMBlockDescriptor will work with Fee or Ea through the Confgen Enhancer
# Mapping file for the NvM module.
#
# Default: (none)
#

# Example:
# manprop_UserFeeOrEaUsed=null




# PduRBswModules settings
#
# The following settings are copied to /PduR/PduRBswModules by ConfGen, if the
# module name is one of the ones with a specific override. Settings are not
# copied for other modules.
#
# PduRCancelReceive
#   Specifies if the Transport protocol module supports the CancelReceive API
#   or not.
#  Parameter: /PduR/PduRBswModules/PduRCancelReceive
#  Default: false
#
# PduRCancelTransmit
#   Specifies if the BSW module supports the CancelTransmit API or not.
#  Parameter: /PduR/PduRBswModules/PduRCancelTransmit
#  Default: false
#
# PduRChangeParameterApi
#   This parameter, if set to true, enables the PduR_<Up>ChangeParameter Api
#   for this Module.
#  Parameter: /PduR/PduRBswModules/PduRChangeParameterApi
#  Default: false
#
# PduRCommunicationInterface
#   Specifies if the BSW module supports the Communication Interface APIs or
#   not.
#  Parameter: /PduR/PduRBswModules/PduRCommunicationInterface
#  Default: false
#
# PduRLowerModule
#   The PduRLowerModule will decide who will call the APIs and who will
#   implement the APIs.
#  Parameter: /PduR/PduRBswModules/PduRLowerModule
#  Default: false
#
# PduRRetransmission
#   If set to true this means that the destination transport protocol module
#   will use the retransmission feature.
#  Parameter: /PduR/PduRBswModules/PduRRetransmission
#  Default: false
#
# PduRTransportProtocol
#   The PDU Router module shall use the API parameters specified for transport
#   protocol interface.
#  Parameter: /PduR/PduRBswModules/PduRTransportProtocol
#  Default: false
#
# PduRTriggertransmit
#   Specifies if the BSW module supports the TriggerTransmit API or not.
#  Parameter: /PduR/PduRBswModules/PduRTriggertransmit
#  Default: false
#
# PduRTxConfirmation
#   Specifies if the BSW module supports the TxConfirmation API or not.
#  Parameter: /PduR/PduRBswModules/PduRTxConfirmation
#  Default: false
#
# PduRUpperModule
#   The PduRUpperModule will decide who will call the APIs and who will
#   implement the APIs.
#  Parameter: /PduR/PduRBswModules/PduRUpperModule
#  Default: false
#
# PduRUseTag
#   This parameter, if set to true, enables the usage of the tag (<up>) in the
#   following API calls:
#  Parameter: /PduR/PduRBswModules/PduRUseTag
#  Default: false
#
# Specific Override: "PduRBswModules_" + PduRBswModules.shortname
# ConfigureBSW: Implemented
#

# Example:
# manprop_PduRBswModules_DEFAULT=\
# PduRCancelReceive:false,\
# PduRCancelTransmit:false,\
# PduRChangeParameterApi:false,\
# PduRCommunicationInterface:false,\
# PduRLowerModule:false,\
# PduRRetransmission:false,\
# PduRTransportProtocol:false,\
# PduRTriggertransmit:false,\
# PduRTxConfirmation:false,\
# PduRUpperModule:false,\
# PduRUseTag:false




# PduRInvalidHandlers settings
#
# For modules named "CanTp" and "FrTp" only, the following settings are copied
# to /PduR/PduRBswModules/PduRInvalidHandlers by ConfGen.
#
# PduRIHCancelReceive
#   Specifies for a PduRBswModule, if call to Invalid Handler needs to be
#   generated instead of actual CancelReceive API.
#  Parameter: /PduR/PduRBswModules/PduRInvalidHandlers/PduRIHCancelReceive
#  Default: false
#
# PduRIHCancelTransmit
#   Specifies for a PduRBswModule, if call to Invalid Handler needs to be
#   generated instead of actual CancelTransmit API.
#  Parameter: /PduR/PduRBswModules/PduRInvalidHandlers/PduRIHCancelTransmit
#  Default: false
#
# Specific Override: "PduRInvalidHandlers_" + PduRBswModules.shortname
# ConfigureBSW: Implemented
#

# Example:
# manprop_PduRInvalidHandlers_ALL=\
# PduRIHCancelReceive:false,\
# PduRIHCancelTransmit:false




# PduRGeneral settings
#
# The following settings are copied to /PduR/PduRGeneral by ConfGen.
#
# PduRVersionInfoApi
#   If true the PduR_GetVersionInfo API is available.
#  Parameter: /PduR/PduRGeneral/PduRVersionInfoApi
#  Default: false
#
# PduRZeroCostOperation
#   If set the PduR configuration generator will report an error if
#   zero-cost-operation cannot be fulfilled.
#  Parameter: /PduR/PduRGeneral/PduRZeroCostOperation
#  Default: false
#
# PduRIFGatewayOperation
#   Configuration parameter to enable or disable PDU Router IF Gateway from an
#   interface module to lower layer interface modules; if
#   PDUR_ZERO_COST_OPERATION is enabled, this parameter has to be
#   disabled.This parameter shall be seen as an input requirement to the
#   configuration generator.
#  Parameter: /PduR/PduRGeneral/PduRIFGatewayOperation
#  Default: false
#
# PduRTPGatewayOperation
#   Configuration parameter to enable or disable PDU Router TP gateway from a
#   TP module to lower layer TP modules; if PDUR_ZERO_COST_OPERATION is
#   enabled, this parameter has to be disabled.This parameter shall be seen as
#   an input requirement to the configuration generator.
#  Parameter: /PduR/PduRGeneral/PduRTPGatewayOperation
#  Default: false
#
# PduRMulticastFromTpSupport
#   Configuration parameter to enable or disable PDU Router support for
#   multicasts from a TP module to upper layer modules and lower layer TP
#   modules; if PDUR_ZERO_COST_OPERATION is enabled, this parameter has to be
#   disabled.This parameter shall be seen as an input requirement to the
#   configuration generator.
#  Parameter: /PduR/PduRGeneral/PduRMulticastFromTpSupport
#  Default: false
#
# PduRMulticastToIfSupport
#   Configuration parameter to enable or disable PDU Router support for
#   multicasts from an upper layer module to interface modules; if
#   PDUR_ZERO_COST_OPERATION is enabled, this parameter has to be
#   disabled.This parameter shall be seen as an input requirement to the
#   configuration generator.
#  Parameter: /PduR/PduRGeneral/PduRMulticastToIfSupport
#  Default: false
#
# PduRMulticastToTpSupport
#   Configuration parameter to enable or disable PDU Router support for
#   multicasts from an upper layer module to TP modules; if
#   PDUR_ZERO_COST_OPERATION is enabled, this parameter has to be
#   disabled.This parameter shall be seen as an input requirement to the
#   configuration generator.
#  Parameter: /PduR/PduRGeneral/PduRMulticastToTpSupport
#  Default: false
#
# PduRQueueingSupport
#   Configuration parameter to enable or disable PDU Router Queueing Feature.
#  Parameter: /PduR/PduRGeneral/PduRQueueingSupport
#  Default: false
#
# PduRGwTpWithLimitedBuffer
#   Configuration parameter to enable or disable PDU Router support for
#   gateway Tp using limited buffer resources; Note : When this parameter is
#   set true need to configure PduRTpThreshold.
#  Parameter: /PduR/PduRGeneral/PduRGwTpWithLimitedBuffer
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /PduR/PduRGeneral/PduRDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_PduRGeneral=\
# PduRVersionInfoApi:false,\
# PduRZeroCostOperation:false,\
# PduRIFGatewayOperation:false,\
# PduRTPGatewayOperation:false,\
# PduRMulticastFromTpSupport:false,\
# PduRMulticastToIfSupport:false,\
# PduRMulticastToTpSupport:false,\
# PduRQueueingSupport:false,\
# PduRGwTpWithLimitedBuffer:false




# PduRRoutingTables settings
#
# The following settings are copied to /PduR/PduRRoutingTables by ConfGen.
#
# PduRConfigurationId
#   Identification of the configuration of the PduR configuration.
#  Parameter: /PduR/PduRRoutingTables/PduRConfigurationId
#  Default: 0
#
# Specific Override: (none)
#

# Example:
# manprop_PduRRoutingTables=\
# PduRConfigurationId:0




# rba_MemLibCentral settings
#
# The following settings are copied to /rba_MemLib/rba_MemLibCentral by
# ConfGen.
#
# rba_MemLibCentralEnablePrototype
#   Enable or disable prototypes in the Memstack.
#  Parameter: /rba_MemLib/rba_MemLibCentral/rba_MemLibCentralEnablePrototype
#  Default: false
#
# rba_MemLibVersionInfoApi
#   Enable or disable version information
#  Parameter: /rba_MemLib/rba_MemLibCentral/rba_MemLibVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# ConfigureBSW: Always Created
#

# Example:
# manprop_rba_MemLibCentral=\
# rba_MemLibCentralEnablePrototype:false,\
# rba_MemLibVersionInfoApi:false




# SdGeneral settings
#
# The following settings are copied to /Sd/SdGeneral by ConfGen.
#
# SdMainFunctionCycleTime
#   This parameter defines the cycle time in seconds of the periodic calling
#   of Sd main function.
#  Parameter: /Sd/SdGeneral/SdMainFunctionCycleTime
#  Default: 0.001
#
# SdSubscribeEventgroupRetryEnable
#   RB (Vendor06) specific parameter: Switch to enable or disable the retry
#   functionality to subscribe to Eventgroups of ServerServices with TTL set
#   to 0xFFFFFF.
#  Parameter: /Sd/SdGeneral/SdSubscribeEventgroupRetryEnable
#  Default: false
#
# SdVersionInfoApi
#   Enables and disables the version info API.
#  Parameter: /Sd/SdGeneral/SdVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /Sd/SdGeneral/SdDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_SdGeneral=\
# SdMainFunctionCycleTime:0.001,\
# SdSubscribeEventgroupRetryEnable:false,\
# SdVersionInfoApi:false




# SoAdBswModules settings
#
# The following settings are copied to /SoAd/SoAdBswModules by ConfGen.
#
# SoAdIf
#   Specifies if the BSW module supports the Communication Interface APIs or
#   not.
#  Parameter: /SoAd/SoAdBswModules/SoAdIf
#  Default: (none)
#
# SoAdIfTriggerTransmit
#   Specifies if the BSW module supports the TriggerTransmit API or not.
#  Parameter: /SoAd/SoAdBswModules/SoAdIfTriggerTransmit
#  Default: (none)
#
# SoAdIfTxConfirmation
#   Specifies if the BSW module supports the TxConfirmation API or not.
#  Parameter: /SoAd/SoAdBswModules/SoAdIfTxConfirmation
#  Default: (none)
#
# SoAdTp
#   Specifies if the BSW module supports the TransportProtocol APIs or not.
#  Parameter: /SoAd/SoAdBswModules/SoAdTp
#  Default: (none)
#
# SoAdUseCallerInfix
#   Specifies if SoAd shall use (TRUE) the infix "SoAd" when calling an upper
#   layer module function or not (FALSE).
#  Parameter: /SoAd/SoAdBswModules/SoAdUseCallerInfix
#  Default: (none)
#
# SoAdUseTypeInfix
#   Specifies if SoAd shall use (TRUE) the API type infix "Tp" or "If" when
#   calling an upper layer module function or not (FALSE).
#  Parameter: /SoAd/SoAdBswModules/SoAdUseTypeInfix
#  Default: (none)
#
# Specific Override: "SoAdBswModules_" + SoAdBswModules.shortname
#

# Example:
# manprop_SoAdBswModules_ALL=null




# SoAdPduRoute settings
#
# The following settings are copied to /SoAd/SoAdConfig/SoAdPduRoute by
# ConfGen.
#
# SoAdTxPduMetaDataEnabled
#   RB (Vendor06) specific parameter: This parameter specifies if MetaData
#   Information is present for Tx Pdu.
#  Parameter: /SoAd/SoAdConfig/SoAdPduRoute/SoAdTxPduMetaDataEnabled
#  Default: false
#
# Specific Override: SoAdPduRoute.shortname
#

# Example:
# manprop_SoAdPduRoute=\
# SoAdTxPduMetaDataEnabled:false




# SoAdRoutingGroup settings
#
# The following settings are copied to /SoAd/SoAdConfig/SoAdRoutingGroup by
# ConfGen.
#
# SoAdRoutingGroupIsEnabledAtInit
#   If set to true this routing group will be enabled after initializing the
#   SoAd module (i.e. enabled in the SoAd_Init function).
#  Parameter: /SoAd/SoAdConfig/SoAdRoutingGroup
#               /SoAdRoutingGroupIsEnabledAtInit
#  Default: true
#
# SoAdRoutingGroupTxTriggerable
#   Specifies if the If-TxPDUs related to the PduRouteDest containers
#  Parameter: /SoAd/SoAdConfig/SoAdRoutingGroup/SoAdRoutingGroupTxTriggerable
#  Default: false
#
# Specific Override: SoAdRoutingGroup.shortname
#

# Example:
# manprop_SoAdRoutingGroup=\
# SoAdRoutingGroupIsEnabledAtInit:true,\
# SoAdRoutingGroupTxTriggerable:false




# SoAdSocketConnectionGroup settings
#
# The following settings are copied to
# /SoAd/SoAdConfig/SoAdSocketConnectionGroup by ConfGen.
#
# SoAdResourceManagementEnable
#   Enables the resource management option for this socket.
#  Parameter: /SoAd/SoAdConfig/SoAdSocketConnectionGroup
#               /SoAdResourceManagementEnable
#  Default: false
#
# SoAdSocketAutomaticSoConSetup
#   Specifies if the setup of the socket connection shall be done
#   automatically (TRUE) or manually (FALSE) via SoAd_OpenSoCon() and
#   SoAd_CloseSoCon().
#  Parameter: /SoAd/SoAdConfig/SoAdSocketConnectionGroup
#               /SoAdSocketAutomaticSoConSetup
#  Default: true
#
# SoAdSocketIpAddrAssignmentChgNotification
#   Specifies if the local IP address assignment change notification callback
#   function of the upper layer shall be called if the assignment of the local
#   IP address used by this socket connection changes.
#  Parameter: /SoAd/SoAdConfig/SoAdSocketConnectionGroup
#               /SoAdSocketIpAddrAssignmentChgNotification
#  Default: false
#
# SoAdSocketSoConModeChgNotification
#   Specifies if the SoCon mode change notification callback function of the
#   upper layer shall be called in case of SoCon mode change.
#  Parameter: /SoAd/SoAdConfig/SoAdSocketConnectionGroup
#               /SoAdSocketSoConModeChgNotification
#  Default: false
#
# SoAdSocketMsgAcceptanceFilterEnabled
#   Specifies if the message acceptance filter is enabled (TRUE) or not
#   (FALSE).
#  Parameter: /SoAd/SoAdConfig/SoAdSocketConnectionGroup
#               /SoAdSocketMsgAcceptanceFilterEnabled
#  Default: false
#
# Specific Override: SoAdSocketConnectionGroup.shortname
#

# Example:
# manprop_SoAdSocketConnectionGroup=\
# SoAdResourceManagementEnable:false,\
# SoAdSocketAutomaticSoConSetup:true,\
# SoAdSocketIpAddrAssignmentChgNotification:false,\
# SoAdSocketSoConModeChgNotification:false,\
# SoAdSocketMsgAcceptanceFilterEnabled:false




# SoAdSocketTcp settings
#
# The following settings are copied to /SoAd/SoAdConfig
# /SoAdSocketConnectionGroup/SoAdSocketProtocol/SoAdSocketTcp by ConfGen.
#
# SoAdSocketTcpImmediateTpTxConfirmation
#   If set to FALSE, SoAd notifies the TP upper layer via transmit
#   confirmation after a Tcp Ack has been received.
#  Parameter: /SoAd/SoAdConfig/SoAdSocketConnectionGroup/SoAdSocketProtocol
#               /SoAdSocketTcp/SoAdSocketTcpImmediateTpTxConfirmation
#  Default: false
#
# Specific Override: SoAdSocketTcp.shortname
#

# Example:
# manprop_SoAdSocketTcp=\
# SoAdSocketTcpImmediateTpTxConfirmation:false




# SoAdGeneral settings
#
# The following settings are copied to /SoAd/SoAdGeneral by ConfGen.
#
# SoAdChangeParameterEnabled
#   RB (Vendor06) specific parameter: Allows Upper Layer to change the
#   Parameter
#  Parameter: /SoAd/SoAdGeneral/SoAdChangeParameterEnabled
#  Default: false
#
# SoAdDHCPFQDNEnabled
#   RB (Vendor06) specific parameter: Allows the Upper Layer to read/write the
#   DHCP FQDN options
#  Parameter: /SoAd/SoAdGeneral/SoAdDHCPFQDNEnabled
#  Default: false
#
# SoAdGetAndResetMeasurementDataApi
#   RB (Vendor06) specific parameter: Activates the
#   SoAd_GetAndResetMeasurementData() API.
#  Parameter: /SoAd/SoAdGeneral/SoAdGetAndResetMeasurementDataApi
#  Default: false
#
# SoAdIPAddrAssignmentEnabled
#   RB (Vendor06) specific parameter: Allows Upper Layer to release/request
#   the IP address assignment
#  Parameter: /SoAd/SoAdGeneral/SoAdIPAddrAssignmentEnabled
#  Default: true
#
# SoAdIPv6AddressEnabled
#   Allows for increased memory allocation to store IPv6 addresses.
#  Parameter: /SoAd/SoAdGeneral/SoAdIPv6AddressEnabled
#  Default: false
#
# SoAdMainFunctionPeriod
#   Determines the frequency at which the SoAd_MainFunction() is called in
#   [s].
#  Parameter: /SoAd/SoAdGeneral/SoAdMainFunctionPeriod
#  Default: 0.001
#
# SoAdRoutingGroupMax
#   Specifies the maximum number of SoAd routing groups.
#  Parameter: /SoAd/SoAdGeneral/SoAdRoutingGroupMax
#  Default: 200
#
# SoAdSoConMax
#   Specifies the maximum number of SoAd socket connections.
#  Parameter: /SoAd/SoAdGeneral/SoAdSoConMax
#  Default: 200
#
# SoAdTpCancelComEnabled
#   RB (Vendor06) specific parameter: Allows the Upper Layer to request the
#   cancelation of the active ongoing TP transmission/reception
#  Parameter: /SoAd/SoAdGeneral/SoAdTpCancelComEnabled
#  Default: false
#
# SoAdVersionInfoApi
#   Activates the SoAd_GetVersionInfo() API.
#  Parameter: /SoAd/SoAdGeneral/SoAdVersionInfoApi
#  Default: true
#
# Specific Override: SoAdGeneral.shortname
# Dev Error Detection: /SoAd/SoAdGeneral/SoAdDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_SoAdGeneral=\
# SoAdChangeParameterEnabled:false,\
# SoAdDHCPFQDNEnabled:false,\
# SoAdGetAndResetMeasurementDataApi:false,\
# SoAdIPAddrAssignmentEnabled:true,\
# SoAdIPv6AddressEnabled:false,\
# SoAdMainFunctionPeriod:0.001,\
# SoAdRoutingGroupMax:200,\
# SoAdSoConMax:200,\
# SoAdTpCancelComEnabled:false,\
# SoAdVersionInfoApi:true




# StbMGeneral settings
#
# The following settings are copied to /StbM/StbMGeneral by ConfGen.
#
# StbMMainFunctionPeriod
#   Schedule period of the main function StbM_MainFunction.
#  Parameter: /StbM/StbMGeneral/StbMMainFunctionPeriod
#  Default: 0.01
#
# StbMTimeRecordingSupport
#   Enables/Disables the usage of the recording functionality for Synchronized
#   and Offset timebases for Global Time precision measurement purpose.
#  Parameter: /StbM/StbMGeneral/StbMTimeRecordingSupport
#  Default: false
#
# StbMVersionInfoApi
#   Activate/Deactivate the version information API (StbM_GetVersionInfo).
#  Parameter: /StbM/StbMGeneral/StbMVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /StbM/StbMGeneral/StbMDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_StbMGeneral=\
# StbMMainFunctionPeriod:0.01,\
# StbMTimeRecordingSupport:false,\
# StbMVersionInfoApi:false




# StbMSynchronizedTimeBase settings
#
# The following settings are copied to /StbM/StbMSynchronizedTimeBase by
# ConfGen.
#
# StbMSynchronizedTimeBaseIdentifier
#   Identification of a Synchronized TimeBase via a unique identifier.
#  Parameter: /StbM/StbMSynchronizedTimeBase
#               /StbMSynchronizedTimeBaseIdentifier
#  Default: 0
#
# Specific Override: (none)
#

# Example:
# manprop_StbMSynchronizedTimeBase=\
# StbMSynchronizedTimeBaseIdentifier:0




# TcpIpCtrl settings
#
# The following settings are copied to /TcpIp/TcpIpConfig/TcpIpCtrl by
# ConfGen.
#
# TcpIpIpTtlConfigurationEnabled
#   RB (Vendor06) Enables (TRUE) or disables (FALSE) usage of configured TTL
#   value per EthIfCtrl (VLAN).
#  Parameter: /TcpIp/TcpIpConfig/TcpIpCtrl/TcpIpIpTtlConfigurationEnabled
#  Default: false
#
# Specific Override: TcpIpCtrl.shortname
#

# Example:
# manprop_TcpIpCtrl=\
# TcpIpIpTtlConfigurationEnabled:false




# TcpIpIpV4Ctrl settings
#
# The following settings are copied to
# /TcpIp/TcpIpConfig/TcpIpCtrl/TcpIpIpVXCtrl/TcpIpIpV4Ctrl by ConfGen.
#
# TcpIpArpTblAgeingDisabled
#   RB (Vendor06) specific parameter: Disables (TRUE) or enables (FALSE)
#   ageing of ARP Table Entries per TcpIpCtrl.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpCtrl/TcpIpIpVXCtrl/TcpIpIpV4Ctrl
#               /TcpIpArpTblAgeingDisabled
#  Default: false
#
# TcpIpIcmpEchoBroadcastEnabled
#   RB (Vendor06) specific parameter: Enables (TRUE) or disables (FALSE) reply
#   to ICMP Broadcast echo requests per TcpIpCtrl.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpCtrl/TcpIpIpVXCtrl/TcpIpIpV4Ctrl
#               /TcpIpIcmpEchoBroadcastEnabled
#  Default: false
#
# Specific Override: TcpIpIpV4Ctrl.shortname
#

# Example:
# manprop_TcpIpIpV4Ctrl=\
# TcpIpArpTblAgeingDisabled:false,\
# TcpIpIcmpEchoBroadcastEnabled:false




# TcpIpIpV4General settings
#
# The following settings are copied to /TcpIp/TcpIpGeneral/TcpIpIpV4General by
# ConfGen.
#
# TcpIpIcmpEnabled
#   Enables (TRUE) or disabled (FALSE) support of ICMP (Internet Control
#   Message Protocol).
#  Parameter: /TcpIp/TcpIpGeneral/TcpIpIpV4General/TcpIpIcmpEnabled
#  Default: false
#
# Specific Override: TcpIpIpV4General.shortname
#

# Example:
# manprop_TcpIpIpV4General=\
# TcpIpIcmpEnabled:false




# TcpIpArpConfig settings
#
# The following settings are copied to
# /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config/TcpIpArpConfig by ConfGen.
#
# TcpIpArpNumGratuitousARPonStartup
#   Specifies the number of gratuitous ARP replies which shall be sent on
#   assignment of a new IP address.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config/TcpIpArpConfig
#               /TcpIpArpNumGratuitousARPonStartup
#  Default: 0
#
# TcpIpArpTableEntryTimeout
#   Timeout in seconds after which an unused ARP entry is removed.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config/TcpIpArpConfig
#               /TcpIpArpTableEntryTimeout
#  Default: 21600
#
# TcpIpArpTableSizeMax
#   Maximum number of entries in the ARP table.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config/TcpIpArpConfig
#               /TcpIpArpTableSizeMax
#  Default: 256
#
# TcpIpArpTblPendingEntryTimeout
#   RB (Vendor06) specific parameter: The Timeout in seconds after which ARP
#   resends an ARP Request if ARP Reply was not received.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config/TcpIpArpConfig
#               /TcpIpArpTblPendingEntryTimeout
#  Default: 5
#
# TcpIpArpMaxRequests
#   RB (Vendor06) specific parameter: Maximum number of ARP requests that can
#   be sent for a particular destination IP address.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config/TcpIpArpConfig
#               /TcpIpArpMaxRequests
#  Default: 30
#
# Specific Override: TcpIpArpConfig.shortname
#

# Example:
# manprop_TcpIpArpConfig=\
# TcpIpArpNumGratuitousARPonStartup:0,\
# TcpIpArpTableEntryTimeout:21600,\
# TcpIpArpTableSizeMax:256,\
# TcpIpArpTblPendingEntryTimeout:5,\
# TcpIpArpMaxRequests:30




# TcpIpAutoIpConfig settings
#
# The following settings are copied to
# /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config/TcpIpAutoIpConfig by
# ConfGen.
#
# TcpIpAutoIpInitTimeout
#   The time in seconds Auto-IP waits at startup, before beginning with ARP
#   probing.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config
#               /TcpIpAutoIpConfig/TcpIpAutoIpInitTimeout
#  Default: 300
#
# Specific Override: TcpIpAutoIpConfig.shortname
#

# Example:
# manprop_TcpIpAutoIpConfig=\
# TcpIpAutoIpInitTimeout:300




# TcpIpIcmpConfig settings
#
# The following settings are copied to
# /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config/TcpIpIcmpConfig by ConfGen.
#
# TcpIpIcmpTtl
#   Default Time-to-live value of outgoing ICMP packets.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config/TcpIpIcmpConfig
#               /TcpIpIcmpTtl
#  Default: 64
#
# Specific Override: TcpIpIcmpConfig.shortname
#

# Example:
# manprop_TcpIpIcmpConfig=\
# TcpIpIcmpTtl:64




# TcpIpCtrlDemEventParameterRefs settings
#
# The following settings are copied to
# TcpIp/TcpIpConfig/TcpIpCtrl/TcpIpCtrlDemEventParameterRefs by ConfGen.
#
# TcpIp_DynCreate_TcpIpEvent
#   RB (Vendor06) Selects the way how the TcpIp DemEvents are created.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpCtrl/TcpIpCtrlDemEventParameterRefs
#               /TcpIp_DynCreate_TcpIpEvent
#  Default: Disabled
#
# Specific Override: TcpIpCtrlDemEventParameterRefs.shortname
#

# Example:
# manprop_TcpIpCtrlDemEventParameterRefs=\
# TcpIp_DynCreate_TcpIpEvent:Disabled




# TcpIpIpFragmentationConfig settings
#
# The following settings are copied to
# /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config/TcpIpIpFragmentationConfig
# by ConfGen.
#
# TcpIpIpFragmentationRxEnabled
#   Enables (TRUE) or disables (FALSE) support for reassembling of incoming
#   datagrams that are fragmented according to IETF RFC 815 (IP Datagram
#   Reassembly Algorithms).
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config
#               /TcpIpIpFragmentationConfig/TcpIpIpFragmentationRxEnabled
#  Default: 60
#
# TcpIpIpReassemblyBufferCount
#   RB (Vendor06) specific parameter: Number of buffers that can be used for
#   fragment reassembly.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config
#               /TcpIpIpFragmentationConfig/TcpIpIpReassemblyBufferCount
#  Default: 1
#
# TcpIpIpReassemblyBufferSize
#   RB (Vendor06) specific parameter: The parameter specifies size of the
#   buffer in bytes required to reassemble all the fragments of an original
#   frame.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV4Config
#               /TcpIpIpFragmentationConfig/TcpIpIpReassemblyBufferSize
#  Default: 576
#
# Specific Override: TcpIpIpFragmentationConfig.shortname
#

# Example:
# manprop_TcpIpIpFragmentationConfig=\
# TcpIpIpFragmentationRxEnabled:60,\
# TcpIpIpReassemblyBufferCount:1,\
# TcpIpIpReassemblyBufferSize:576




# TcpIpAddrAssignment settings
#
# The following settings are copied to
# /TcpIp/TcpIpConfig/TcpIpLocalAddr/TcpIpAddrAssignment by ConfGen.
#
# TcpIpAssignmentPriority
#   Priority of assignment.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpLocalAddr/TcpIpAddrAssignment
#               /TcpIpAssignmentPriority
#  Default: 1
#
# TcpIpAssignmentTrigger
#   Trigger of address assignment.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpLocalAddr/TcpIpAddrAssignment
#               /TcpIpAssignmentTrigger
#  Default: TCPIP_AUTOMATIC
#
# Specific Override: TcpIpAddrAssignment.shortname
#

# Example:
# manprop_TcpIpAddrAssignment=\
# TcpIpAssignmentPriority:1,\
# TcpIpAssignmentTrigger:TCPIP_AUTOMATIC




# TcpIpSocketOwner settings
#
# The following settings are copied to
# /TcpIp/TcpIpConfig/TcpIpSocketOwnerConfig/TcpIpSocketOwner by ConfGen.
#
# TcpIpSocketOwnerUpperLayerType
#   This parameter specifies the type of the upper layer module.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpSocketOwnerConfig/TcpIpSocketOwner
#               /TcpIpSocketOwnerUpperLayerType
#  Default: SOAD
#
# Specific Override: TcpIpSocketOwner.shortname
#

# Example:
# manprop_TcpIpSocketOwner=\
# TcpIpSocketOwnerUpperLayerType:SOAD




# TcpIpTcpConfig settings
#
# The following settings are copied to /TcpIp/TcpIpConfig/TcpIpTcpConfig by
# ConfGen.
#
# TcpIpTcpCongestionAvoidanceEnabled
#   Enables (TRUE) or disables (FALSE) support of TCP congestion avoidance
#   algorithm according to IETF RFC 5681.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig
#               /TcpIpTcpCongestionAvoidanceEnabled
#  Default: false
#
# TcpIpTcpFastRecoveryEnabled
#   Enables (TRUE) or disables (FALSE) support of TCP Fast Recovery according
#   to IETF RFC 5681.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpFastRecoveryEnabled
#  Default: false
#
# TcpIpTcpFastRetransmitEnabled
#   Enables (TRUE) or disables (FALSE) support of TCP Fast Retransmission
#   according to IETF RFC 5681.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpFastRetransmitEnabled
#  Default: false
#
# TcpIpTcpFinWait2Timeout
#   Timeout in [s] to receive a FIN from the remote node (after this node has
#   initiated connection termination), i.e. maximum time waiting in FINWAIT-2
#   for a connection termination request from the remote TCP.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpFinWait2Timeout
#  Default: 240
#
# TcpIpTcpKeepAliveEnabled
#   Enables (TRUE) or disables (FALSE) TCP Keep Alive Probes according to IETF
#   RFC 1122 chapter 4.2.3.6
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpKeepAliveEnabled
#  Default: false
#
# TcpIpTcpKeepAliveInterval
#   Specifies the interval in [s] between subsequent keepalive probes.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpKeepAliveInterval
#  Default: 75
#
# TcpIpTcpKeepAliveProbesMax
#   Maximum number of times that a TCP Keep Alive is retransmitted before the
#   connection is closed.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpKeepAliveProbesMax
#  Default: 9
#
# TcpIpTcpKeepAliveTime
#   Specifies the time in [s] between the last data packet sent (simple ACKs
#   are not considered data) and the first keepalive probe.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpKeepAliveTime
#  Default: 7200.0
#
# TcpIpTcpMsl
#   Maximum segment lifetime in [s].
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpMsl
#  Default: 120
#
# TcpIpTcpNagleEnabled
#   Enables (TRUE) or disables (FALSE) support of Nagle's algorithm according
#   to IETF RFC 896.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpNagleEnabled
#  Default: false
#
# TcpIpTcpReceiveWindowMax
#   Default value of maximum receive window in bytes.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpReceiveWindowMax
#  Default: 32768
#
# TcpIpTcpSlowStartEnabled
#   Enables (TRUE) or disables (FALSE) support of TCP slow start algorithm
#   according to IETF RFC 5681.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpSlowStartEnabled
#  Default: false
#
# TcpIpTcpSynMaxRtx
#   Maximum number of times that a TCP SYN is retransmitted.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpSynMaxRtx
#  Default: 6
#
# TcpIpTcpSynReceivedTimeout
#   Timeout in [s] to complete a remotely initiated TCP connection
#   establishment, i.e. maximum time waiting in SYN-RECEIVED for a confirming
#   connection request acknowledgment after having both received and sent a
#   connection request.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpSynReceivedTimeout
#  Default: 1
#
# TcpIpTcpTtl
#   Default Time-to-live value of outgoing TCP packets.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpTcpConfig/TcpIpTcpTtl
#  Default: 64
#
# Specific Override: TcpIpTcpConfig.shortname
#

# Example:
# manprop_TcpIpTcpConfig=\
# TcpIpTcpCongestionAvoidanceEnabled:false,\
# TcpIpTcpFastRecoveryEnabled:false,\
# TcpIpTcpFastRetransmitEnabled:false,\
# TcpIpTcpFinWait2Timeout:240,\
# TcpIpTcpKeepAliveEnabled:false,\
# TcpIpTcpKeepAliveInterval:75,\
# TcpIpTcpKeepAliveProbesMax:9,\
# TcpIpTcpKeepAliveTime:7200.0,\
# TcpIpTcpMsl:120,\
# TcpIpTcpNagleEnabled:false,\
# TcpIpTcpReceiveWindowMax:32768,\
# TcpIpTcpSlowStartEnabled:false,\
# TcpIpTcpSynMaxRtx:6,\
# TcpIpTcpSynReceivedTimeout:1,\
# TcpIpTcpTtl:64




# TcpIpUdpConfig settings
#
# The following settings are copied to /TcpIp/TcpIpConfig/TcpIpUdpConfig by
# ConfGen.
#
# TcpIpUdpTtl
#   Default Time-to-live value of outgoing UDP packets.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpUdpConfig/TcpIpUdpTtl
#  Default: 64
#
# Specific Override: TcpIpUdpConfig.shortname
#

# Example:
# manprop_TcpIpUdpConfig=\
# TcpIpUdpTtl:64




# TcpIpGeneral settings
#
# The following settings are copied to /TcpIp/TcpIpGeneral by ConfGen.
#
# TcpIpGetAndResetMeasurementDataApi
#   Enables / Disables the Get and Reset Measurement Data API
#  Parameter: /TcpIp/TcpIpGeneral/TcpIpGetAndResetMeasurementDataApi
#  Default: false
#
# TcpIpMainFunctionPeriod
#   Period of TcpIp_MainFunction in [s].
#  Parameter: /TcpIp/TcpIpGeneral/TcpIpMainFunctionPeriod
#  Default: 0.001
#
# TcpIpScalabilityClass
#   In order to customize the TcpIp Stack to the specific needs of the user it
#   can be scaled according to the scalability classes.
#  Parameter: /TcpIp/TcpIpGeneral/TcpIpScalabilityClass
#  Default: SC1
#
# TcpIpTcpSocketMax
#   Maximum number of TCP sockets.
#  Parameter: /TcpIp/TcpIpGeneral/TcpIpTcpSocketMax
#  Default: 1000
#
# TcpIpUdpSocketMax
#   Maximum number of UDP sockets.
#  Parameter: /TcpIp/TcpIpGeneral/TcpIpUdpSocketMax
#  Default: 1000
#
# TcpIpVersionInfoApi
#   If true the TcpIp_GetVersionInfo API is available.
#  Parameter: /TcpIp/TcpIpGeneral/TcpIpVersionInfoApi
#  Default: false
#
# Specific Override: TcpIpGeneral.shortname
# Dev Error Detection: /TcpIp/TcpIpGeneral/TcpIpDevErrorDetect
#

# Example:
# manprop_TcpIpGeneral=\
# TcpIpGetAndResetMeasurementDataApi:false,\
# TcpIpMainFunctionPeriod:0.001,\
# TcpIpScalabilityClass:SC1,\
# TcpIpTcpSocketMax:1000,\
# TcpIpUdpSocketMax:1000,\
# TcpIpVersionInfoApi:false




# TcpIpIcmpV6Config settings
#
# The following settings are copied to
# /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpIcmpV6Config by
# ConfGen.
#
# TcpIpIcmpV6EchoDataBufferSize
#   Configure the maximum amount of arbitrary data that will be sent back to
#   the sender of an echo request.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config
#               /TcpIpIcmpV6Config/TcpIpIcmpV6EchoDataBufferSize
#  Default: 64
#
# TcpIpIcmpV6EchoReplyEnabled
#   If enabled, the stack will respond to incoming ICMPv6 Echo Requests
#   (Pings).
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config
#               /TcpIpIcmpV6Config/TcpIpIcmpV6EchoReplyEnabled
#  Default: false
#
# TcpIpIcmpV6HopLimit
#   Default Hop-Limit value of outgoing ICMPv6 packets.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config
#               /TcpIpIcmpV6Config/TcpIpIcmpV6HopLimit
#  Default: 255
#
# TcpIpIcmpV6MsgDestinationUnreachableEnabled
#   Dis/Enables transmission of Destination Unreachable Messages.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config
#               /TcpIpIcmpV6Config/TcpIpIcmpV6MsgDestinationUnreachableEnabled
#  Default: false
#
# TcpIpIcmpV6MsgParameterProblemEnabled
#   If enabled an ICMPv6 parameter problem message will be sent if a received
#   packet has been dropped due to unknown options or headers that are found
#   in the packet.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config
#               /TcpIpIcmpV6Config/TcpIpIcmpV6MsgParameterProblemEnabled
#  Default: true
#
# Specific Override: TcpIpIcmpV6Config.shortname
# ConfigureBSW: Always Created
#

# Example:
# manprop_TcpIpIcmpV6Config=\
# TcpIpIcmpV6EchoDataBufferSize:64,\
# TcpIpIcmpV6EchoReplyEnabled:false,\
# TcpIpIcmpV6HopLimit:255,\
# TcpIpIcmpV6MsgDestinationUnreachableEnabled:false,\
# TcpIpIcmpV6MsgParameterProblemEnabled:true




# TcpIpNdpArNudConfig settings
#
# The following settings are copied to /TcpIp/TcpIpConfig/TcpIpIpConfig
# /TcpIpIpV6Config/TcpIpNdpConfig/TcpIpNdpArNudConfig by ConfGen.
#
# TcpIpNdpDefaultReachableTime
#   Configuration of the ReachableTime (s) specified in [RFC4861 6.3.2.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpArNudConfig/TcpIpNdpDefaultReachableTime
#  Default: 30
#
# TcpIpNdpDefaultRefreshTimeStaticRtr
#   The refresh time of the Default Router for all the Static TcpIp Local IPv6
#   Address configurations containers.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpArNudConfig/TcpIpNdpDefaultRefreshTimeStaticRtr
#  Default: 1
#
# TcpIpNdpDefaultRetransTimer
#   Configures the default value (s) for the RetransTimer variable specified
#   in [RFC4861 6.3.2.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpArNudConfig/TcpIpNdpDefaultRetransTimer
#  Default: 1
#
# TcpIpNdpMaxRandomFactor
#   Maximum random factor used for randomization
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpArNudConfig/TcpIpNdpMaxRandomFactor
#  Default: 15
#
# TcpIpNdpMinRandomFactor
#   Minimum random factor used for randomization
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpArNudConfig/TcpIpNdpMinRandomFactor
#  Default: 5
#
# TcpIpNdpNeighborUnreachabilityDetectionEnabled
#   Neighbor Unreachability Detection is used to remove unused entries from
#   the neighbor cache.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpArNudConfig
#               /TcpIpNdpNeighborUnreachabilityDetectionEnabled
#  Default: true
#
# TcpIpNdpNumMulticastSolicitations
#   Maximum number of multicast solicitations that will be sent when
#   performing address resolution.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpArNudConfig/TcpIpNdpNumMulticastSolicitations
#  Default: 3
#
# TcpIpNdpNumUnicastSolicitations
#   Maximum number of unicast solicitations that will be sent when performing
#   Neighbor Unreachability Detection.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpArNudConfig/TcpIpNdpNumUnicastSolicitations
#  Default: 3
#
# TcpIpNdpPacketQueueEnabled
#   Enables (TRUE) or disables (FALSE) support of a NDP Packet Queue according
#   to IETF RFC 4861, section 7.2.2.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpArNudConfig/TcpIpNdpPacketQueueEnabled
#  Default: true
#
# TcpIpNdpRandomReachableTimeEnabled
#   If enabled the value of ReachableTime will be multiplied with a random
#   value between MIN_RANDOM_FACTOR and MAX_RANDOM_FACTOR in order to prevent
#   multiple nodes from transmitting at exactly the same time
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpArNudConfig/TcpIpNdpRandomReachableTimeEnabled
#  Default: true
#
# Specific Override: TcpIpNdpArNudConfig.shortname
#

# Example:
# manprop_TcpIpNdpArNudConfig=\
# TcpIpNdpDefaultReachableTime:30,\
# TcpIpNdpDefaultRefreshTimeStaticRtr:1,\
# TcpIpNdpDefaultRetransTimer:1,\
# TcpIpNdpMaxRandomFactor:15,\
# TcpIpNdpMinRandomFactor:5,\
# TcpIpNdpNeighborUnreachabilityDetectionEnabled:true,\
# TcpIpNdpNumMulticastSolicitations:3,\
# TcpIpNdpNumUnicastSolicitations:3,\
# TcpIpNdpPacketQueueEnabled:true,\
# TcpIpNdpRandomReachableTimeEnabled:true




# TcpIpNdpPrefixRouterDiscoveryConfig settings
#
# The following settings are copied to /TcpIp/TcpIpConfig/TcpIpIpConfig
# /TcpIpIpV6Config/TcpIpNdpConfig/TcpIpNdpPrefixRouterDiscoveryConfig by
# ConfGen.
#
# TcpIpNdpDefaultRouterListSize
#   Maximum number of default router entries.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpPrefixRouterDiscoveryConfig
#               /TcpIpNdpDefaultRouterListSize
#  Default: 2
#
# TcpIpNdpDestinationCacheSize
#   Maximum number of entries in the destination cache.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpPrefixRouterDiscoveryConfig
#               /TcpIpNdpDestinationCacheSize
#  Default: 5
#
# TcpIpNdpDynamicHopLimitEnabled
#   If enabled the default hop limit may be reconfigured based on received
#   Router Advertisements.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpPrefixRouterDiscoveryConfig
#               /TcpIpNdpDynamicHopLimitEnabled
#  Default: true
#
# TcpIpNdpDynamicMtuEnabled
#   Allow dynamic reconfiguration of link MTU via Router Advertisements.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpPrefixRouterDiscoveryConfig/TcpIpNdpDynamicMtuEnabled
#  Default: false
#
# TcpIpNdpDynamicReachableTimeEnabled
#   If enabled the default Reachable Time value may be reconfigured based on
#   received Router Advertisements.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpPrefixRouterDiscoveryConfig
#               /TcpIpNdpDynamicReachableTimeEnabled
#  Default: true
#
# TcpIpNdpDynamicRetransTimeEnabled
#   If enabled the default Retransmit Timer value may be reconfigured based on
#   received Router Advertisements.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpPrefixRouterDiscoveryConfig
#               /TcpIpNdpDynamicRetransTimeEnabled
#  Default: true
#
# TcpIpNdpMaxRtrSolicitationDelay
#   Maximum delay before the first Router Solicitation will be sent after
#   interface initialization in (s).
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpPrefixRouterDiscoveryConfig
#               /TcpIpNdpMaxRtrSolicitationDelay
#  Default: 1
#
# TcpIpNdpMaxRtrSolicitations
#   Maximum number of Router Solicitations that will be sent before the first
#   Router Advertisement has been received.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpPrefixRouterDiscoveryConfig
#               /TcpIpNdpMaxRtrSolicitations
#  Default: 3
#
# TcpIpNdpPrefixListSize
#   Maximum number of entries in the on-link prefix list.
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpPrefixRouterDiscoveryConfig/TcpIpNdpPrefixListSize
#  Default: 5
#
# TcpIpNdpRndRtrSolicitationDelayEnabled
#   If enabled the first router solicitation will be delayed randomly from
#   [0...MAX_RTR_SOLICITATION_DELAY].
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpPrefixRouterDiscoveryConfig
#               /TcpIpNdpRndRtrSolicitationDelayEnabled
#  Default: true
#
# TcpIpNdpRtrSolicitationInterval
#   Interval between consecutive Router Solicitations in (s).
#  Parameter: /TcpIp/TcpIpConfig/TcpIpIpConfig/TcpIpIpV6Config/TcpIpNdpConfig
#               /TcpIpNdpPrefixRouterDiscoveryConfig
#               /TcpIpNdpRtrSolicitationInterval
#  Default: 4
#
# Specific Override: TcpIpNdpPrefixRouterDiscoveryConfig.shortname
#

# Example:
# manprop_TcpIpNdpPrefixRouterDiscoveryConfig=\
# TcpIpNdpDefaultRouterListSize:2,\
# TcpIpNdpDestinationCacheSize:5,\
# TcpIpNdpDynamicHopLimitEnabled:true,\
# TcpIpNdpDynamicMtuEnabled:false,\
# TcpIpNdpDynamicReachableTimeEnabled:true,\
# TcpIpNdpDynamicRetransTimeEnabled:true,\
# TcpIpNdpMaxRtrSolicitationDelay:1,\
# TcpIpNdpMaxRtrSolicitations:3,\
# TcpIpNdpPrefixListSize:5,\
# TcpIpNdpRndRtrSolicitationDelayEnabled:true,\
# TcpIpNdpRtrSolicitationInterval:4




# UdpNmChannelConfig settings
#
# The following settings are copied to
# /UdpNm/UdpNmGlobalConfig/UdpNmChannelConfig by ConfGen.
#
# UdpNmMainFunctionPeriod
#   Call cycle of UdpNm_MainFunction_x for the respective instance in [s].
#  Parameter: /UdpNm/UdpNmGlobalConfig/UdpNmChannelConfig
#               /UdpNmMainFunctionPeriod
#  Default: 0.001
#
# Specific Override: UdpNmChannelConfig.shortname
#

# Example:
# manprop_UdpNmChannelConfig=\
# UdpNmMainFunctionPeriod:0.001




# UdpNmGlobalConfig settings
#
# The following settings are copied to /UdpNm/UdpNmGlobalConfig by ConfGen.
#
# UdpNmCarWakeUpRxEnabled
#   Enables or disables support of CarWakeUp bit evaluation in received NM
#   PDUs.
#  Parameter: /UdpNm/UdpNmGlobalConfig/UdpNmCarWakeUpRxEnabled
#  Default: false
#
# UdpNmCoordinatorEnabled
#   Enable/disable the NM Coordination algorithm to being able to initiate the
#   synchronization algorithm.
#  Parameter: /UdpNm/UdpNmGlobalConfig/UdpNmCoordinatorEnabled
#  Default: false
#
# UdpNmCoordinatorId
#   Set the NM coordination ID for this gateway.
#  Parameter: /UdpNm/UdpNmGlobalConfig/UdpNmCoordinatorId
#  Default: 0
#
# UdpNmCoordinatorSyncSupport
#   Enables/disables the coordinator synchronization support.
#  Parameter: /UdpNm/UdpNmGlobalConfig/UdpNmCoordinatorSyncSupport
#  Default: false
#
# UdpNmVersionInfoApi
#   Pre-processor switch for enabling version info API support.
#  Parameter: /UdpNm/UdpNmGlobalConfig/UdpNmVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /UdpNm/UdpNmGlobalConfig/UdpNmDevErrorDetect
#

# Example:
# manprop_UdpNmGlobalConfig=\
# UdpNmCarWakeUpRxEnabled:false,\
# UdpNmCoordinatorEnabled:false,\
# UdpNmCoordinatorId:0,\
# UdpNmCoordinatorSyncSupport:false,\
# UdpNmVersionInfoApi:false




# XcpTransportLayer settings
#
# The following settings are copied to /Xcp/XcpConfig/XcpTransportLayer by
# ConfGen.
#
# XcpTransportLayerName
#   Xcp Transport Layer Name
#  Parameter: /Xcp/XcpConfig/XcpTransportLayer/XcpTransportLayerName
#  Default: Transport
#
# XcpMaxCto
#   MAX_CTO shows the maximum length of a CTO packet in bytes for this
#   transport layer.
#  Parameter: /Xcp/XcpConfig/XcpTransportLayer/XcpMaxCto
#  Default: 8
#
# XcpMaxDto
#   MAX_DTO shows the maximum length of a DTO packet in bytes for this
#   transport layer.
#  Parameter: /Xcp/XcpConfig/XcpTransportLayer/XcpMaxDto
#  Default: 8
#
# Specific Override: (none)
#

# Example:
# manprop_XcpTransportLayer=\
# XcpTransportLayerName:Transport,\
# XcpMaxCto:8,\
# XcpMaxDto:8




# XcpRxPdu settings
#
# The following settings are copied to
# /Xcp/XcpConfig/XcpTransportLayer/XcpRxPdu by ConfGen.
#
# XcpRxPacketType
#   This indicates the packet type for which the xcp pdu is created.
#  Parameter: /Xcp/XcpConfig/XcpTransportLayer/XcpRxPdu/XcpRxPacketType
#  Default: CMD_STIM
#
# Specific Override: (none)
#

# Example:
# manprop_XcpRxPdu=\
# XcpRxPacketType:CMD_STIM




# XcpTxPdu settings
#
# The following settings are copied to
# /Xcp/XcpConfig/XcpTransportLayer/XcpTxPdu by ConfGen.
#
# XcpTxPacketType
#   This indicates the packet type for which the Xcp PDU is created.
#  Parameter: /Xcp/XcpConfig/XcpTransportLayer/XcpTxPdu/XcpTxPacketType
#  Default: RES_ERR_EV_SERV_DAQ
#
# Specific Override: (none)
#

# Example:
# manprop_XcpTxPdu=\
# XcpTxPacketType:RES_ERR_EV_SERV_DAQ




# XcpGeneral settings
#
# The following settings are copied to /Xcp/XcpGeneral by ConfGen.
#
# XcpDaqMemoryLimit
#   Total Memory for DAQ configurations for ALL protocol layers.
#  Parameter: /Xcp/XcpGeneral/XcpDaqMemoryLimit
#  Default: 200
#
# XcpMainFunctionPeriod
#   The XCP does not require this information but the BSW scheduler, which
#   invokes the main function, needs it in order to plan its tasks.
#  Parameter: /Xcp/XcpGeneral/XcpMainFunctionPeriod
#  Default: 0.01
#
# XcpProductLine
#   Select product line for pre-filled XCP template files and validation
#   checks.
#  Parameter: /Xcp/XcpGeneral/XcpProductLine
#  Default: OTHER
#
# XcpVersion
#   Version of XCP protocol and transport layer.
#  Parameter: /Xcp/XcpGeneral/XcpVersion
#  Default: VERSION_1_0
#
# XcpVersionInfoApi
#   Enables/disables the existence of the XCP_GetVersionInfo() API service.
#  Parameter: /Xcp/XcpGeneral/XcpVersionInfoApi
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /Xcp/XcpGeneral/XcpDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_XcpGeneral=\
# XcpDaqMemoryLimit:200,\
# XcpMainFunctionPeriod:0.01,\
# XcpProductLine:OTHER,\
# XcpVersion:VERSION_1_0,\
# XcpVersionInfoApi:false




# XfrmGeneral settings
#
# The following settings are copied to /Xfrm/XfrmGeneral by ConfGen.
#
# rba_XfrmEnableAlignedBufferAccess
#   defines wether the transformer can access the buffer in an aligned manner
#   (e.g. read 4 bytes at once).
#  Parameter: /Xfrm/XfrmGeneral/rba_XfrmEnableAlignedBufferAccess
#  Default: false
#
# Specific Override: (none)
# Dev Error Detection: /Xfrm/XfrmGeneral/XfrmDevErrorDetect
# ConfigureBSW: Always Created
#

# Example:
# manprop_XfrmGeneral=\
# rba_XfrmEnableAlignedBufferAccess:false




# DevErrorDetection settings
#
# Switches the Default Error Tracer (Det) detection and notification ON or OFF
# for BSW modules.
#
# Can/CanGeneral/CanDevErrorDetection
#   Enable error tracing for Can
#  Default: false
#
# CanTp/CanTpGeneral/CanTpDevErrorDetect
#   Enable error tracing for CanTp
#  Default: false
#
# CanIf/CanIfPublicCfg/CanIfPublicDevErrorDetect
#   Enable error tracing for CanIf
#  Default: false
#
# CanNm/CanNmGlobalConfig/CanNmDevErrorDetect
#   Enable error tracing for CanNm
#  Default: false
#
# CanSM/CanSMGeneral/CanSMDevErrorDetect
#   Enable error tracing for CanSM
#  Default: false
#
# Com/ComGeneral/ComConfigurationUseDet
#   Enable error tracing for Com
#  Default: false
#
# ComM/ComMGeneral/ComMDevErrorDetect
#   Enable error tracing for ComM
#  Default: false
#
# Fee/FeeGeneral/FeeDevErrorDetect
#   Enable error tracing for Fee
#  Default: false
#
# Fls/FlsGeneral/FlsDevErrorDetect
#   Enable error tracing for Fls
#  Default: false
#
# IpduM/IpduMGeneral/IpduMDevErrorDetect
#   Enable error tracing for IpduM
#  Default: false
#
# Lin/LinGeneral/LinDevErrorDetect
#   Enable error tracing for Lin
#  Default: false
#
# LinIf/LinIfGeneral/LinIfDevErrorDetect
#   Enable error tracing for LinIf
#  Default: false
#
# LinSM/LinSMGeneral/LinSMDevErrorDetect
#   Enable error tracing for LinSM
#  Default: false
#
# MemIf/MemIfGeneral/MemIfDevErrorDetect
#   Enable error tracing for MemIf
#  Default: false
#
# Nm/NmGlobalConfig/NmGlobalProperties/NmDevErrorDetect
#   Enable error tracing for Nm
#  Default: false
#
# NvM/NvMCommon/NvMDevErrorDetect
#   Enable error tracing for NvM
#  Default: false
#
# PduR/PduRGeneral/PduRDevErrorDetect
#   Enable error tracing for PduR
#  Default: false
#
# Xcp/XcpGeneral/XcpDevErrorDetect
#   Enable error tracing for Xcp
#  Default: false
#
# Dem/DemGeneral/DemDevErrorDetect
#   Enable error tracing for Dem
#  Default: false
#
#

# Example:
# DevErrorDetection=\
# Can/CanGeneral/CanDevErrorDetection:false,\
# CanTp/CanTpGeneral/CanTpDevErrorDetect:false,\
# CanIf/CanIfPublicCfg/CanIfPublicDevErrorDetect:false,\
# CanNm/CanNmGlobalConfig/CanNmDevErrorDetect:false,\
# CanSM/CanSMGeneral/CanSMDevErrorDetect:false,\
# Com/ComGeneral/ComConfigurationUseDet:false,\
# ComM/ComMGeneral/ComMDevErrorDetect:false,\
# Fee/FeeGeneral/FeeDevErrorDetect:false,\
# Fls/FlsGeneral/FlsDevErrorDetect:false,\
# IpduM/IpduMGeneral/IpduMDevErrorDetect:false,\
# Lin/LinGeneral/LinDevErrorDetect:false,\
# LinIf/LinIfGeneral/LinIfDevErrorDetect:false,\
# LinSM/LinSMGeneral/LinSMDevErrorDetect:false,\
# MemIf/MemIfGeneral/MemIfDevErrorDetect:false,\
# Nm/NmGlobalConfig/NmGlobalProperties/NmDevErrorDetect:false,\
# NvM/NvMCommon/NvMDevErrorDetect:false,\
# PduR/PduRGeneral/PduRDevErrorDetect:false,\
# Xcp/XcpGeneral/XcpDevErrorDetect:false,\
# Dem/DemGeneral/DemDevErrorDetect:false




# all_DevErrorDetect settings
#
# In place of per-module DevErrorDetection settings, the all_DevErrorDetect
# setting can be used as a global enable/disable control for all
# DevErrorDetection parameters.
#
# all_DevErrorDetect=true (everything ON) all_DevErrorDetect=false (everything
# OFF)
#
# Default: (none)
#

# Example:
# all_DevErrorDetect=null




# ConfigVariant settings
#
# Specify the ConfigVariant for each module, which is one of
# PRECONFIGURED-CONFIGURATION, RECOMMENDED-CONFIGURATION, VARIANT-PRE-COMPILE,
# VARIANT-LINK-TIME, VARIANT-POST-BUILD, VARIANT-POST-BUILD-LOADABLE or
# VARIANT-POST-BUILD-SELECTABLE.
#
# The default is VARIANT-PRE-COMPILE, except for rba_MemLib, which has
# PRECONFIGURED-CONFIGURATION as the default.
#
# CanIf
#   Set ConfigVariant for CanIf
#  Default: VARIANT-PRE-COMPILE
#
# CanNm
#   Set ConfigVariant for CanNm
#  Default: VARIANT-PRE-COMPILE
#
# CanSM
#   Set ConfigVariant for CanSM
#  Default: VARIANT-PRE-COMPILE
#
# Com
#   Set ConfigVariant for Com
#  Default: VARIANT-PRE-COMPILE
#
# ComM
#   Set ConfigVariant for ComM
#  Default: VARIANT-PRE-COMPILE
#
# EcuC
#   Set ConfigVariant for EcuC
#  Default: VARIANT-PRE-COMPILE
#
# Fee
#   Set ConfigVariant for Fee
#  Default: VARIANT-PRE-COMPILE
#
# Ea
#   Set ConfigVariant for Ea
#  Default: VARIANT-PRE-COMPILE
#
# IpduM
#   Set ConfigVariant for IpduM
#  Default: VARIANT-PRE-COMPILE
#
# MemIf
#   Set ConfigVariant for MemIf
#  Default: VARIANT-PRE-COMPILE
#
# Nm
#   Set ConfigVariant for Nm
#  Default: VARIANT-PRE-COMPILE
#
# NvM
#   Set ConfigVariant for NvM
#  Default: VARIANT-PRE-COMPILE
#
# PduR
#   Set ConfigVariant for PduR
#  Default: VARIANT-PRE-COMPILE
#
# Can
#   Set ConfigVariant for Can
#  Default: VARIANT-PRE-COMPILE
#
# Fr
#   Set ConfigVariant for Fr
#  Default: VARIANT-PRE-COMPILE
#
# FrIf
#   Set ConfigVariant for FrIf
#  Default: VARIANT-PRE-COMPILE
#
# FrNm
#   Set ConfigVariant for FrNm
#  Default: VARIANT-PRE-COMPILE
#
# FrSM
#   Set ConfigVariant for FrSM
#  Default: VARIANT-PRE-COMPILE
#
# Dcm
#   Set ConfigVariant for Dcm
#  Default: VARIANT-PRE-COMPILE
#
# Dem
#   Set ConfigVariant for Dem
#  Default: VARIANT-PRE-COMPILE
#
# Lin
#   Set ConfigVariant for Lin
#  Default: VARIANT-PRE-COMPILE
#
# LinIf
#   Set ConfigVariant for LinIf
#  Default: VARIANT-PRE-COMPILE
#
# LinSM
#   Set ConfigVariant for LinSM
#  Default: VARIANT-PRE-COMPILE
#
# rba_MemLib
#   Set ConfigVariant for rba_MemLib
#  Default: PRECONFIGURED-CONFIGURATION
#
#

# Example:
# manprop_ConfigVariant=\
# CanIf:VARIANT-PRE-COMPILE,\
# CanNm:VARIANT-PRE-COMPILE,\
# CanSM:VARIANT-PRE-COMPILE,\
# Com:VARIANT-PRE-COMPILE,\
# ComM:VARIANT-PRE-COMPILE,\
# EcuC:VARIANT-PRE-COMPILE,\
# Fee:VARIANT-PRE-COMPILE,\
# Ea:VARIANT-PRE-COMPILE,\
# IpduM:VARIANT-PRE-COMPILE,\
# MemIf:VARIANT-PRE-COMPILE,\
# Nm:VARIANT-PRE-COMPILE,\
# NvM:VARIANT-PRE-COMPILE,\
# PduR:VARIANT-PRE-COMPILE,\
# Can:VARIANT-PRE-COMPILE,\
# Fr:VARIANT-PRE-COMPILE,\
# FrIf:VARIANT-PRE-COMPILE,\
# FrNm:VARIANT-PRE-COMPILE,\
# FrSM:VARIANT-PRE-COMPILE,\
# Dcm:VARIANT-PRE-COMPILE,\
# Dem:VARIANT-PRE-COMPILE,\
# Lin:VARIANT-PRE-COMPILE,\
# LinIf:VARIANT-PRE-COMPILE,\
# LinSM:VARIANT-PRE-COMPILE,\
# rba_MemLib:PRECONFIGURED-CONFIGURATION




# AlgoPropertiesDebug settings
#
# Enable debugging for settings and properties. If AlgoSettingsDebug=true,
# ConfGen will print additional information while processing each property to
# show whether each setting took effect. Settings are skipped if they have
# already been set by the importer, or if a containing element does not exist.
#
# Default: false
#

# Example:
# manprop_AlgoPropertiesDebug=false



