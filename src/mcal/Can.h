/*******************************************************************************
 * Autogenerated by MCALgen for CAN V1.0.54.30643: Can.h
 *******************************************************************************/
#ifndef CAN_H_
#define CAN_H_

/************************************************************************************************************
 *                              Include Files
 ***********************************************************************************************************/
#include "ComStack_Types.h"   /* [$CAN 388] */
#include "Can_GeneralTypes.h" /* [$CAN 435] */
#include "Can_HwProviderTypes.h"

/************************************************************************************************************
 *                              Version and Module Information
 ***********************************************************************************************************/
/* [$CAN 1017] [$CAN 448] */
#define CAN_VENDOR_ID         (11U)
#define CAN_MODULE_ID         (80U)
#define CAN_AR_RELEASE_MAJOR_VERSION    (4U)
#define CAN_AR_RELEASE_MINOR_VERSION    (2U)
#define CAN_AR_RELEASE_REVISION_VERSION (2U)
#define CAN_SW_MAJOR_VERSION  (1U)
#define CAN_SW_MINOR_VERSION  (0U)
#define CAN_SW_PATCH_VERSION  (54U)

/* [$CAN 104] [$CAN 80]*/
#define CAN_E_PARAM_POINTER     ((uint8)0x01)
#define CAN_E_PARAM_HANDLE      ((uint8)0x02)
#define CAN_E_PARAM_DLC         ((uint8)0x03)
#define CAN_E_PARAM_CONTROLLER  ((uint8)0x04)
#define CAN_E_UNINIT            ((uint8)0x05)
#define CAN_E_TRANSITION        ((uint8)0x06)
#define CAN_E_DATALOST          ((uint8)0x07)
#define CAN_E_PARAM_BAUDRATE    ((uint8)0x08) /*Number not provided in the AutosarSpec*/
  
#define CAN_E_ICOM_CONFIG_INVALID   ((uint8)0x09) 
#define CAN_E_INIT_FAILED           ((uint8)0x0A) 

/************************************************************************************************************
 *                              Constant Definitions
 ***********************************************************************************************************/
#define CAN_NO_CONTROLLER_INDEX ((uint16) 0xffff)
#define CAN_NO_BAUDRATE_INDEX ((uint32) 0xffffff)

/************************************************************************************************************
 *                              Type Definitions
 ***********************************************************************************************************/
typedef enum /* Can_DriverStatus */ {
  CAN_UNINIT=0,
  CAN_READY
}Can_DriverStatus;

typedef enum /*modes*/{
  CAN_POLLING,
  CAN_MIXED,
  CAN_INTERRUPT
} Can_Mode;

typedef struct /* Can_ControllerFdbaudrateConfigType */ {
  uint16 BaudRate; /* FD Baudrate in Kbps. */
  uint8  PropSeg; /* Propagation delay in time quanta. */
  uint8  Seg1;     /* Phase segment 1 in time quanta. */
  uint8  Seg2;     /* Phase segment 2 in time quanta. */
  uint8  SyncJumpWidth; /* Synchronization jump width for the controller in time quanta. */  
  uint16 TrcvDelayCompensationOffset; /* Specifies the Transceiver Delay Compensation Offset in ns */
  boolean TxBitRateSwitch; /* Specifies if the bit rate switching shall be used for transmissions. */
} Can_ControllerFdbaudrateConfigType;

typedef struct /* Can_ControllerBaudrateConfigType */ {
  uint16 Baudrate; /* Baudrate in Kbps. */
  uint16 BaudrateConfigId; /* AR 4.2.1 addition. Used by SetBaudrate API.Uniquely identifies a specific baud rate configuration. */
  uint8  PropSeg;  /* Propagation delay in time quanta. */
  uint8  Seg1;     /* Phase segment 1 in time quanta. */
  uint8  Seg2;     /* Phase segment 2 in time quanta. */
  uint8  SyncJumpWidth; /* Synchronization jump width for the controller in time quanta. */
 
  const Can_ControllerFdbaudrateConfigType* FdBaudrateConfig;
  
} Can_ControllerBaudrateConfigType; /*[$CAN 414]*/


typedef struct /* Can_ControllerConfigType */ {
  Can_IdType ControllerId;
  boolean  WakeupSupport;
  Can_Mode BusoffProcessing; /* [$CAN 7] */
  Can_Mode RxProcessing;     /* [$CAN 7] */
  Can_Mode TxProcessing;     /* [$CAN 7] */
  Can_Mode WakeupProcessing; /* [$CAN 7] */
  uint32   EcuMwakeupSourceId;
  uint32   DefaultBaudrateRefId;
  uint32   BaudrateConfigCount;
  const    Can_ControllerBaudrateConfigType* BaudrateConfigs;
  uint32   hwId;
  uint32   providerId;
  uint32   fallbackHwId;
  uint32   fallbackProviderId;
  const    Can_Hwp_ChannelConfig* HwpConfig;
} Can_ControllerConfigType;

typedef struct /* Can_ConfigType */ {
  const   Can_ControllerConfigType*  Controllers;
  uint32  ControllerCount;
  const uint16* RxObjectIdToControllerIndex;
  uint16  RxObjectIdToControllerIndexLength;
  const uint16* TxObjectIdToControllerIndex;
  uint16  TxObjectIdToControllerIndexLength;
    boolean (*CanLPduReceiveCalloutFunction)(uint8 Hrh, Can_IdType CanId, uint8 CanDlc, const uint8 *CanSduPtr);
} Can_ConfigType; /*[$CAN 413]*/

/************************************************************************************************************
 *                              Include Files
 ***********************************************************************************************************/
/* Can_Cfg.h needs the definition of Can_ConfigType. */
#include "Can_Cfg.h"

/************************************************************************************************************
 *                              Global Function Prototypes
 ***********************************************************************************************************/

#define CAN_CHECKBAUDRATE_API_ID (14U)
extern Std_ReturnType Can_CheckBaudrate(uint8 Controller, const uint16 Baudrate);
#define CAN_CHANGEBAUDRATE_API_ID (13U)
extern Std_ReturnType Can_ChangeBaudrate(uint8 Controller, const uint16 Baudrate);
#define CAN_SETCONTROLLERMODE_API_ID (3U)
extern Can_ReturnType Can_SetControllerMode(uint8 Controller, Can_StateTransitionType Transition);
#define CAN_CHECKWAKEUP_API_ID (11U)
extern Can_ReturnType Can_CheckWakeup(uint8 Controller);
#define CAN_WRITE_API_ID (6U)
extern Can_ReturnType Can_Write(Can_HwHandleType Hth, const Can_PduType* PduInfo);



/*[$CAN 43] [$CAN 386] [$CAN 1108] */
/*----------------------------
 * Start of code declaration
 *----------------------------*/
#define CAN_START_SEC_CODE
#include "Can_MemMap.h"
#define CAN_INIT_API_ID (0U)
extern void Can_Init(const Can_ConfigType* Config);
#define CAN_GETVERSIONINFO_API_ID (7U)
extern void Can_GetVersionInfo(Std_VersionInfoType* versioninfo);
#define CAN_INITCONTROLLER_API_ID (2U)
extern void Can_InitController(uint8 Controller, const Can_ControllerBaudrateConfigType* Config);
#define CAN_SETBAUDRATE_API_ID (15U)
extern Std_ReturnType Can_SetBaudrate(uint8 Controller, const uint16 BaudRateConfigID);
#define CAN_SETICOMCONFIGURATION_API_ID (16U)
extern Std_ReturnType Can_SetIcomConfiguration(uint8 Controller, IcomConfigIdType ConfigurationId);
#define CAN_DISABLECONTROLLERINTERRUPTS_API_ID (4U)
extern void Can_DisableControllerInterrupts(uint8 Controller);
#define CAN_ENABLECONTROLLERINTERRUPTS_API_ID (5U)
extern void Can_EnableControllerInterrupts(uint8 Controller);
#define CAN_MAINFUNCTION_WRITE_API_ID (1U)
extern void Can_MainFunction_Write(void);
#define CAN_MAINFUNCTION_READ_API_ID (8U)
extern void Can_MainFunction_Read(void);
#define CAN_MAINFUNCTION_BUSOFF_API_ID (9U)
extern void Can_MainFunction_BusOff(void);
#define CAN_MAINFUNCTION_WAKEUP_API_ID (10U)
extern void Can_MainFunction_Wakeup(void);
#define CAN_MAINFUNCTION_MODE_API_ID (12U)
extern void Can_MainFunction_Mode(void);
/*----------------------------
 * End of code declaration
 *----------------------------*/
#define CAN_STOP_SEC_CODE
#include "Can_MemMap.h"

#endif /* CAN_H_ */


