/*******************************************************************************
 * Autogenerated by MCALgen for CAN V1.0.54.30643: Can_HwProvider.cpp
 *******************************************************************************/

/************************************************************************************************************
 *                              Include Files
 ***********************************************************************************************************/
#include "Can_HwProvider.hpp"

/************************************************************************************************************
 *                         Useful Macros
 ***********************************************************************************************************/

/************************************************************************************************************
 *                         Global Variables
 ***********************************************************************************************************/

/************************************************************************************************************
 *                         Private Variables
 ***********************************************************************************************************/
#define CAN_PROVIDER_COUNT (2)
extern Can_HwProvider * Can_BOA_HwProviderPtr;
extern Can_HwProvider * Can_Virtual_HwProviderPtr;
static Can_HwProvider* const * Can_HwProviders[] = {
  &Can_BOA_HwProviderPtr, &Can_Virtual_HwProviderPtr
};


/************************************************************************************************************
 *                         API
 ***********************************************************************************************************/

Can_HwProvider* Can_GetHwProvider(uint32 ProviderID) {
  if (ProviderID < CAN_PROVIDER_COUNT) {
    return *(Can_HwProviders[ProviderID]);
  }
  return NULL_CPP_PTR;
}

Can_Hw *Can_GetHw(Can_Hwp_UpCall UpCall, 
                  uint32         Context,
                  uint32         ProviderID, 
                  uint32         HwId, 
                  uint32         FallbackProviderID, 
                  uint32         FallbackHwId) {

  Can_HwProvider* provider = Can_GetHwProvider(ProviderID);

  if (provider != NULL_CPP_PTR) {
    if (provider->IsHardwarePresent(HwId)) {
      return provider->GetHardware(UpCall, Context, HwId);
    }
    else {
      provider = Can_GetHwProvider(FallbackProviderID);
      if (provider != NULL_CPP_PTR) {
        if (provider->IsHardwarePresent(FallbackHwId)) {
          return provider->GetHardware(UpCall, Context, FallbackHwId);
        }
      }
    }
  }

  return NULL_CPP_PTR;
}


