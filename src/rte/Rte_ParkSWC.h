/** @file     Rte_ParkSWC.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 7.5.0
  */

#ifndef RTE_PARKSWC_H
#define RTE_PARKSWC_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_ParkSWC_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_ParkSWC_main)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_ParkSWC {
   uint8 Rte_Dummy;
};
typedef struct Rte_CDS_ParkSWC Rte_CDS_ParkSWC;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h"
extern CONST(struct Rte_CDS_ParkSWC, RTE_CONST) Rte_Inst_ParkSWC;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h"


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_ParkSWC, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_PARKSWC_START_SEC_CODE
#include "Rte_MemMap.h"
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_ParkSWC_PP_ParkStatus_DE_ParkState(VAR(boolean, AUTOMATIC) data);
#define RTE_PARKSWC_STOP_SEC_CODE
#include "Rte_MemMap.h"
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h"
extern VAR(boolean, RTE_DATA) Rte_Rx_000001;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h"
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ParkSWC_main)
/* Inline read optimization; Rte_Call_RP_DioControl_DioActuate to direct read */
#define Rte_Call_RP_DioControl_DioActuate( DioControl )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ParkSWC_main)
/* Inline read optimization; Rte_Read_RP_ParkControl_DE_ParkState to direct access */
#define Rte_Read_RP_ParkControl_DE_ParkState( data )  ( ((*(data)) = Rte_Rx_000001),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ParkSWC_main)
#define Rte_Write_PP_ParkStatus_DE_ParkState( data ) (Rte_Write_ParkSWC_PP_ParkStatus_DE_ParkState(data))
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define ParkSWC_START_SEC_CODE
#include "ParkSWC_MemMap.h"
FUNC(void, ParkSWC_CODE) RE_ParkSWC_main(void);
#define ParkSWC_STOP_SEC_CODE
#include "ParkSWC_MemMap.h"

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_PARKSWC_H */
