/*******************************************************************************
 * Autogenerated by MCALgen for FLS V1.0.54.30643: Fls.h
 *******************************************************************************/
#ifndef FLS_H_
#define FLS_H_

/************************************************************************************************************
 *				Include Files
 ***********************************************************************************************************/
#include "Std_Types.h"
#include "MemIf_Types.h"
/************************************************************************************************************
 *				Macro Definitions
 ***********************************************************************************************************/
/* [$Fls 206]  [$Fls 364] */
#define FLS_VENDOR_ID         (11U)
#define FLS_MODULE_ID         (92U)
#define FLS_AR_RELEASE_MAJOR_VERSION    (4U)
#define FLS_AR_RELEASE_MINOR_VERSION    (2U)
#define FLS_AR_RELEASE_REVISION_VERSION (2U)
#define FLS_SW_MAJOR_VERSION  (1U)
#define FLS_SW_MINOR_VERSION  (0U)
#define FLS_SW_PATCH_VERSION  (54U)

#define FLS_E_PARAM_CONFIG		     (0x01)
#define FLS_E_PARAM_ADDRESS		     (0x02)
#define FLS_E_PARAM_LENGTH		     (0x03)
#define FLS_E_PARAM_DATA 		       (0x04)
#define FLS_E_UNINIT               (0x05)
#define FLS_E_BUSY                 (0x06)
#define FLS_E_VERIFY_ERASE_FAILED  (0x07)
#define FLS_E_VERIFY_WRITE_FAILED  (0x08)
#define FLS_E_TIMEOUT              (0x09)
#define FLS_E_PARAM_POINTER		     (0x0A)


/************************************************************************************************************
 *				Type Definitions
 ***********************************************************************************************************/
typedef enum {
  FLS_NONE,
  FLS_ERASE,
  FLS_WRITE,
  FLS_READ,
  FLS_COMPARE,
  
  FLS_BLANKCHECK
  
} Fls_VAP_JobType;

typedef uint32 Fls_AddressType; /* [$Fls 1248] */
typedef Fls_AddressType Fls_LengthType; /* [$Fls 1249] */

typedef struct {
  Fls_AddressType FlsSectorStartaddress;  /* [$Fls 9283] */
  Fls_LengthType  FlsPageSize;            /* [$Fls 9281] */
  Fls_LengthType  FlsSectorSize;          /* [$Fls 9282] */
  Fls_LengthType  FlsNumberOfSectors;     /* [$Fls 9280] */
  Fls_LengthType  FlsNumberOfPages;
} Fls_SectorType;

typedef struct {
  void (*FlsJobEndNotification)(); /* [$Fls 109]  [$Fls 110] */
  void (*FlsJobErrorNotification)();
  const Fls_SectorType* FlsSectorList;
  const uint32 FlsSectorListSize;
  const MemIf_ModeType FlsMode;
} Fls_ConfigType;  /* [$Fls 354] [$Fls 1247] */

#include "Fls_Cfg.h"

/************************************************************************************************************
 *				Global Function Prototypes
 ***********************************************************************************************************/
/*----------------------------
 * Start of code declaration
 *----------------------------*/
#define FLS_START_SEC_CODE
#include "Fls_MemMap.h"
#define FLS_INIT_API_ID (0U)
extern void Fls_Init(const Fls_ConfigType* ConfigPtr);
#define FLS_ERASE_API_ID (1U)
extern Std_ReturnType Fls_Erase(Fls_AddressType TargetAddress, Fls_LengthType Length);
#define FLS_WRITE_API_ID (2U)
extern Std_ReturnType Fls_Write(Fls_AddressType TargetAddress, const uint8* SourceAddressPtr, Fls_LengthType Length);
#define FLS_CANCEL_API_ID (3U)
extern void Fls_Cancel(void);
#define FLS_GETSTATUS_API_ID (4U)
extern MemIf_StatusType Fls_GetStatus(void);
#define FLS_GETJOBRESULT_API_ID (5U)
extern MemIf_JobResultType Fls_GetJobResult(void);
#define FLS_READ_API_ID (7U)
extern Std_ReturnType Fls_Read(Fls_AddressType SourceAddress, uint8* TargetAddressPtr, Fls_LengthType Length);
#define FLS_COMPARE_API_ID (8U)
extern Std_ReturnType Fls_Compare(Fls_AddressType SourceAddress, const uint8* TargetAddressPtr, Fls_LengthType Length);
#define FLS_SETMODE_API_ID (9U)
extern void Fls_SetMode(MemIf_ModeType Mode);
#define FLS_GETVERSIONINFO_API_ID (16U)
extern void Fls_GetVersionInfo(Std_VersionInfoType* VersioninfoPtr);
#define FLS_MAINFUNCTION_API_ID (6U)
extern void Fls_MainFunction(void);
#define FLS_BLANKCHECK_API_ID (10U)
extern Std_ReturnType Fls_BlankCheck(Fls_AddressType TargetAddress, Fls_LengthType Length);
/*----------------------------
 * End of code declaration
 *----------------------------*/
#define FLS_STOP_SEC_CODE
#include "Fls_MemMap.h"

#endif /* FLS_H_ */

