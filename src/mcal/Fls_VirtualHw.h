/*******************************************************************************
 * Autogenerated by MCALgen for FLS V1.0.54.30643: Fls_VirtualHw.h
 *******************************************************************************/
#ifndef FLS_VIRTUALHW_H_
#define FLS_VIRTUALHW_H_

/************************************************************************************************************
 *				Include Files
 ***********************************************************************************************************/
#include "NonVolatileStore.h"

#ifdef __cplusplus
extern "C" {
#endif
  #include "Fls.h"
  #include "Fls_Internal.h"
#ifdef __cplusplus
}
#endif

/************************************************************************************************************
 *				Macro Definitions
 ***********************************************************************************************************/

/************************************************************************************************************
 *				Type Definitions
 ***********************************************************************************************************/

/************************************************************************************************************
 *				Type Definitions
 ***********************************************************************************************************/

/***********************************************************************************************************
 *				Global Variable External References
 ***********************************************************************************************************/

/************************************************************************************************************
 *				Global Function Prototypes
 ***********************************************************************************************************/

class Fls_FakeHW {
private:
  uint8 m_ApiId;

  Fls_VAP_JobType 	m_currentJob;
  uint8* m_sourceDataBufferPtr;
  uint8* m_targetDataBufferPtr;
  uint8* m_DataBufferPtr;
  Fls_AddressType 	m_FlashAddress;
  Fls_LengthType 	m_Length;
  uint8  m_FlsDevErrDetect;
  NonVolatileStore *m_Store;

protected:
  void DoErase(boolean fromAction);
  void DoWrite(boolean fromAction);
  void DoRead(boolean fromAction);
  void DoCompare(boolean fromAction);
  
  void DoBlankCheck(boolean fromAction);
  
  void NotifyJobEnd(void);
  void NotifyJobError(void);

public:
  Fls_FakeHW(Fls_LengthType FlsTotalSize, uint8 FlsErasedValue, uint8 FlsDevErrDetect);
  Fls_FakeHW(Fls_FakeHW &other); // Copy constructor
  ~Fls_FakeHW();

  void Init(const Fls_ConfigType* ConfigPtr);
  Std_ReturnType Erase(Fls_AddressType TargetAddress, Fls_LengthType Length);
  Std_ReturnType Write(Fls_AddressType TargetAddress, const uint8* SourceAddressPtr, Fls_LengthType Length);
  void Cancel(void);
  MemIf_StatusType GetStatus(void);
  MemIf_JobResultType GetJobResult(void);
  Std_ReturnType Read(Fls_AddressType SourceAddress, uint8* TargetAddressPtr, Fls_LengthType Length);
  Std_ReturnType Compare(Fls_AddressType SourceAddress, const uint8* TargetAddressPtr, Fls_LengthType Length);
  
  Std_ReturnType BlankCheck(Fls_AddressType TargetAddress, Fls_LengthType Length);
  
  void SetMode(MemIf_ModeType Mode);
  void MainFunction(boolean fromAction);
  uint8 *GetBaseAddress(void);
 
  void DeAllocateInternalMemory(void);
  
  MemIf_StatusType      Status;
  MemIf_JobResultType   JobResult;   /*[$Fls 36]*/
  const Fls_ConfigType* Config;
  uint8 ErrorCode;
  uint8 DemError;
  MemIf_ModeType Mode;

  int  HardwareError;
  int  EraseVerifyError;
  int  WriteVerifyError;
  int  BlankCheckVerifyError;
  int  ReadTimeoutError;
  int  WriteTimeoutError;
  int  CompareTimeoutError;
  int  EraseTimeoutError;
  Fls_LengthType        FlsTotalSize;
  Fls_AddressType       FlsBaseAddress;
  uint8 FlsErasedValue;

};

extern Fls_FakeHW fls_hw;
#endif /* FLS_VIRTUALHW_H_ */

