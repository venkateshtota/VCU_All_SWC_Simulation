/*******************************************************************************
 * Autogenerated by MCALgen for MCU V1.0.54.30643: Mcu.h
 *******************************************************************************/
#ifndef MCU_H_
#define MCU_H_

/************************************************************************************************************
 *                              Include Files
 ***********************************************************************************************************/
#include "Std_Types.h"


/************************************************************************************************************
 *                              Version and Module Information
 ***********************************************************************************************************/
#define MCU_VENDOR_ID         (11U)
#define MCU_MODULE_ID         (101U)
#define MCU_AR_RELEASE_MAJOR_VERSION    (4U)
#define MCU_AR_RELEASE_MINOR_VERSION    (2U)
#define MCU_AR_RELEASE_REVISION_VERSION (2U)
#define MCU_SW_MAJOR_VERSION  (1U)
#define MCU_SW_MINOR_VERSION  (0U)
#define MCU_SW_PATCH_VERSION  (54U)


/* [$MCU 112] [$MCU 12] */
#define MCU_E_PARAM_CONFIG      ((uint8)0x0A)
#define MCU_E_PARAM_CLOCK       ((uint8)0x0B)
#define MCU_E_PARAM_MODE        ((uint8)0x0C)
#define MCU_E_PARAM_RAMSECTION  ((uint8)0x0D)
#define MCU_E_PLL_NOT_LOCKED    ((uint8)0x0E)
#define MCU_E_UNINIT            ((uint8)0x0F)
#define MCU_E_PARAM_POINTER     ((uint8)0x10)

/************************************************************************************************************
 *                              Type Definitions
 ***********************************************************************************************************/
typedef enum /* Mcu_PllStatusType */ {
  MCU_PLL_LOCKED,
  MCU_PLL_UNLOCKED,
  MCU_PLL_STATUS_UNDEFINED
} Mcu_PllStatusType; /* [$MCU 231] [$MCU 230] [$MCU 1135] */

typedef uint32 Mcu_ClockType; /* [$MCU 233] [$MCU 232] [$MCU 1136] */

typedef enum /* Mcu_ResetType */ {
  MCU_POWER_ON_RESET,
  MCU_WATCHDOG_RESET,
  MCU_SW_RESET,
  MCU_RESET_UNDEFINED
} Mcu_ResetType; /* [$MCU 234] [$MCU 134] [$MCU 1137] */

/* [$MCU 201] [$MCU 215] */
typedef struct /* Mcu_ConfigType */ {
  Mcu_ResetType reset_reason;
} Mcu_ConfigType; /* [$MCU 131] [$MCU 1134] */

typedef uint32 Mcu_RawResetType; /* [$MCU 235] [$MCU 236] [$MCU 1138] */

typedef uint32 Mcu_ModeType; /* [$MCU 237] [$MCU 238] [$MCU 1139] */

typedef uint32 Mcu_RamSectionType; /* [$MCU 239] [$MCU 240] [$MCU 1140] */

typedef enum /* Mcu_RamStateType */ {
  MCU_RAMSTATE_INVALID,
  MCU_RAMSTATE_VALID
} Mcu_RamStateType; /* [$MCU 1141] */

/************************************************************************************************************
 *                              Include Files
 ***********************************************************************************************************/
/* Mcu_Cfg.h needs the definition of Mcu_ConfigType. */
#include "Mcu_Cfg.h" /* [$MCU 211] */

/************************************************************************************************************
 *                              Global Function Prototypes
 ***********************************************************************************************************/
/*----------------------------
 * Start of code declaration
 *----------------------------*/
#define MCU_START_SEC_CODE
#include "Mcu_MemMap.h"
#define MCU_INIT_API_ID (0U)
extern void Mcu_Init(const Mcu_ConfigType* ConfigPtr);
#define MCU_INITRAMSECTION_API_ID (1U)
extern Std_ReturnType Mcu_InitRamSection(Mcu_RamSectionType RamSection);
#define MCU_INITCLOCK_API_ID (2U)
extern Std_ReturnType Mcu_InitClock(Mcu_ClockType ClockSetting);
#define MCU_DISTRIBUTEPLLCLOCK_API_ID (3U)
extern void Mcu_DistributePllClock(void);
#define MCU_GETPLLSTATUS_API_ID (4U)
extern Mcu_PllStatusType Mcu_GetPllStatus(void);
#define MCU_GETRESETREASON_API_ID (5U)
extern Mcu_ResetType Mcu_GetResetReason(void);
#define MCU_GETRESETRAWVALUE_API_ID (6U)
extern Mcu_RawResetType Mcu_GetResetRawValue(void);
#define MCU_PERFORMRESET_API_ID (7U)
extern void Mcu_PerformReset(void);
#define MCU_SETMODE_API_ID (8U)
extern void Mcu_SetMode(Mcu_ModeType McuMode);
#define MCU_GETVERSIONINFO_API_ID (9U)
extern void Mcu_GetVersionInfo(Std_VersionInfoType* versioninfo);
#define MCU_GETRAMSTATE_API_ID (4U)
extern Mcu_RamStateType Mcu_GetRamState(void);
/*----------------------------
 * End of code declaration
 *----------------------------*/
#define MCU_STOP_SEC_CODE
#include "Mcu_MemMap.h"

#endif /* MCU_H_ */


